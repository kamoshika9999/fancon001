

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 10 16:15:23 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 2.40
    72                           ; Generated 17/11/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1827 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0115                     	;# 
   159  0116                     	;# 
   160  0117                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011D                     	;# 
   166  011E                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0194                     	;# 
   176  0195                     	;# 
   177  0196                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019C                     	;# 
   185  019C                     	;# 
   186  019D                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  020C                     	;# 
   190  020D                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0216                     	;# 
   203  0216                     	;# 
   204  0217                     	;# 
   205  0217                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  0291                     	;# 
   214  0291                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0294                     	;# 
   218  0295                     	;# 
   219  0295                     	;# 
   220  0296                     	;# 
   221  0298                     	;# 
   222  0298                     	;# 
   223  0299                     	;# 
   224  029A                     	;# 
   225  029B                     	;# 
   226  029C                     	;# 
   227  029C                     	;# 
   228  029D                     	;# 
   229  029E                     	;# 
   230  029E                     	;# 
   231  0311                     	;# 
   232  0311                     	;# 
   233  0312                     	;# 
   234  0313                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  0394                     	;# 
   240  0395                     	;# 
   241  0396                     	;# 
   242  039A                     	;# 
   243  039C                     	;# 
   244  039D                     	;# 
   245  039E                     	;# 
   246  039F                     	;# 
   247  0415                     	;# 
   248  0416                     	;# 
   249  0417                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  0FE4                     	;# 
   254  0FE5                     	;# 
   255  0FE6                     	;# 
   256  0FE7                     	;# 
   257  0FE8                     	;# 
   258  0FE9                     	;# 
   259  0FEA                     	;# 
   260  0FEB                     	;# 
   261  0FED                     	;# 
   262  0FEE                     	;# 
   263  0FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001E                     	;# 
   292  001F                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  0111                     	;# 
   313  0112                     	;# 
   314  0113                     	;# 
   315  0114                     	;# 
   316  0115                     	;# 
   317  0116                     	;# 
   318  0117                     	;# 
   319  0118                     	;# 
   320  0119                     	;# 
   321  011A                     	;# 
   322  011B                     	;# 
   323  011D                     	;# 
   324  011E                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0191                     	;# 
   328  0191                     	;# 
   329  0192                     	;# 
   330  0193                     	;# 
   331  0193                     	;# 
   332  0193                     	;# 
   333  0194                     	;# 
   334  0195                     	;# 
   335  0196                     	;# 
   336  0199                     	;# 
   337  019A                     	;# 
   338  019B                     	;# 
   339  019B                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019C                     	;# 
   343  019C                     	;# 
   344  019D                     	;# 
   345  019E                     	;# 
   346  019F                     	;# 
   347  020C                     	;# 
   348  020D                     	;# 
   349  0211                     	;# 
   350  0211                     	;# 
   351  0212                     	;# 
   352  0212                     	;# 
   353  0213                     	;# 
   354  0213                     	;# 
   355  0214                     	;# 
   356  0214                     	;# 
   357  0215                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0216                     	;# 
   361  0216                     	;# 
   362  0217                     	;# 
   363  0217                     	;# 
   364  0219                     	;# 
   365  021A                     	;# 
   366  021B                     	;# 
   367  021C                     	;# 
   368  021D                     	;# 
   369  021E                     	;# 
   370  021F                     	;# 
   371  0291                     	;# 
   372  0291                     	;# 
   373  0292                     	;# 
   374  0293                     	;# 
   375  0294                     	;# 
   376  0295                     	;# 
   377  0295                     	;# 
   378  0296                     	;# 
   379  0298                     	;# 
   380  0298                     	;# 
   381  0299                     	;# 
   382  029A                     	;# 
   383  029B                     	;# 
   384  029C                     	;# 
   385  029C                     	;# 
   386  029D                     	;# 
   387  029E                     	;# 
   388  029E                     	;# 
   389  0311                     	;# 
   390  0311                     	;# 
   391  0312                     	;# 
   392  0313                     	;# 
   393  0318                     	;# 
   394  0318                     	;# 
   395  0319                     	;# 
   396  031A                     	;# 
   397  0394                     	;# 
   398  0395                     	;# 
   399  0396                     	;# 
   400  039A                     	;# 
   401  039C                     	;# 
   402  039D                     	;# 
   403  039E                     	;# 
   404  039F                     	;# 
   405  0415                     	;# 
   406  0416                     	;# 
   407  0417                     	;# 
   408  041C                     	;# 
   409  041D                     	;# 
   410  041E                     	;# 
   411  0FE4                     	;# 
   412  0FE5                     	;# 
   413  0FE6                     	;# 
   414  0FE7                     	;# 
   415  0FE8                     	;# 
   416  0FE9                     	;# 
   417  0FEA                     	;# 
   418  0FEB                     	;# 
   419  0FED                     	;# 
   420  0FEE                     	;# 
   421  0FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0014                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  008C                     	;# 
   452  008D                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  0111                     	;# 
   471  0112                     	;# 
   472  0113                     	;# 
   473  0114                     	;# 
   474  0115                     	;# 
   475  0116                     	;# 
   476  0117                     	;# 
   477  0118                     	;# 
   478  0119                     	;# 
   479  011A                     	;# 
   480  011B                     	;# 
   481  011D                     	;# 
   482  011E                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  0191                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0194                     	;# 
   492  0195                     	;# 
   493  0196                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019D                     	;# 
   503  019E                     	;# 
   504  019F                     	;# 
   505  020C                     	;# 
   506  020D                     	;# 
   507  0211                     	;# 
   508  0211                     	;# 
   509  0212                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0213                     	;# 
   513  0214                     	;# 
   514  0214                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0216                     	;# 
   519  0216                     	;# 
   520  0217                     	;# 
   521  0217                     	;# 
   522  0219                     	;# 
   523  021A                     	;# 
   524  021B                     	;# 
   525  021C                     	;# 
   526  021D                     	;# 
   527  021E                     	;# 
   528  021F                     	;# 
   529  0291                     	;# 
   530  0291                     	;# 
   531  0292                     	;# 
   532  0293                     	;# 
   533  0294                     	;# 
   534  0295                     	;# 
   535  0295                     	;# 
   536  0296                     	;# 
   537  0298                     	;# 
   538  0298                     	;# 
   539  0299                     	;# 
   540  029A                     	;# 
   541  029B                     	;# 
   542  029C                     	;# 
   543  029C                     	;# 
   544  029D                     	;# 
   545  029E                     	;# 
   546  029E                     	;# 
   547  0311                     	;# 
   548  0311                     	;# 
   549  0312                     	;# 
   550  0313                     	;# 
   551  0318                     	;# 
   552  0318                     	;# 
   553  0319                     	;# 
   554  031A                     	;# 
   555  0394                     	;# 
   556  0395                     	;# 
   557  0396                     	;# 
   558  039A                     	;# 
   559  039C                     	;# 
   560  039D                     	;# 
   561  039E                     	;# 
   562  039F                     	;# 
   563  0415                     	;# 
   564  0416                     	;# 
   565  0417                     	;# 
   566  041C                     	;# 
   567  041D                     	;# 
   568  041E                     	;# 
   569  0FE4                     	;# 
   570  0FE5                     	;# 
   571  0FE6                     	;# 
   572  0FE7                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEB                     	;# 
   577  0FED                     	;# 
   578  0FEE                     	;# 
   579  0FEF                     	;# 
   580  0000                     	;# 
   581  0001                     	;# 
   582  0002                     	;# 
   583  0003                     	;# 
   584  0004                     	;# 
   585  0005                     	;# 
   586  0006                     	;# 
   587  0007                     	;# 
   588  0008                     	;# 
   589  0009                     	;# 
   590  000A                     	;# 
   591  000B                     	;# 
   592  000C                     	;# 
   593  000D                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0014                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  0019                     	;# 
   604  001A                     	;# 
   605  001B                     	;# 
   606  001C                     	;# 
   607  001E                     	;# 
   608  001F                     	;# 
   609  008C                     	;# 
   610  008D                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0097                     	;# 
   618  0098                     	;# 
   619  0099                     	;# 
   620  009A                     	;# 
   621  009B                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  010C                     	;# 
   627  010D                     	;# 
   628  0111                     	;# 
   629  0112                     	;# 
   630  0113                     	;# 
   631  0114                     	;# 
   632  0115                     	;# 
   633  0116                     	;# 
   634  0117                     	;# 
   635  0118                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011B                     	;# 
   639  011D                     	;# 
   640  011E                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0191                     	;# 
   644  0191                     	;# 
   645  0192                     	;# 
   646  0193                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0194                     	;# 
   650  0195                     	;# 
   651  0196                     	;# 
   652  0199                     	;# 
   653  019A                     	;# 
   654  019B                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019C                     	;# 
   659  019C                     	;# 
   660  019D                     	;# 
   661  019E                     	;# 
   662  019F                     	;# 
   663  020C                     	;# 
   664  020D                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0212                     	;# 
   669  0213                     	;# 
   670  0213                     	;# 
   671  0214                     	;# 
   672  0214                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0216                     	;# 
   677  0216                     	;# 
   678  0217                     	;# 
   679  0217                     	;# 
   680  0219                     	;# 
   681  021A                     	;# 
   682  021B                     	;# 
   683  021C                     	;# 
   684  021D                     	;# 
   685  021E                     	;# 
   686  021F                     	;# 
   687  0291                     	;# 
   688  0291                     	;# 
   689  0292                     	;# 
   690  0293                     	;# 
   691  0294                     	;# 
   692  0295                     	;# 
   693  0295                     	;# 
   694  0296                     	;# 
   695  0298                     	;# 
   696  0298                     	;# 
   697  0299                     	;# 
   698  029A                     	;# 
   699  029B                     	;# 
   700  029C                     	;# 
   701  029C                     	;# 
   702  029D                     	;# 
   703  029E                     	;# 
   704  029E                     	;# 
   705  0311                     	;# 
   706  0311                     	;# 
   707  0312                     	;# 
   708  0313                     	;# 
   709  0318                     	;# 
   710  0318                     	;# 
   711  0319                     	;# 
   712  031A                     	;# 
   713  0394                     	;# 
   714  0395                     	;# 
   715  0396                     	;# 
   716  039A                     	;# 
   717  039C                     	;# 
   718  039D                     	;# 
   719  039E                     	;# 
   720  039F                     	;# 
   721  0415                     	;# 
   722  0416                     	;# 
   723  0417                     	;# 
   724  041C                     	;# 
   725  041D                     	;# 
   726  041E                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000D                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0015                     	;# 
   757  0016                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001C                     	;# 
   765  001E                     	;# 
   766  001F                     	;# 
   767  008C                     	;# 
   768  008D                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0094                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0098                     	;# 
   777  0099                     	;# 
   778  009A                     	;# 
   779  009B                     	;# 
   780  009B                     	;# 
   781  009C                     	;# 
   782  009D                     	;# 
   783  009E                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  0111                     	;# 
   787  0112                     	;# 
   788  0113                     	;# 
   789  0114                     	;# 
   790  0115                     	;# 
   791  0116                     	;# 
   792  0117                     	;# 
   793  0118                     	;# 
   794  0119                     	;# 
   795  011A                     	;# 
   796  011B                     	;# 
   797  011D                     	;# 
   798  011E                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  020C                     	;# 
   822  020D                     	;# 
   823  0211                     	;# 
   824  0211                     	;# 
   825  0212                     	;# 
   826  0212                     	;# 
   827  0213                     	;# 
   828  0213                     	;# 
   829  0214                     	;# 
   830  0214                     	;# 
   831  0215                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0216                     	;# 
   835  0216                     	;# 
   836  0217                     	;# 
   837  0217                     	;# 
   838  0219                     	;# 
   839  021A                     	;# 
   840  021B                     	;# 
   841  021C                     	;# 
   842  021D                     	;# 
   843  021E                     	;# 
   844  021F                     	;# 
   845  0291                     	;# 
   846  0291                     	;# 
   847  0292                     	;# 
   848  0293                     	;# 
   849  0294                     	;# 
   850  0295                     	;# 
   851  0295                     	;# 
   852  0296                     	;# 
   853  0298                     	;# 
   854  0298                     	;# 
   855  0299                     	;# 
   856  029A                     	;# 
   857  029B                     	;# 
   858  029C                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  029E                     	;# 
   862  029E                     	;# 
   863  0311                     	;# 
   864  0311                     	;# 
   865  0312                     	;# 
   866  0313                     	;# 
   867  0318                     	;# 
   868  0318                     	;# 
   869  0319                     	;# 
   870  031A                     	;# 
   871  0394                     	;# 
   872  0395                     	;# 
   873  0396                     	;# 
   874  039A                     	;# 
   875  039C                     	;# 
   876  039D                     	;# 
   877  039E                     	;# 
   878  039F                     	;# 
   879  0415                     	;# 
   880  0416                     	;# 
   881  0417                     	;# 
   882  041C                     	;# 
   883  041D                     	;# 
   884  041E                     	;# 
   885  0FE4                     	;# 
   886  0FE5                     	;# 
   887  0FE6                     	;# 
   888  0FE7                     	;# 
   889  0FE8                     	;# 
   890  0FE9                     	;# 
   891  0FEA                     	;# 
   892  0FEB                     	;# 
   893  0FED                     	;# 
   894  0FEE                     	;# 
   895  0FEF                     	;# 
   896  0000                     	;# 
   897  0001                     	;# 
   898  0002                     	;# 
   899  0003                     	;# 
   900  0004                     	;# 
   901  0005                     	;# 
   902  0006                     	;# 
   903  0007                     	;# 
   904  0008                     	;# 
   905  0009                     	;# 
   906  000A                     	;# 
   907  000B                     	;# 
   908  000C                     	;# 
   909  000D                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0013                     	;# 
   913  0014                     	;# 
   914  0015                     	;# 
   915  0016                     	;# 
   916  0016                     	;# 
   917  0017                     	;# 
   918  0018                     	;# 
   919  0019                     	;# 
   920  001A                     	;# 
   921  001B                     	;# 
   922  001C                     	;# 
   923  001E                     	;# 
   924  001F                     	;# 
   925  008C                     	;# 
   926  008D                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0093                     	;# 
   930  0094                     	;# 
   931  0095                     	;# 
   932  0096                     	;# 
   933  0097                     	;# 
   934  0098                     	;# 
   935  0099                     	;# 
   936  009A                     	;# 
   937  009B                     	;# 
   938  009B                     	;# 
   939  009C                     	;# 
   940  009D                     	;# 
   941  009E                     	;# 
   942  010C                     	;# 
   943  010D                     	;# 
   944  0111                     	;# 
   945  0112                     	;# 
   946  0113                     	;# 
   947  0114                     	;# 
   948  0115                     	;# 
   949  0116                     	;# 
   950  0117                     	;# 
   951  0118                     	;# 
   952  0119                     	;# 
   953  011A                     	;# 
   954  011B                     	;# 
   955  011D                     	;# 
   956  011E                     	;# 
   957  018C                     	;# 
   958  018D                     	;# 
   959  0191                     	;# 
   960  0191                     	;# 
   961  0192                     	;# 
   962  0193                     	;# 
   963  0193                     	;# 
   964  0193                     	;# 
   965  0194                     	;# 
   966  0195                     	;# 
   967  0196                     	;# 
   968  0199                     	;# 
   969  019A                     	;# 
   970  019B                     	;# 
   971  019B                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019C                     	;# 
   975  019C                     	;# 
   976  019D                     	;# 
   977  019E                     	;# 
   978  019F                     	;# 
   979  020C                     	;# 
   980  020D                     	;# 
   981  0211                     	;# 
   982  0211                     	;# 
   983  0212                     	;# 
   984  0212                     	;# 
   985  0213                     	;# 
   986  0213                     	;# 
   987  0214                     	;# 
   988  0214                     	;# 
   989  0215                     	;# 
   990  0215                     	;# 
   991  0215                     	;# 
   992  0216                     	;# 
   993  0216                     	;# 
   994  0217                     	;# 
   995  0217                     	;# 
   996  0219                     	;# 
   997  021A                     	;# 
   998  021B                     	;# 
   999  021C                     	;# 
  1000  021D                     	;# 
  1001  021E                     	;# 
  1002  021F                     	;# 
  1003  0291                     	;# 
  1004  0291                     	;# 
  1005  0292                     	;# 
  1006  0293                     	;# 
  1007  0294                     	;# 
  1008  0295                     	;# 
  1009  0295                     	;# 
  1010  0296                     	;# 
  1011  0298                     	;# 
  1012  0298                     	;# 
  1013  0299                     	;# 
  1014  029A                     	;# 
  1015  029B                     	;# 
  1016  029C                     	;# 
  1017  029C                     	;# 
  1018  029D                     	;# 
  1019  029E                     	;# 
  1020  029E                     	;# 
  1021  0311                     	;# 
  1022  0311                     	;# 
  1023  0312                     	;# 
  1024  0313                     	;# 
  1025  0318                     	;# 
  1026  0318                     	;# 
  1027  0319                     	;# 
  1028  031A                     	;# 
  1029  0394                     	;# 
  1030  0395                     	;# 
  1031  0396                     	;# 
  1032  039A                     	;# 
  1033  039C                     	;# 
  1034  039D                     	;# 
  1035  039E                     	;# 
  1036  039F                     	;# 
  1037  0415                     	;# 
  1038  0416                     	;# 
  1039  0417                     	;# 
  1040  041C                     	;# 
  1041  041D                     	;# 
  1042  041E                     	;# 
  1043  0FE4                     	;# 
  1044  0FE5                     	;# 
  1045  0FE6                     	;# 
  1046  0FE7                     	;# 
  1047  0FE8                     	;# 
  1048  0FE9                     	;# 
  1049  0FEA                     	;# 
  1050  0FEB                     	;# 
  1051  0FED                     	;# 
  1052  0FEE                     	;# 
  1053  0FEF                     	;# 
  1054  0000                     	;# 
  1055  0001                     	;# 
  1056  0002                     	;# 
  1057  0003                     	;# 
  1058  0004                     	;# 
  1059  0005                     	;# 
  1060  0006                     	;# 
  1061  0007                     	;# 
  1062  0008                     	;# 
  1063  0009                     	;# 
  1064  000A                     	;# 
  1065  000B                     	;# 
  1066  000C                     	;# 
  1067  000D                     	;# 
  1068  0011                     	;# 
  1069  0012                     	;# 
  1070  0013                     	;# 
  1071  0014                     	;# 
  1072  0015                     	;# 
  1073  0016                     	;# 
  1074  0016                     	;# 
  1075  0017                     	;# 
  1076  0018                     	;# 
  1077  0019                     	;# 
  1078  001A                     	;# 
  1079  001B                     	;# 
  1080  001C                     	;# 
  1081  001E                     	;# 
  1082  001F                     	;# 
  1083  008C                     	;# 
  1084  008D                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0093                     	;# 
  1088  0094                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0097                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009A                     	;# 
  1095  009B                     	;# 
  1096  009B                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009E                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  0111                     	;# 
  1103  0112                     	;# 
  1104  0113                     	;# 
  1105  0114                     	;# 
  1106  0115                     	;# 
  1107  0116                     	;# 
  1108  0117                     	;# 
  1109  0118                     	;# 
  1110  0119                     	;# 
  1111  011A                     	;# 
  1112  011B                     	;# 
  1113  011D                     	;# 
  1114  011E                     	;# 
  1115  018C                     	;# 
  1116  018D                     	;# 
  1117  0191                     	;# 
  1118  0191                     	;# 
  1119  0192                     	;# 
  1120  0193                     	;# 
  1121  0193                     	;# 
  1122  0193                     	;# 
  1123  0194                     	;# 
  1124  0195                     	;# 
  1125  0196                     	;# 
  1126  0199                     	;# 
  1127  019A                     	;# 
  1128  019B                     	;# 
  1129  019B                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019C                     	;# 
  1133  019C                     	;# 
  1134  019D                     	;# 
  1135  019E                     	;# 
  1136  019F                     	;# 
  1137  020C                     	;# 
  1138  020D                     	;# 
  1139  0211                     	;# 
  1140  0211                     	;# 
  1141  0212                     	;# 
  1142  0212                     	;# 
  1143  0213                     	;# 
  1144  0213                     	;# 
  1145  0214                     	;# 
  1146  0214                     	;# 
  1147  0215                     	;# 
  1148  0215                     	;# 
  1149  0215                     	;# 
  1150  0216                     	;# 
  1151  0216                     	;# 
  1152  0217                     	;# 
  1153  0217                     	;# 
  1154  0219                     	;# 
  1155  021A                     	;# 
  1156  021B                     	;# 
  1157  021C                     	;# 
  1158  021D                     	;# 
  1159  021E                     	;# 
  1160  021F                     	;# 
  1161  0291                     	;# 
  1162  0291                     	;# 
  1163  0292                     	;# 
  1164  0293                     	;# 
  1165  0294                     	;# 
  1166  0295                     	;# 
  1167  0295                     	;# 
  1168  0296                     	;# 
  1169  0298                     	;# 
  1170  0298                     	;# 
  1171  0299                     	;# 
  1172  029A                     	;# 
  1173  029B                     	;# 
  1174  029C                     	;# 
  1175  029C                     	;# 
  1176  029D                     	;# 
  1177  029E                     	;# 
  1178  029E                     	;# 
  1179  0311                     	;# 
  1180  0311                     	;# 
  1181  0312                     	;# 
  1182  0313                     	;# 
  1183  0318                     	;# 
  1184  0318                     	;# 
  1185  0319                     	;# 
  1186  031A                     	;# 
  1187  0394                     	;# 
  1188  0395                     	;# 
  1189  0396                     	;# 
  1190  039A                     	;# 
  1191  039C                     	;# 
  1192  039D                     	;# 
  1193  039E                     	;# 
  1194  039F                     	;# 
  1195  0415                     	;# 
  1196  0416                     	;# 
  1197  0417                     	;# 
  1198  041C                     	;# 
  1199  041D                     	;# 
  1200  041E                     	;# 
  1201  0FE4                     	;# 
  1202  0FE5                     	;# 
  1203  0FE6                     	;# 
  1204  0FE7                     	;# 
  1205  0FE8                     	;# 
  1206  0FE9                     	;# 
  1207  0FEA                     	;# 
  1208  0FEB                     	;# 
  1209  0FED                     	;# 
  1210  0FEE                     	;# 
  1211  0FEF                     	;# 
  1212  0000                     	;# 
  1213  0001                     	;# 
  1214  0002                     	;# 
  1215  0003                     	;# 
  1216  0004                     	;# 
  1217  0005                     	;# 
  1218  0006                     	;# 
  1219  0007                     	;# 
  1220  0008                     	;# 
  1221  0009                     	;# 
  1222  000A                     	;# 
  1223  000B                     	;# 
  1224  000C                     	;# 
  1225  000D                     	;# 
  1226  0011                     	;# 
  1227  0012                     	;# 
  1228  0013                     	;# 
  1229  0014                     	;# 
  1230  0015                     	;# 
  1231  0016                     	;# 
  1232  0016                     	;# 
  1233  0017                     	;# 
  1234  0018                     	;# 
  1235  0019                     	;# 
  1236  001A                     	;# 
  1237  001B                     	;# 
  1238  001C                     	;# 
  1239  001E                     	;# 
  1240  001F                     	;# 
  1241  008C                     	;# 
  1242  008D                     	;# 
  1243  0091                     	;# 
  1244  0092                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  0111                     	;# 
  1261  0112                     	;# 
  1262  0113                     	;# 
  1263  0114                     	;# 
  1264  0115                     	;# 
  1265  0116                     	;# 
  1266  0117                     	;# 
  1267  0118                     	;# 
  1268  0119                     	;# 
  1269  011A                     	;# 
  1270  011B                     	;# 
  1271  011D                     	;# 
  1272  011E                     	;# 
  1273  018C                     	;# 
  1274  018D                     	;# 
  1275  0191                     	;# 
  1276  0191                     	;# 
  1277  0192                     	;# 
  1278  0193                     	;# 
  1279  0193                     	;# 
  1280  0193                     	;# 
  1281  0194                     	;# 
  1282  0195                     	;# 
  1283  0196                     	;# 
  1284  0199                     	;# 
  1285  019A                     	;# 
  1286  019B                     	;# 
  1287  019B                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019C                     	;# 
  1291  019C                     	;# 
  1292  019D                     	;# 
  1293  019E                     	;# 
  1294  019F                     	;# 
  1295  020C                     	;# 
  1296  020D                     	;# 
  1297  0211                     	;# 
  1298  0211                     	;# 
  1299  0212                     	;# 
  1300  0212                     	;# 
  1301  0213                     	;# 
  1302  0213                     	;# 
  1303  0214                     	;# 
  1304  0214                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0215                     	;# 
  1308  0216                     	;# 
  1309  0216                     	;# 
  1310  0217                     	;# 
  1311  0217                     	;# 
  1312  0219                     	;# 
  1313  021A                     	;# 
  1314  021B                     	;# 
  1315  021C                     	;# 
  1316  021D                     	;# 
  1317  021E                     	;# 
  1318  021F                     	;# 
  1319  0291                     	;# 
  1320  0291                     	;# 
  1321  0292                     	;# 
  1322  0293                     	;# 
  1323  0294                     	;# 
  1324  0295                     	;# 
  1325  0295                     	;# 
  1326  0296                     	;# 
  1327  0298                     	;# 
  1328  0298                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029B                     	;# 
  1332  029C                     	;# 
  1333  029C                     	;# 
  1334  029D                     	;# 
  1335  029E                     	;# 
  1336  029E                     	;# 
  1337  0311                     	;# 
  1338  0311                     	;# 
  1339  0312                     	;# 
  1340  0313                     	;# 
  1341  0318                     	;# 
  1342  0318                     	;# 
  1343  0319                     	;# 
  1344  031A                     	;# 
  1345  0394                     	;# 
  1346  0395                     	;# 
  1347  0396                     	;# 
  1348  039A                     	;# 
  1349  039C                     	;# 
  1350  039D                     	;# 
  1351  039E                     	;# 
  1352  039F                     	;# 
  1353  0415                     	;# 
  1354  0416                     	;# 
  1355  0417                     	;# 
  1356  041C                     	;# 
  1357  041D                     	;# 
  1358  041E                     	;# 
  1359  0FE4                     	;# 
  1360  0FE5                     	;# 
  1361  0FE6                     	;# 
  1362  0FE7                     	;# 
  1363  0FE8                     	;# 
  1364  0FE9                     	;# 
  1365  0FEA                     	;# 
  1366  0FEB                     	;# 
  1367  0FED                     	;# 
  1368  0FEE                     	;# 
  1369  0FEF                     	;# 
  1370  0000                     	;# 
  1371  0001                     	;# 
  1372  0002                     	;# 
  1373  0003                     	;# 
  1374  0004                     	;# 
  1375  0005                     	;# 
  1376  0006                     	;# 
  1377  0007                     	;# 
  1378  0008                     	;# 
  1379  0009                     	;# 
  1380  000A                     	;# 
  1381  000B                     	;# 
  1382  000C                     	;# 
  1383  000D                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0013                     	;# 
  1387  0014                     	;# 
  1388  0015                     	;# 
  1389  0016                     	;# 
  1390  0016                     	;# 
  1391  0017                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  001B                     	;# 
  1396  001C                     	;# 
  1397  001E                     	;# 
  1398  001F                     	;# 
  1399  008C                     	;# 
  1400  008D                     	;# 
  1401  0091                     	;# 
  1402  0092                     	;# 
  1403  0093                     	;# 
  1404  0094                     	;# 
  1405  0095                     	;# 
  1406  0096                     	;# 
  1407  0097                     	;# 
  1408  0098                     	;# 
  1409  0099                     	;# 
  1410  009A                     	;# 
  1411  009B                     	;# 
  1412  009B                     	;# 
  1413  009C                     	;# 
  1414  009D                     	;# 
  1415  009E                     	;# 
  1416  010C                     	;# 
  1417  010D                     	;# 
  1418  0111                     	;# 
  1419  0112                     	;# 
  1420  0113                     	;# 
  1421  0114                     	;# 
  1422  0115                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  0118                     	;# 
  1426  0119                     	;# 
  1427  011A                     	;# 
  1428  011B                     	;# 
  1429  011D                     	;# 
  1430  011E                     	;# 
  1431  018C                     	;# 
  1432  018D                     	;# 
  1433  0191                     	;# 
  1434  0191                     	;# 
  1435  0192                     	;# 
  1436  0193                     	;# 
  1437  0193                     	;# 
  1438  0193                     	;# 
  1439  0194                     	;# 
  1440  0195                     	;# 
  1441  0196                     	;# 
  1442  0199                     	;# 
  1443  019A                     	;# 
  1444  019B                     	;# 
  1445  019B                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019C                     	;# 
  1449  019C                     	;# 
  1450  019D                     	;# 
  1451  019E                     	;# 
  1452  019F                     	;# 
  1453  020C                     	;# 
  1454  020D                     	;# 
  1455  0211                     	;# 
  1456  0211                     	;# 
  1457  0212                     	;# 
  1458  0212                     	;# 
  1459  0213                     	;# 
  1460  0213                     	;# 
  1461  0214                     	;# 
  1462  0214                     	;# 
  1463  0215                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0216                     	;# 
  1467  0216                     	;# 
  1468  0217                     	;# 
  1469  0217                     	;# 
  1470  0219                     	;# 
  1471  021A                     	;# 
  1472  021B                     	;# 
  1473  021C                     	;# 
  1474  021D                     	;# 
  1475  021E                     	;# 
  1476  021F                     	;# 
  1477  0291                     	;# 
  1478  0291                     	;# 
  1479  0292                     	;# 
  1480  0293                     	;# 
  1481  0294                     	;# 
  1482  0295                     	;# 
  1483  0295                     	;# 
  1484  0296                     	;# 
  1485  0298                     	;# 
  1486  0298                     	;# 
  1487  0299                     	;# 
  1488  029A                     	;# 
  1489  029B                     	;# 
  1490  029C                     	;# 
  1491  029C                     	;# 
  1492  029D                     	;# 
  1493  029E                     	;# 
  1494  029E                     	;# 
  1495  0311                     	;# 
  1496  0311                     	;# 
  1497  0312                     	;# 
  1498  0313                     	;# 
  1499  0318                     	;# 
  1500  0318                     	;# 
  1501  0319                     	;# 
  1502  031A                     	;# 
  1503  0394                     	;# 
  1504  0395                     	;# 
  1505  0396                     	;# 
  1506  039A                     	;# 
  1507  039C                     	;# 
  1508  039D                     	;# 
  1509  039E                     	;# 
  1510  039F                     	;# 
  1511  0415                     	;# 
  1512  0416                     	;# 
  1513  0417                     	;# 
  1514  041C                     	;# 
  1515  041D                     	;# 
  1516  041E                     	;# 
  1517  0FE4                     	;# 
  1518  0FE5                     	;# 
  1519  0FE6                     	;# 
  1520  0FE7                     	;# 
  1521  0FE8                     	;# 
  1522  0FE9                     	;# 
  1523  0FEA                     	;# 
  1524  0FEB                     	;# 
  1525  0FED                     	;# 
  1526  0FEE                     	;# 
  1527  0FEF                     	;# 
  1528  0000                     	;# 
  1529  0001                     	;# 
  1530  0002                     	;# 
  1531  0003                     	;# 
  1532  0004                     	;# 
  1533  0005                     	;# 
  1534  0006                     	;# 
  1535  0007                     	;# 
  1536  0008                     	;# 
  1537  0009                     	;# 
  1538  000A                     	;# 
  1539  000B                     	;# 
  1540  000C                     	;# 
  1541  000D                     	;# 
  1542  0011                     	;# 
  1543  0012                     	;# 
  1544  0013                     	;# 
  1545  0014                     	;# 
  1546  0015                     	;# 
  1547  0016                     	;# 
  1548  0016                     	;# 
  1549  0017                     	;# 
  1550  0018                     	;# 
  1551  0019                     	;# 
  1552  001A                     	;# 
  1553  001B                     	;# 
  1554  001C                     	;# 
  1555  001E                     	;# 
  1556  001F                     	;# 
  1557  008C                     	;# 
  1558  008D                     	;# 
  1559  0091                     	;# 
  1560  0092                     	;# 
  1561  0093                     	;# 
  1562  0094                     	;# 
  1563  0095                     	;# 
  1564  0096                     	;# 
  1565  0097                     	;# 
  1566  0098                     	;# 
  1567  0099                     	;# 
  1568  009A                     	;# 
  1569  009B                     	;# 
  1570  009B                     	;# 
  1571  009C                     	;# 
  1572  009D                     	;# 
  1573  009E                     	;# 
  1574  010C                     	;# 
  1575  010D                     	;# 
  1576  0111                     	;# 
  1577  0112                     	;# 
  1578  0113                     	;# 
  1579  0114                     	;# 
  1580  0115                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  0118                     	;# 
  1584  0119                     	;# 
  1585  011A                     	;# 
  1586  011B                     	;# 
  1587  011D                     	;# 
  1588  011E                     	;# 
  1589  018C                     	;# 
  1590  018D                     	;# 
  1591  0191                     	;# 
  1592  0191                     	;# 
  1593  0192                     	;# 
  1594  0193                     	;# 
  1595  0193                     	;# 
  1596  0193                     	;# 
  1597  0194                     	;# 
  1598  0195                     	;# 
  1599  0196                     	;# 
  1600  0199                     	;# 
  1601  019A                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019C                     	;# 
  1607  019C                     	;# 
  1608  019D                     	;# 
  1609  019E                     	;# 
  1610  019F                     	;# 
  1611  020C                     	;# 
  1612  020D                     	;# 
  1613  0211                     	;# 
  1614  0211                     	;# 
  1615  0212                     	;# 
  1616  0212                     	;# 
  1617  0213                     	;# 
  1618  0213                     	;# 
  1619  0214                     	;# 
  1620  0214                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0216                     	;# 
  1625  0216                     	;# 
  1626  0217                     	;# 
  1627  0217                     	;# 
  1628  0219                     	;# 
  1629  021A                     	;# 
  1630  021B                     	;# 
  1631  021C                     	;# 
  1632  021D                     	;# 
  1633  021E                     	;# 
  1634  021F                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0294                     	;# 
  1640  0295                     	;# 
  1641  0295                     	;# 
  1642  0296                     	;# 
  1643  0298                     	;# 
  1644  0298                     	;# 
  1645  0299                     	;# 
  1646  029A                     	;# 
  1647  029B                     	;# 
  1648  029C                     	;# 
  1649  029C                     	;# 
  1650  029D                     	;# 
  1651  029E                     	;# 
  1652  029E                     	;# 
  1653  0311                     	;# 
  1654  0311                     	;# 
  1655  0312                     	;# 
  1656  0313                     	;# 
  1657  0318                     	;# 
  1658  0318                     	;# 
  1659  0319                     	;# 
  1660  031A                     	;# 
  1661  0394                     	;# 
  1662  0395                     	;# 
  1663  0396                     	;# 
  1664  039A                     	;# 
  1665  039C                     	;# 
  1666  039D                     	;# 
  1667  039E                     	;# 
  1668  039F                     	;# 
  1669  0415                     	;# 
  1670  0416                     	;# 
  1671  0417                     	;# 
  1672  041C                     	;# 
  1673  041D                     	;# 
  1674  041E                     	;# 
  1675  0FE4                     	;# 
  1676  0FE5                     	;# 
  1677  0FE6                     	;# 
  1678  0FE7                     	;# 
  1679  0FE8                     	;# 
  1680  0FE9                     	;# 
  1681  0FEA                     	;# 
  1682  0FEB                     	;# 
  1683  0FED                     	;# 
  1684  0FEE                     	;# 
  1685  0FEF                     	;# 
  1686  0000                     	;# 
  1687  0001                     	;# 
  1688  0002                     	;# 
  1689  0003                     	;# 
  1690  0004                     	;# 
  1691  0005                     	;# 
  1692  0006                     	;# 
  1693  0007                     	;# 
  1694  0008                     	;# 
  1695  0009                     	;# 
  1696  000A                     	;# 
  1697  000B                     	;# 
  1698  000C                     	;# 
  1699  000D                     	;# 
  1700  0011                     	;# 
  1701  0012                     	;# 
  1702  0013                     	;# 
  1703  0014                     	;# 
  1704  0015                     	;# 
  1705  0016                     	;# 
  1706  0016                     	;# 
  1707  0017                     	;# 
  1708  0018                     	;# 
  1709  0019                     	;# 
  1710  001A                     	;# 
  1711  001B                     	;# 
  1712  001C                     	;# 
  1713  001E                     	;# 
  1714  001F                     	;# 
  1715  008C                     	;# 
  1716  008D                     	;# 
  1717  0091                     	;# 
  1718  0092                     	;# 
  1719  0093                     	;# 
  1720  0094                     	;# 
  1721  0095                     	;# 
  1722  0096                     	;# 
  1723  0097                     	;# 
  1724  0098                     	;# 
  1725  0099                     	;# 
  1726  009A                     	;# 
  1727  009B                     	;# 
  1728  009B                     	;# 
  1729  009C                     	;# 
  1730  009D                     	;# 
  1731  009E                     	;# 
  1732  010C                     	;# 
  1733  010D                     	;# 
  1734  0111                     	;# 
  1735  0112                     	;# 
  1736  0113                     	;# 
  1737  0114                     	;# 
  1738  0115                     	;# 
  1739  0116                     	;# 
  1740  0117                     	;# 
  1741  0118                     	;# 
  1742  0119                     	;# 
  1743  011A                     	;# 
  1744  011B                     	;# 
  1745  011D                     	;# 
  1746  011E                     	;# 
  1747  018C                     	;# 
  1748  018D                     	;# 
  1749  0191                     	;# 
  1750  0191                     	;# 
  1751  0192                     	;# 
  1752  0193                     	;# 
  1753  0193                     	;# 
  1754  0193                     	;# 
  1755  0194                     	;# 
  1756  0195                     	;# 
  1757  0196                     	;# 
  1758  0199                     	;# 
  1759  019A                     	;# 
  1760  019B                     	;# 
  1761  019B                     	;# 
  1762  019B                     	;# 
  1763  019B                     	;# 
  1764  019C                     	;# 
  1765  019C                     	;# 
  1766  019D                     	;# 
  1767  019E                     	;# 
  1768  019F                     	;# 
  1769  020C                     	;# 
  1770  020D                     	;# 
  1771  0211                     	;# 
  1772  0211                     	;# 
  1773  0212                     	;# 
  1774  0212                     	;# 
  1775  0213                     	;# 
  1776  0213                     	;# 
  1777  0214                     	;# 
  1778  0214                     	;# 
  1779  0215                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0216                     	;# 
  1783  0216                     	;# 
  1784  0217                     	;# 
  1785  0217                     	;# 
  1786  0219                     	;# 
  1787  021A                     	;# 
  1788  021B                     	;# 
  1789  021C                     	;# 
  1790  021D                     	;# 
  1791  021E                     	;# 
  1792  021F                     	;# 
  1793  0291                     	;# 
  1794  0291                     	;# 
  1795  0292                     	;# 
  1796  0293                     	;# 
  1797  0294                     	;# 
  1798  0295                     	;# 
  1799  0295                     	;# 
  1800  0296                     	;# 
  1801  0298                     	;# 
  1802  0298                     	;# 
  1803  0299                     	;# 
  1804  029A                     	;# 
  1805  029B                     	;# 
  1806  029C                     	;# 
  1807  029C                     	;# 
  1808  029D                     	;# 
  1809  029E                     	;# 
  1810  029E                     	;# 
  1811  0311                     	;# 
  1812  0311                     	;# 
  1813  0312                     	;# 
  1814  0313                     	;# 
  1815  0318                     	;# 
  1816  0318                     	;# 
  1817  0319                     	;# 
  1818  031A                     	;# 
  1819  0394                     	;# 
  1820  0395                     	;# 
  1821  0396                     	;# 
  1822  039A                     	;# 
  1823  039C                     	;# 
  1824  039D                     	;# 
  1825  039E                     	;# 
  1826  039F                     	;# 
  1827  0415                     	;# 
  1828  0416                     	;# 
  1829  0417                     	;# 
  1830  041C                     	;# 
  1831  041D                     	;# 
  1832  041E                     	;# 
  1833  0FE4                     	;# 
  1834  0FE5                     	;# 
  1835  0FE6                     	;# 
  1836  0FE7                     	;# 
  1837  0FE8                     	;# 
  1838  0FE9                     	;# 
  1839  0FEA                     	;# 
  1840  0FEB                     	;# 
  1841  0FED                     	;# 
  1842  0FEE                     	;# 
  1843  0FEF                     	;# 
  1844                           
  1845 ;; Function _EUSART_is_tx_ready is unused but had its address taken
  1846  0000                     
  1847 ;; Function _EUSART_is_rx_ready is unused but had its address taken
  1848  0000                     
  1849 ;; Function _EUSART_is_tx_done is unused but had its address taken
  1850  0000                     
  1851 ;; Function _EUSART_Read is unused but had its address taken
  1852  0000                     
  1853                           	psect	idataBANK1
  1854  0002                     __pidataBANK1:
  1855                           
  1856                           ;initializer for _string
  1857  0002  3439               	retlw	low (STR_1| (0+32768))
  1858  0003  3488               	retlw	high (STR_1| (0+32768))
  1859                           
  1860                           	psect	stringtext1
  1861  0814                     __pstringtext1:
  1862  0814                     _uart:
  1863  0814  3400               	retlw	0
  1864  0815  3400               	retlw	0
  1865  0816  3475               	retlw	low _EUSART_Write
  1866  0817  340F               	retlw	high _EUSART_Write
  1867  0818  3400               	retlw	0
  1868  0819  3400               	retlw	0
  1869  081A  3400               	retlw	0
  1870  081B  3400               	retlw	0
  1871  081C  3432               	retlw	low _EUSART_SetTxInterruptHandler
  1872  081D  340E               	retlw	high _EUSART_SetTxInterruptHandler
  1873  081E  34A4               	retlw	low _EUSART_Receive_ISR
  1874  081F  3407               	retlw	high _EUSART_Receive_ISR
  1875  0820  3429               	retlw	low _EUSART_SetRxInterruptHandler
  1876  0821  340E               	retlw	high _EUSART_SetRxInterruptHandler
  1877  0822  3400               	retlw	0
  1878  0823  3400               	retlw	0
  1879  0824  34DD               	retlw	low _EUSART_Transmit_ISR
  1880  0825  3407               	retlw	high _EUSART_Transmit_ISR
  1881  0826  34E0               	retlw	low _EUSART_Initialize
  1882  0827  3406               	retlw	high _EUSART_Initialize
  1883  0828                     __end_of_uart:
  1884                           
  1885                           	psect	nvBANK1
  1886  00D6                     __pnvBANK1:
  1887  00D6                     _TMR4_InterruptHandler:
  1888  00D6                     	ds	2
  1889  00D8                     _EUSART_OverrunErrorHandler:
  1890  00D8                     	ds	2
  1891  00DA                     _EUSART_FramingErrorHandler:
  1892  00DA                     	ds	2
  1893  00DC                     _EUSART_RxDefaultInterruptHandler:
  1894  00DC                     	ds	2
  1895  00DE                     _EUSART_TxDefaultInterruptHandler:
  1896  00DE                     	ds	2
  1897  00E0                     _eusartTxBufferRemaining:
  1898  00E0                     	ds	1
  1899                           
  1900                           	psect	nvBANK2
  1901  015E                     __pnvBANK2:
  1902  015E                     _EUSART_ErrorHandler:
  1903  015E                     	ds	2
  1904  000C                     _PORTAbits	set	12
  1905  0013                     _PIR3bits	set	19
  1906  000B                     _INTCONbits	set	11
  1907  001C                     _T2CONbits	set	28
  1908  001C                     _T2CON	set	28
  1909  0011                     _PIR1bits	set	17
  1910  001A                     _TMR2	set	26
  1911  001B                     _PR2	set	27
  1912  0093                     _PIE3bits	set	147
  1913  0095                     _OPTION_REGbits	set	149
  1914  008D                     _TRISB	set	141
  1915  008C                     _TRISA	set	140
  1916  0097                     _WDTCON	set	151
  1917  0098                     _OSCTUNE	set	152
  1918  0099                     _OSCCON	set	153
  1919  0091                     _PIE1bits	set	145
  1920  011E                     _APFCON1	set	286
  1921  011D                     _APFCON0	set	285
  1922  010D                     _LATB	set	269
  1923  010C                     _LATA	set	268
  1924  0116                     _BORCON	set	278
  1925  018C                     _ANSELA	set	396
  1926  018D                     _ANSELB	set	397
  1927  0199                     _RCREG	set	409
  1928  019D                     _RCSTAbits	set	413
  1929  019A                     _TXREG	set	410
  1930  019E                     _TXSTAbits	set	414
  1931  019C                     _SPBRGH	set	412
  1932  019B                     _SPBRGL	set	411
  1933  019E                     _TXSTA	set	414
  1934  019D                     _RCSTA	set	413
  1935  019F                     _BAUDCON	set	415
  1936  020C                     _WPUA	set	524
  1937  020D                     _WPUB	set	525
  1938  029E                     _CCPTMRS0bits	set	670
  1939  0291                     _CCPR1L	set	657
  1940  0292                     _CCPR1H	set	658
  1941  0296                     _PSTR1CON	set	662
  1942  0294                     _PWM1CON	set	660
  1943  0295                     _ECCP1AS	set	661
  1944  0293                     _CCP1CON	set	659
  1945  0417                     _T4CONbits	set	1047
  1946  0417                     _T4CON	set	1047
  1947  0415                     _TMR4	set	1045
  1948  0416                     _PR4	set	1046
  1949                           
  1950                           	psect	stringtext2
  1951  0766                     __pstringtext2:
  1952  0766                     STR_3:
  1953  0766  3452               	retlw	82	;'R'
  1954  0767  3465               	retlw	101	;'e'
  1955  0768  3463               	retlw	99	;'c'
  1956  0769  3465               	retlw	101	;'e'
  1957  076A  3469               	retlw	105	;'i'
  1958  076B  3476               	retlw	118	;'v'
  1959  076C  3465               	retlw	101	;'e'
  1960  076D  3420               	retlw	32	;' '
  1961  076E  3474               	retlw	116	;'t'
  1962  076F  3465               	retlw	101	;'e'
  1963  0770  3473               	retlw	115	;'s'
  1964  0771  3474               	retlw	116	;'t'
  1965  0772  343A               	retlw	58	;':'
  1966  0773  3420               	retlw	32	;' '
  1967  0774  3454               	retlw	84	;'T'
  1968  0775  3479               	retlw	121	;'y'
  1969  0776  3470               	retlw	112	;'p'
  1970  0777  3465               	retlw	101	;'e'
  1971  0778  3420               	retlw	32	;' '
  1972  0779  3461               	retlw	97	;'a'
  1973  077A  3420               	retlw	32	;' '
  1974  077B  346D               	retlw	109	;'m'
  1975  077C  3465               	retlw	101	;'e'
  1976  077D  3473               	retlw	115	;'s'
  1977  077E  3473               	retlw	115	;'s'
  1978  077F  3461               	retlw	97	;'a'
  1979  0780  3467               	retlw	103	;'g'
  1980  0781  3465               	retlw	101	;'e'
  1981  0782  3420               	retlw	32	;' '
  1982  0783  3474               	retlw	116	;'t'
  1983  0784  3468               	retlw	104	;'h'
  1984  0785  3465               	retlw	101	;'e'
  1985  0786  346E               	retlw	110	;'n'
  1986  0787  3420               	retlw	32	;' '
  1987  0788  3470               	retlw	112	;'p'
  1988  0789  3472               	retlw	114	;'r'
  1989  078A  3465               	retlw	101	;'e'
  1990  078B  3473               	retlw	115	;'s'
  1991  078C  3473               	retlw	115	;'s'
  1992  078D  3420               	retlw	32	;' '
  1993  078E  3465               	retlw	101	;'e'
  1994  078F  346E               	retlw	110	;'n'
  1995  0790  3474               	retlw	116	;'t'
  1996  0791  3465               	retlw	101	;'e'
  1997  0792  3472               	retlw	114	;'r'
  1998  0793  3420               	retlw	32	;' '
  1999  0794  3428               	retlw	40	;'('
  2000  0795  346D               	retlw	109	;'m'
  2001  0796  3461               	retlw	97	;'a'
  2002  0797  3478               	retlw	120	;'x'
  2003  0798  3420               	retlw	32	;' '
  2004  0799  3431               	retlw	49	;'1'
  2005  079A  3436               	retlw	54	;'6'
  2006  079B  3420               	retlw	32	;' '
  2007  079C  3463               	retlw	99	;'c'
  2008  079D  3468               	retlw	104	;'h'
  2009  079E  3461               	retlw	97	;'a'
  2010  079F  3472               	retlw	114	;'r'
  2011  07A0  3473               	retlw	115	;'s'
  2012  07A1  3429               	retlw	41	;')'
  2013  07A2  343A               	retlw	58	;':'
  2014  07A3  3400               	retlw	0
  2015                           
  2016                           	psect	stringtext3
  2017  07FE                     __pstringtext3:
  2018  07FE                     STR_7:
  2019  07FE  3464               	retlw	100	;'d'
  2020  07FF  3475               	retlw	117	;'u'
  2021  0800  3474               	retlw	116	;'t'
  2022  0801  3479               	retlw	121	;'y'
  2023  0802  343D               	retlw	61	;'='
  2024  0803  3425               	retlw	37	;'%'
  2025  0804  3464               	retlw	100	;'d'
  2026  0805  3420               	retlw	32	;' '
  2027  0806  346F               	retlw	111	;'o'
  2028  0807  346C               	retlw	108	;'l'
  2029  0808  3464               	retlw	100	;'d'
  2030  0809  345F               	retlw	95	;'_'
  2031  080A  3464               	retlw	100	;'d'
  2032  080B  3475               	retlw	117	;'u'
  2033  080C  3474               	retlw	116	;'t'
  2034  080D  3479               	retlw	121	;'y'
  2035  080E  343D               	retlw	61	;'='
  2036  080F  3425               	retlw	37	;'%'
  2037  0810  3464               	retlw	100	;'d'
  2038  0811  340D               	retlw	13
  2039  0812  340A               	retlw	10
  2040  0813  3400               	retlw	0
  2041                           
  2042                           	psect	stringtext4
  2043  0828                     __pstringtext4:
  2044  0828                     STR_2:
  2045  0828  3448               	retlw	72	;'H'
  2046  0829  3465               	retlw	101	;'e'
  2047  082A  346C               	retlw	108	;'l'
  2048  082B  346C               	retlw	108	;'l'
  2049  082C  346F               	retlw	111	;'o'
  2050  082D  3420               	retlw	32	;' '
  2051  082E  3457               	retlw	87	;'W'
  2052  082F  346F               	retlw	111	;'o'
  2053  0830  3472               	retlw	114	;'r'
  2054  0831  346C               	retlw	108	;'l'
  2055  0832  3464               	retlw	100	;'d'
  2056  0833  3421               	retlw	33	;'!'
  2057  0834  3420               	retlw	32	;' '
  2058  0835  3425               	retlw	37	;'%'
  2059  0836  3464               	retlw	100	;'d'
  2060  0837  340A               	retlw	10
  2061  0838  3400               	retlw	0
  2062                           
  2063                           	psect	stringtext5
  2064  0839                     __pstringtext5:
  2065  0839                     STR_1:
  2066  0839  3454               	retlw	84	;'T'
  2067  083A  3472               	retlw	114	;'r'
  2068  083B  3461               	retlw	97	;'a'
  2069  083C  346E               	retlw	110	;'n'
  2070  083D  3473               	retlw	115	;'s'
  2071  083E  346D               	retlw	109	;'m'
  2072  083F  3469               	retlw	105	;'i'
  2073  0840  3474               	retlw	116	;'t'
  2074  0841  3420               	retlw	32	;' '
  2075  0842  3474               	retlw	116	;'t'
  2076  0843  3465               	retlw	101	;'e'
  2077  0844  3473               	retlw	115	;'s'
  2078  0845  3474               	retlw	116	;'t'
  2079  0846  340A               	retlw	10
  2080  0847  3400               	retlw	0
  2081                           
  2082                           	psect	stringtext6
  2083  0848                     __pstringtext6:
  2084  0848                     STR_4:
  2085  0848  3459               	retlw	89	;'Y'
  2086  0849  346F               	retlw	111	;'o'
  2087  084A  3475               	retlw	117	;'u'
  2088  084B  3420               	retlw	32	;' '
  2089  084C  3474               	retlw	116	;'t'
  2090  084D  3479               	retlw	121	;'y'
  2091  084E  3470               	retlw	112	;'p'
  2092  084F  3465               	retlw	101	;'e'
  2093  0850  3464               	retlw	100	;'d'
  2094  0851  343A               	retlw	58	;':'
  2095  0852  3420               	retlw	32	;' '
  2096  0853  3400               	retlw	0
  2097                           
  2098                           	psect	stringtext7
  2099  0854                     __pstringtext7:
  2100  0854                     STR_6:
  2101  0854  340A               	retlw	10
  2102  0855  346F               	retlw	111	;'o'
  2103  0856  346B               	retlw	107	;'k'
  2104  0857  3400               	retlw	0
  2105                           
  2106                           	psect	stringtext8
  2107  0858                     __pstringtext8:
  2108  0858                     STR_5:
  2109  0858  3425               	retlw	37	;'%'
  2110  0859  3463               	retlw	99	;'c'
  2111  085A  3400               	retlw	0
  2112                           
  2113                           	psect	stringtext9
  2114  0000                     __pstringtext9:
  2115                           
  2116                           	psect	cinit
  2117  003E                     start_initialization:	
  2118                           ; #config settings
  2119                           
  2120  003E                     __initialization:
  2121                           
  2122                           ; Initialize objects allocated to BANK1
  2123  003E  0021               	movlb	1	; select bank1
  2124  003F  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  2125  0042  00E1               	movwf	__pdataBANK1& (0+127)
  2126  0043  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  2127  0046  00E2               	movwf	(__pdataBANK1+1)& (0+127)
  2128                           
  2129                           ; Clear objects allocated to COMMON
  2130  0047  01F0               	clrf	__pbssCOMMON& (0+127)
  2131  0048  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2132  0049  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2133  004A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2134  004B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2135  004C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2136                           
  2137                           ; Clear objects allocated to BANK1
  2138  004D  30A0               	movlw	low __pbssBANK1
  2139  004E  0084               	movwf	4
  2140  004F  3000               	movlw	high __pbssBANK1
  2141  0050  0085               	movwf	5
  2142  0051  3028               	movlw	40
  2143  0052  318D  25F9  3180   	fcall	clear_ram0
  2144                           
  2145                           ; Clear objects allocated to BANK2
  2146  0055  3020               	movlw	low __pbssBANK2
  2147  0056  0084               	movwf	4
  2148  0057  3001               	movlw	high __pbssBANK2
  2149  0058  0085               	movwf	5
  2150  0059  3030               	movlw	48
  2151  005A  318D  25F9  3180   	fcall	clear_ram0
  2152  005D                     end_of_initialization:	
  2153                           ;End of C runtime variable initialization code
  2154                           
  2155  005D                     __end_of__initialization:
  2156  005D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2157  005E  0020               	movlb	0
  2158  005F  3185  2D78         	ljmp	_main	;jump to C main() function
  2159                           
  2160                           	psect	bssCOMMON
  2161  0070                     __pbssCOMMON:
  2162  0070                     _flags:
  2163  0070                     	ds	2
  2164  0072                     _eusartRxTail:
  2165  0072                     	ds	1
  2166  0073                     _eusartRxHead:
  2167  0073                     	ds	1
  2168  0074                     _eusartTxTail:
  2169  0074                     	ds	1
  2170  0075                     _eusartTxHead:
  2171  0075                     	ds	1
  2172                           
  2173                           	psect	bssBANK1
  2174  00A0                     __pbssBANK1:
  2175  00A0                     _eusartRxStatusBuffer:
  2176  00A0                     	ds	8
  2177  00A8                     _eusartRxBuffer:
  2178  00A8                     	ds	8
  2179  00B0                     _eusartTxBuffer:
  2180  00B0                     	ds	8
  2181  00B8                     _nout:
  2182  00B8                     	ds	2
  2183  00BA                     _width:
  2184  00BA                     	ds	2
  2185  00BC                     _prec:
  2186  00BC                     	ds	2
  2187  00BE                     _old_temp_duty:
  2188  00BE                     	ds	2
  2189  00C0                     _temp_duty:
  2190  00C0                     	ds	2
  2191  00C2                     _tempsignalon_count:
  2192  00C2                     	ds	2
  2193  00C4                     _tmr4_count:
  2194  00C4                     	ds	2
  2195  00C6                     _eusartRxLastError:
  2196  00C6                     	ds	1
  2197  00C7                     _eusartRxCount:
  2198  00C7                     	ds	1
  2199                           
  2200                           	psect	dataBANK1
  2201  00E1                     __pdataBANK1:
  2202  00E1                     _string:
  2203  00E1                     	ds	2
  2204                           
  2205                           	psect	bssBANK2
  2206  0120                     __pbssBANK2:
  2207  0120                     _dbuf:
  2208  0120                     	ds	32
  2209  0140                     _rx:
  2210  0140                     	ds	16
  2211                           
  2212                           	psect	clrtext
  2213  0DF9                     clear_ram0:	
  2214                           ;	Called with FSR0 containing the base address, and
  2215                           ;	WREG with the size to clear
  2216                           
  2217  0DF9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2218  0DFA                     clrloop0:
  2219  0DFA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2220  0DFB  3101               	addfsr 0,1
  2221  0DFC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2222  0DFD  2DFA               	goto	clrloop0	;have we reached the end yet?
  2223  0DFE  3400               	retlw	0	;all done for this memory range, return
  2224                           
  2225                           	psect	cstackBANK2
  2226  0150                     __pcstackBANK2:
  2227  0150                     main@strBuf:
  2228                           
  2229                           ; 10 bytes @ 0x0
  2230  0150                     	ds	10
  2231  015A                     main@minDuty:
  2232                           
  2233                           ; 2 bytes @ 0xA
  2234  015A                     	ds	2
  2235  015C                     main@maxDuty:
  2236                           
  2237                           ; 2 bytes @ 0xC
  2238  015C                     	ds	2
  2239                           
  2240                           	psect	cstackBANK1
  2241  00C8                     __pcstackBANK1:
  2242  00C8                     ??_vfprintf:
  2243                           
  2244                           ; 1 bytes @ 0x0
  2245  00C8                     	ds	2
  2246  00CA                     vfprintf@fp:
  2247                           
  2248                           ; 1 bytes @ 0x2
  2249  00CA                     	ds	1
  2250  00CB                     vfprintf@cfmt:
  2251                           
  2252                           ; 2 bytes @ 0x3
  2253  00CB                     	ds	2
  2254  00CD                     ?_printf:
  2255  00CD                     printf@fmt:	
  2256                           ; 2 bytes @ 0x5
  2257                           
  2258                           
  2259                           ; 2 bytes @ 0x5
  2260  00CD                     	ds	6
  2261  00D3                     printf@ap:
  2262                           
  2263                           ; 1 bytes @ 0xB
  2264  00D3                     	ds	1
  2265  00D4                     ??_main:
  2266                           
  2267                           ; 1 bytes @ 0xC
  2268  00D4                     	ds	2
  2269                           
  2270                           	psect	cstackCOMMON
  2271  0076                     __pcstackCOMMON:
  2272  0076                     ?_EUSART_Receive_ISR:
  2273  0076                     ?_EUSART_Transmit_ISR:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0076                     ??_EUSART_Transmit_ISR:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0076                     ?_EUSART_Initialize:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0076                     ?_EUSART_DefaultFramingErrorHandler:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0076                     ??_EUSART_DefaultFramingErrorHandler:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0076                     ?_EUSART_DefaultOverrunErrorHandler:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0076                     ??_EUSART_DefaultOverrunErrorHandler:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0076                     ?_EUSART_DefaultErrorHandler:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0076                     ?_EUSART_RxDataHandler:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0076                     ??_EUSART_RxDataHandler:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0076                     ?_PIN_MANAGER_Initialize:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0076                     ?_OSCILLATOR_Initialize:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0076                     ?_WDT_Initialize:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0076                     ?_TMR4_Initialize:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0076                     ?_TMR2_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0076                     ?_TMR4_ISR:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0076                     ?_TMR4_DefaultInterruptHandler:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0076                     ??_TMR4_DefaultInterruptHandler:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0076                     ?_TMR4_CustumCallBack:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0076                     ?_EPWM1_Initialize:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0076                     ?_putch:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0076                     ?_SYSTEM_Initialize:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0076                     ?_INTERRUPT_InterruptManager:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0076                     ?_main:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0076                     ?___wmul:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0076                     ___wmul@multiplier:	
  2349                           ; 2 bytes @ 0x0
  2350                           
  2351                           
  2352                           ; 2 bytes @ 0x0
  2353  0076                     	ds	1
  2354  0077                     ??_EUSART_Receive_ISR:
  2355  0077                     ??_EUSART_DefaultErrorHandler:	
  2356                           ; 1 bytes @ 0x1
  2357                           
  2358                           
  2359                           ; 1 bytes @ 0x1
  2360  0077                     	ds	1
  2361  0078                     ___wmul@multiplicand:
  2362                           
  2363                           ; 2 bytes @ 0x2
  2364  0078                     	ds	2
  2365  007A                     ??___wmul:
  2366  007A                     ___wmul@product:	
  2367                           ; 1 bytes @ 0x4
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0x4
  2371  007A                     	ds	2
  2372  007C                     ??_TMR4_ISR:
  2373  007C                     ??_TMR4_CustumCallBack:	
  2374                           ; 1 bytes @ 0x6
  2375                           
  2376  007C                     ??_INTERRUPT_InterruptManager:	
  2377                           ; 1 bytes @ 0x6
  2378                           
  2379                           
  2380                           	psect	cstackBANK0
  2381  0020                     __pcstackBANK0:	
  2382                           ; 1 bytes @ 0x6
  2383                           
  2384  0020                     ?_EUSART_Write:
  2385  0020                     ?_EUSART_SetTxInterruptHandler:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0020                     ?_EUSART_SetRxInterruptHandler:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0020                     ?_memset:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0020                     ?_EUSART_SetFramingErrorHandler:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0020                     ?_EUSART_SetErrorHandler:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0020                     ??_PIN_MANAGER_Initialize:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0020                     ??_OSCILLATOR_Initialize:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0020                     ??_WDT_Initialize:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0020                     ??_TMR2_Initialize:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0020                     ?_TMR4_SetInterruptHandler:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0020                     ??_EPWM1_Initialize:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0020                     ?_EPWM1_LoadDutyValue:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0020                     ?_strlen:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0020                     ?___aodiv:	
  2428                           ; 2 bytes @ 0x0
  2429                           
  2430  0020                     ?___aomod:	
  2431                           ; 8 bytes @ 0x0
  2432                           
  2433  0020                     EUSART_Write@txData:	
  2434                           ; 8 bytes @ 0x0
  2435                           
  2436  0020                     EPWM1_LoadDutyValue@dutyValue:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2440                           ; 2 bytes @ 0x0
  2441                           
  2442  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2443                           ; 2 bytes @ 0x0
  2444                           
  2445  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2446                           ; 2 bytes @ 0x0
  2447                           
  2448  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2449                           ; 2 bytes @ 0x0
  2450                           
  2451  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2452                           ; 2 bytes @ 0x0
  2453                           
  2454  0020                     TMR4_SetInterruptHandler@InterruptHandler:	
  2455                           ; 2 bytes @ 0x0
  2456                           
  2457  0020                     memset@c:	
  2458                           ; 2 bytes @ 0x0
  2459                           
  2460  0020                     strlen@s:	
  2461                           ; 2 bytes @ 0x0
  2462                           
  2463  0020                     ___aodiv@divisor:	
  2464                           ; 2 bytes @ 0x0
  2465                           
  2466  0020                     ___aomod@divisor:	
  2467                           ; 8 bytes @ 0x0
  2468                           
  2469                           
  2470                           ; 8 bytes @ 0x0
  2471  0020                     	ds	1
  2472  0021                     ??_EUSART_Write:
  2473                           
  2474                           ; 1 bytes @ 0x1
  2475  0021                     	ds	1
  2476  0022                     ??_EUSART_SetTxInterruptHandler:
  2477  0022                     ??_EUSART_SetRxInterruptHandler:	
  2478                           ; 1 bytes @ 0x2
  2479                           
  2480  0022                     ??_EUSART_Initialize:	
  2481                           ; 1 bytes @ 0x2
  2482                           
  2483  0022                     ??_strlen:	
  2484                           ; 1 bytes @ 0x2
  2485                           
  2486  0022                     ??_EUSART_SetFramingErrorHandler:	
  2487                           ; 1 bytes @ 0x2
  2488                           
  2489  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2490                           ; 1 bytes @ 0x2
  2491                           
  2492  0022                     ??_EUSART_SetErrorHandler:	
  2493                           ; 1 bytes @ 0x2
  2494                           
  2495  0022                     ??_TMR4_Initialize:	
  2496                           ; 1 bytes @ 0x2
  2497                           
  2498  0022                     ??_TMR4_SetInterruptHandler:	
  2499                           ; 1 bytes @ 0x2
  2500                           
  2501  0022                     ??_EPWM1_LoadDutyValue:	
  2502                           ; 1 bytes @ 0x2
  2503                           
  2504  0022                     ??_putch:	
  2505                           ; 1 bytes @ 0x2
  2506                           
  2507  0022                     memset@n:	
  2508                           ; 1 bytes @ 0x2
  2509                           
  2510                           
  2511                           ; 2 bytes @ 0x2
  2512  0022                     	ds	1
  2513  0023                     ??_SYSTEM_Initialize:
  2514  0023                     putch@txData:	
  2515                           ; 1 bytes @ 0x3
  2516                           
  2517  0023                     strlen@a:	
  2518                           ; 1 bytes @ 0x3
  2519                           
  2520                           
  2521                           ; 2 bytes @ 0x3
  2522  0023                     	ds	1
  2523  0024                     ??_memset:
  2524  0024                     ?_fputc:	
  2525                           ; 1 bytes @ 0x4
  2526                           
  2527  0024                     fputc@c:	
  2528                           ; 2 bytes @ 0x4
  2529                           
  2530                           
  2531                           ; 2 bytes @ 0x4
  2532  0024                     	ds	2
  2533  0026                     fputc@fp:
  2534  0026                     memset@k:	
  2535                           ; 1 bytes @ 0x6
  2536                           
  2537                           
  2538                           ; 2 bytes @ 0x6
  2539  0026                     	ds	1
  2540  0027                     ??_fputc:
  2541                           
  2542                           ; 1 bytes @ 0x7
  2543  0027                     	ds	1
  2544  0028                     memset@dest:
  2545  0028                     ___aodiv@dividend:	
  2546                           ; 1 bytes @ 0x8
  2547                           
  2548  0028                     ___aomod@dividend:	
  2549                           ; 8 bytes @ 0x8
  2550                           
  2551                           
  2552                           ; 8 bytes @ 0x8
  2553  0028                     	ds	1
  2554  0029                     memset@s:
  2555                           
  2556                           ; 1 bytes @ 0x9
  2557  0029                     	ds	3
  2558  002C                     ?_fputs:
  2559  002C                     ?_ctoa:	
  2560                           ; 2 bytes @ 0xC
  2561                           
  2562  002C                     ctoa@c:	
  2563                           ; 2 bytes @ 0xC
  2564                           
  2565  002C                     fputs@fp:	
  2566                           ; 1 bytes @ 0xC
  2567                           
  2568                           
  2569                           ; 1 bytes @ 0xC
  2570  002C                     	ds	1
  2571  002D                     ??_fputs:
  2572                           
  2573                           ; 1 bytes @ 0xD
  2574  002D                     	ds	1
  2575  002E                     ??_ctoa:
  2576                           
  2577                           ; 1 bytes @ 0xE
  2578  002E                     	ds	2
  2579  0030                     ??___aodiv:
  2580  0030                     ??___aomod:	
  2581                           ; 1 bytes @ 0x10
  2582                           
  2583  0030                     fputs@c:	
  2584                           ; 1 bytes @ 0x10
  2585                           
  2586                           
  2587                           ; 1 bytes @ 0x10
  2588  0030                     	ds	1
  2589  0031                     ___aodiv@counter:
  2590  0031                     ___aomod@counter:	
  2591                           ; 1 bytes @ 0x11
  2592                           
  2593  0031                     ctoa@l:	
  2594                           ; 1 bytes @ 0x11
  2595                           
  2596  0031                     fputs@i:	
  2597                           ; 2 bytes @ 0x11
  2598                           
  2599                           
  2600                           ; 2 bytes @ 0x11
  2601  0031                     	ds	1
  2602  0032                     ___aodiv@sign:
  2603  0032                     ___aomod@sign:	
  2604                           ; 1 bytes @ 0x12
  2605                           
  2606                           
  2607                           ; 1 bytes @ 0x12
  2608  0032                     	ds	1
  2609  0033                     ?_abs:
  2610  0033                     fputs@s:	
  2611                           ; 2 bytes @ 0x13
  2612                           
  2613  0033                     ctoa@w:	
  2614                           ; 1 bytes @ 0x13
  2615                           
  2616  0033                     abs@a:	
  2617                           ; 2 bytes @ 0x13
  2618                           
  2619  0033                     ___aodiv@quotient:	
  2620                           ; 2 bytes @ 0x13
  2621                           
  2622                           
  2623                           ; 8 bytes @ 0x13
  2624  0033                     	ds	1
  2625  0034                     ?_pad:
  2626  0034                     pad@buf:	
  2627                           ; 2 bytes @ 0x14
  2628                           
  2629                           
  2630                           ; 1 bytes @ 0x14
  2631  0034                     	ds	1
  2632  0035                     ??_abs:
  2633  0035                     ctoa@fp:	
  2634                           ; 1 bytes @ 0x15
  2635                           
  2636  0035                     pad@p:	
  2637                           ; 1 bytes @ 0x15
  2638                           
  2639                           
  2640                           ; 2 bytes @ 0x15
  2641  0035                     	ds	2
  2642  0037                     ??_pad:
  2643                           
  2644                           ; 1 bytes @ 0x17
  2645  0037                     	ds	1
  2646  0038                     pad@i:
  2647                           
  2648                           ; 2 bytes @ 0x18
  2649  0038                     	ds	2
  2650  003A                     pad@w:
  2651                           
  2652                           ; 2 bytes @ 0x1A
  2653  003A                     	ds	2
  2654  003C                     pad@fp:
  2655                           
  2656                           ; 1 bytes @ 0x1C
  2657  003C                     	ds	1
  2658  003D                     ?_dtoa:
  2659  003D                     dtoa@d:	
  2660                           ; 2 bytes @ 0x1D
  2661                           
  2662                           
  2663                           ; 8 bytes @ 0x1D
  2664  003D                     	ds	8
  2665  0045                     ??_dtoa:
  2666                           
  2667                           ; 1 bytes @ 0x25
  2668  0045                     	ds	3
  2669  0048                     _dtoa$1427:
  2670                           
  2671                           ; 2 bytes @ 0x28
  2672  0048                     	ds	2
  2673  004A                     dtoa@fp:
  2674                           
  2675                           ; 1 bytes @ 0x2A
  2676  004A                     	ds	1
  2677  004B                     dtoa@p:
  2678                           
  2679                           ; 2 bytes @ 0x2B
  2680  004B                     	ds	2
  2681  004D                     dtoa@w:
  2682                           
  2683                           ; 2 bytes @ 0x2D
  2684  004D                     	ds	2
  2685  004F                     dtoa@s:
  2686                           
  2687                           ; 2 bytes @ 0x2F
  2688  004F                     	ds	2
  2689  0051                     dtoa@n:
  2690                           
  2691                           ; 8 bytes @ 0x31
  2692  0051                     	ds	8
  2693  0059                     dtoa@i:
  2694                           
  2695                           ; 2 bytes @ 0x39
  2696  0059                     	ds	2
  2697  005B                     ?_vfpfcnvrt:
  2698  005B                     vfpfcnvrt@fmt:	
  2699                           ; 2 bytes @ 0x3B
  2700                           
  2701                           
  2702                           ; 1 bytes @ 0x3B
  2703  005B                     	ds	1
  2704  005C                     vfpfcnvrt@ap:
  2705                           
  2706                           ; 1 bytes @ 0x3C
  2707  005C                     	ds	1
  2708  005D                     ??_vfpfcnvrt:
  2709                           
  2710                           ; 1 bytes @ 0x3D
  2711  005D                     	ds	5
  2712  0062                     vfpfcnvrt@ll:
  2713                           
  2714                           ; 8 bytes @ 0x42
  2715  0062                     	ds	8
  2716  006A                     vfpfcnvrt@c:
  2717                           
  2718                           ; 1 bytes @ 0x4A
  2719  006A                     	ds	1
  2720  006B                     vfpfcnvrt@fp:
  2721                           
  2722                           ; 1 bytes @ 0x4B
  2723  006B                     	ds	1
  2724  006C                     ?_vfprintf:
  2725  006C                     vfprintf@fmt:	
  2726                           ; 2 bytes @ 0x4C
  2727                           
  2728                           
  2729                           ; 2 bytes @ 0x4C
  2730  006C                     	ds	2
  2731  006E                     vfprintf@ap:
  2732                           
  2733                           ; 1 bytes @ 0x4E
  2734  006E                     	ds	1
  2735  006F                     ??_printf:
  2736                           
  2737                           ; 1 bytes @ 0x4F
  2738  006F                     	ds	1
  2739                           
  2740                           	psect	maintext
  2741  0578                     __pmaintext:	
  2742 ;;
  2743 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2744 ;;
  2745 ;; *************** function _main *****************
  2746 ;; Defined at:
  2747 ;;		line 58 in file "main.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  strBuf         10    0[BANK2 ] unsigned char [10]
  2752 ;;  maxDuty         2   12[BANK2 ] unsigned short 
  2753 ;;  minDuty         2   10[BANK2 ] unsigned short 
  2754 ;;  srtBufPointe    2    0        int 
  2755 ;;  rxData          1    0        char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : B1F/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2765 ;;      Params:         0       0       0       0       0       0
  2766 ;;      Locals:         0       0       0      14       0       0
  2767 ;;      Temps:          0       0       2       0       0       0
  2768 ;;      Totals:         0       0       2      14       0       0
  2769 ;;Total ram usage:       16 bytes
  2770 ;; Hardware stack levels required when called: 13
  2771 ;; This function calls:
  2772 ;;		_EPWM1_LoadDutyValue
  2773 ;;		_SYSTEM_Initialize
  2774 ;;		_TMR4_SetInterruptHandler
  2775 ;;		_memset
  2776 ;;		_printf
  2777 ;; This function is called by:
  2778 ;;		Startup code after reset
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _main
  2784  0578                     _main:
  2785  0578                     l3193:	
  2786                           ;incstack = 0
  2787                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2788                           
  2789                           
  2790                           ;main.c: 61:     SYSTEM_Initialize();
  2791  0578  318E  2695  3185   	fcall	_SYSTEM_Initialize
  2792  057B                     l3195:
  2793                           
  2794                           ;main.c: 67:     (INTCONbits.GIE = 1);
  2795  057B  178B               	bsf	11,7	;volatile
  2796  057C                     l3197:
  2797                           
  2798                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  2799  057C  170B               	bsf	11,6	;volatile
  2800  057D                     l3199:
  2801                           
  2802                           ;main.c: 78:     int8_t rxData;;main.c: 79:     char strBuf[10];;main.c: 80:     int srt
      +                          BufPointer;;main.c: 81:     uint16_t minDuty = 150;
  2803  057D  3096               	movlw	150
  2804  057E  0022               	movlb	2	; select bank2
  2805  057F  00DA               	movwf	main@minDuty^(0+256)
  2806  0580  3000               	movlw	0
  2807  0581  00DB               	movwf	(main@minDuty^(0+256)+1)
  2808  0582                     l3201:
  2809                           
  2810                           ;main.c: 82:     uint16_t maxDuty = 700;
  2811  0582  30BC               	movlw	188
  2812  0583  00DC               	movwf	main@maxDuty^(0+256)
  2813  0584  3002               	movlw	2
  2814  0585  00DD               	movwf	(main@maxDuty^(0+256)+1)
  2815  0586                     l3203:
  2816  0586                     l3205:
  2817                           
  2818                           ;main.c: 86:     memset(strBuf, '\0', sizeof(strBuf));
  2819  0586  3000               	movlw	0
  2820  0587  0020               	movlb	0	; select bank0
  2821  0588  00A0               	movwf	memset@c
  2822  0589  00A1               	movwf	memset@c+1
  2823  058A  300A               	movlw	10
  2824  058B  00A2               	movwf	memset@n
  2825  058C  3000               	movlw	0
  2826  058D  00A3               	movwf	memset@n+1
  2827  058E  3050               	movlw	(low (main@strBuf| (0+256)))& (0+255)
  2828  058F  3184  24CA  3185   	fcall	_memset
  2829  0592                     l3207:
  2830                           
  2831                           ;main.c: 89:     EPWM1_LoadDutyValue(maxDuty);
  2832  0592  30BC               	movlw	188
  2833  0593  0020               	movlb	0	; select bank0
  2834  0594  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2835  0595  3002               	movlw	2
  2836  0596  00A1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2837  0597  318E  26F5  3185   	fcall	_EPWM1_LoadDutyValue
  2838  059A                     l3209:
  2839                           
  2840                           ;main.c: 90:     _delay((unsigned long)((2500)*(4000000/4000.0)));
  2841  059A  300D               	movlw	13
  2842  059B  0021               	movlb	1	; select bank1
  2843  059C  00D5               	movwf	(??_main^(0+128)+1)
  2844  059D  30AF               	movlw	175
  2845  059E  00D4               	movwf	??_main^(0+128)
  2846  059F  30B6               	movlw	182
  2847  05A0                     u2977:
  2848  05A0  0B89               	decfsz	9,f
  2849  05A1  2DA0               	goto	u2977
  2850  05A2  0BD4               	decfsz	??_main^(0+128),f
  2851  05A3  2DA0               	goto	u2977
  2852  05A4  0BD5               	decfsz	(??_main^(0+128)+1),f
  2853  05A5  2DA0               	goto	u2977
  2854  05A6  0000               	nop
  2855  05A7                     l3211:
  2856                           
  2857                           ;main.c: 91:     EPWM1_LoadDutyValue(minDuty);
  2858  05A7  3096               	movlw	150
  2859  05A8  0020               	movlb	0	; select bank0
  2860  05A9  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2861  05AA  3000               	movlw	0
  2862  05AB  00A1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2863  05AC  318E  26F5  3185   	fcall	_EPWM1_LoadDutyValue
  2864  05AF                     l3213:
  2865                           
  2866                           ;main.c: 95:     TMR4_SetInterruptHandler(TMR4_CustumCallBack);
  2867  05AF  309F               	movlw	low _TMR4_CustumCallBack
  2868  05B0  0020               	movlb	0	; select bank0
  2869  05B1  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  2870  05B2  300F               	movlw	high _TMR4_CustumCallBack
  2871  05B3  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  2872  05B4  318E  263B  3185   	fcall	_TMR4_SetInterruptHandler
  2873  05B7                     l3215:
  2874                           
  2875                           ;main.c: 98:     {;main.c: 100:         if( temp_duty != old_temp_duty){
  2876  05B7  0021               	movlb	1	; select bank1
  2877  05B8  083F               	movf	(_old_temp_duty+1)^(0+128),w
  2878  05B9  0641               	xorwf	(_temp_duty+1)^(0+128),w
  2879  05BA  1D03               	skipz
  2880  05BB  2DBE               	goto	u2945
  2881  05BC  083E               	movf	_old_temp_duty^(0+128),w
  2882  05BD  0640               	xorwf	_temp_duty^(0+128),w
  2883  05BE                     u2945:
  2884  05BE  1903               	skipnz
  2885  05BF  2DC1               	goto	u2941
  2886  05C0  2DC2               	goto	u2940
  2887  05C1                     u2941:
  2888  05C1  2DB7               	goto	l3215
  2889  05C2                     u2940:
  2890  05C2                     l3217:
  2891                           
  2892                           ;main.c: 101:             printf("duty=%d old_duty=%d\r\n",temp_duty,old_temp_duty);
  2893  05C2  30FE               	movlw	low (STR_7| (0+32768))
  2894  05C3  00CD               	movwf	printf@fmt^(0+128)
  2895  05C4  3087               	movlw	high (STR_7| (0+32768))
  2896  05C5  00CE               	movwf	(printf@fmt^(0+128)+1)
  2897  05C6  0841               	movf	(_temp_duty+1)^(0+128),w
  2898  05C7  00D0               	movwf	((?_printf+1)^(0+128)+2)
  2899  05C8  0840               	movf	_temp_duty^(0+128),w
  2900  05C9  00CF               	movwf	(?_printf^(0+128)+2)
  2901  05CA  083F               	movf	(_old_temp_duty+1)^(0+128),w
  2902  05CB  00D2               	movwf	((?_printf+1)^(0+128)+4)
  2903  05CC  083E               	movf	_old_temp_duty^(0+128),w
  2904  05CD  00D1               	movwf	(?_printf^(0+128)+4)
  2905  05CE  318E  26AB  3185   	fcall	_printf
  2906  05D1                     l3219:
  2907                           
  2908                           ;main.c: 102:             old_temp_duty = temp_duty;
  2909  05D1  0021               	movlb	1	; select bank1
  2910  05D2  0841               	movf	(_temp_duty+1)^(0+128),w
  2911  05D3  00BF               	movwf	(_old_temp_duty+1)^(0+128)
  2912  05D4  0840               	movf	_temp_duty^(0+128),w
  2913  05D5  00BE               	movwf	_old_temp_duty^(0+128)
  2914  05D6                     l3221:
  2915                           
  2916                           ;main.c: 104:             if( temp_duty < minDuty ){
  2917  05D6  0022               	movlb	2	; select bank2
  2918  05D7  085B               	movf	(main@minDuty+1)^(0+256),w
  2919  05D8  0021               	movlb	1	; select bank1
  2920  05D9  0241               	subwf	(_temp_duty+1)^(0+128),w
  2921  05DA  1D03               	skipz
  2922  05DB  2DE0               	goto	u2955
  2923  05DC  0022               	movlb	2	; select bank2
  2924  05DD  085A               	movf	main@minDuty^(0+256),w
  2925  05DE  0021               	movlb	1	; select bank1
  2926  05DF  0240               	subwf	_temp_duty^(0+128),w
  2927  05E0                     u2955:
  2928  05E0  1803               	skipnc
  2929  05E1  2DE3               	goto	u2951
  2930  05E2  2DE4               	goto	u2950
  2931  05E3                     u2951:
  2932  05E3  2DF0               	goto	l3225
  2933  05E4                     u2950:
  2934  05E4                     l3223:
  2935                           
  2936                           ;main.c: 105:                 EPWM1_LoadDutyValue(minDuty);
  2937  05E4  0022               	movlb	2	; select bank2
  2938  05E5  085B               	movf	(main@minDuty+1)^(0+256),w
  2939  05E6  0020               	movlb	0	; select bank0
  2940  05E7  00A1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2941  05E8  0022               	movlb	2	; select bank2
  2942  05E9  085A               	movf	main@minDuty^(0+256),w
  2943  05EA  0020               	movlb	0	; select bank0
  2944  05EB  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2945  05EC  318E  26F5  3185   	fcall	_EPWM1_LoadDutyValue
  2946                           
  2947                           ;main.c: 106:             }
  2948  05EF  2DB7               	goto	l3215
  2949  05F0                     l3225:
  2950  05F0  0841               	movf	(_temp_duty+1)^(0+128),w
  2951  05F1  0022               	movlb	2	; select bank2
  2952  05F2  025D               	subwf	(main@maxDuty+1)^(0+256),w
  2953  05F3  1D03               	skipz
  2954  05F4  2DF9               	goto	u2965
  2955  05F5  0021               	movlb	1	; select bank1
  2956  05F6  0840               	movf	_temp_duty^(0+128),w
  2957  05F7  0022               	movlb	2	; select bank2
  2958  05F8  025C               	subwf	main@maxDuty^(0+256),w
  2959  05F9                     u2965:
  2960  05F9  1803               	skipnc
  2961  05FA  2DFC               	goto	u2961
  2962  05FB  2DFD               	goto	u2960
  2963  05FC                     u2961:
  2964  05FC  2E08               	goto	l3229
  2965  05FD                     u2960:
  2966  05FD                     l3227:
  2967                           
  2968                           ;main.c: 108:                 EPWM1_LoadDutyValue(maxDuty);
  2969  05FD  085D               	movf	(main@maxDuty+1)^(0+256),w
  2970  05FE  0020               	movlb	0	; select bank0
  2971  05FF  00A1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2972  0600  0022               	movlb	2	; select bank2
  2973  0601  085C               	movf	main@maxDuty^(0+256),w
  2974  0602  0020               	movlb	0	; select bank0
  2975  0603  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2976  0604  318E  26F5  3185   	fcall	_EPWM1_LoadDutyValue
  2977                           
  2978                           ;main.c: 109:             }else{
  2979  0607  2DB7               	goto	l3215
  2980  0608                     l3229:
  2981                           
  2982                           ;main.c: 110:                 EPWM1_LoadDutyValue(temp_duty);
  2983  0608  0021               	movlb	1	; select bank1
  2984  0609  0841               	movf	(_temp_duty+1)^(0+128),w
  2985  060A  0020               	movlb	0	; select bank0
  2986  060B  00A1               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2987  060C  0021               	movlb	1	; select bank1
  2988  060D  0840               	movf	_temp_duty^(0+128),w
  2989  060E  0020               	movlb	0	; select bank0
  2990  060F  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue
  2991  0610  318E  26F5  3185   	fcall	_EPWM1_LoadDutyValue
  2992  0613  2DB7               	goto	l3215
  2993  0614  3180  283C         	ljmp	start
  2994  0616                     __end_of_main:
  2995                           
  2996                           	psect	text1
  2997  0EAB                     __ptext1:	
  2998 ;; *************** function _printf *****************
  2999 ;; Defined at:
  3000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  fmt             2    5[BANK1 ] PTR const unsigned char 
  3003 ;;		 -> STR_7(22), STR_6(4), STR_5(3), STR_4(12), 
  3004 ;;		 -> STR_3(62), STR_2(17), 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  ret             2    0        int 
  3007 ;;  ap              1   11[BANK1 ] PTR void [1]
  3008 ;;		 -> ?_printf(2), 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2    5[BANK1 ] int 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3018 ;;      Params:         0       0       6       0       0       0
  3019 ;;      Locals:         0       0       1       0       0       0
  3020 ;;      Temps:          0       1       0       0       0       0
  3021 ;;      Totals:         0       1       7       0       0       0
  3022 ;;Total ram usage:        8 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 12
  3025 ;; This function calls:
  3026 ;;		_vfprintf
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;;		_UART_example_PRINTF
  3030 ;;		_UART_example_READ
  3031 ;;		_UART_example_RUNALL
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _printf
  3037  0EAB                     _printf:
  3038  0EAB                     l2955:	
  3039                           ;incstack = 0
  3040                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3041                           
  3042  0EAB  30CF               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3043  0EAC  0020               	movlb	0	; select bank0
  3044  0EAD  00EF               	movwf	??_printf
  3045  0EAE  086F               	movf	??_printf,w
  3046  0EAF  0021               	movlb	1	; select bank1
  3047  0EB0  00D3               	movwf	printf@ap^(0+128)
  3048  0EB1                     l2957:
  3049  0EB1  084E               	movf	(printf@fmt+1)^(0+128),w
  3050  0EB2  0020               	movlb	0	; select bank0
  3051  0EB3  00ED               	movwf	vfprintf@fmt+1
  3052  0EB4  0021               	movlb	1	; select bank1
  3053  0EB5  084D               	movf	printf@fmt^(0+128),w
  3054  0EB6  0020               	movlb	0	; select bank0
  3055  0EB7  00EC               	movwf	vfprintf@fmt
  3056  0EB8  30D3               	movlw	(low (printf@ap| 0))& (0+255)
  3057  0EB9  00EF               	movwf	??_printf
  3058  0EBA  086F               	movf	??_printf,w
  3059  0EBB  00EE               	movwf	vfprintf@ap
  3060  0EBC  3000               	movlw	0
  3061  0EBD  318F  27CA  318E   	fcall	_vfprintf
  3062  0EC0                     l1065:
  3063  0EC0  0008               	return
  3064  0EC1                     __end_of_printf:
  3065                           
  3066                           	psect	text2
  3067  0FCA                     __ptext2:	
  3068 ;; *************** function _vfprintf *****************
  3069 ;; Defined at:
  3070 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  fp              1    wreg     PTR struct _IO_FILE
  3073 ;;		 -> NULL(0), 
  3074 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  3075 ;;		 -> STR_7(22), STR_6(4), STR_5(3), STR_4(12), 
  3076 ;;		 -> STR_3(62), STR_2(17), 
  3077 ;;  ap              1   78[BANK0 ] PTR PTR void 
  3078 ;;		 -> printf@ap(1), 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3081 ;;		 -> NULL(0), 
  3082 ;;  cfmt            2    3[BANK1 ] PTR unsigned char 
  3083 ;;		 -> STR_7(22), STR_6(4), STR_5(3), STR_4(12), 
  3084 ;;		 -> STR_3(62), STR_2(17), 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  2   76[BANK0 ] int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3094 ;;      Params:         0       3       0       0       0       0
  3095 ;;      Locals:         0       0       3       0       0       0
  3096 ;;      Temps:          0       0       2       0       0       0
  3097 ;;      Totals:         0       3       5       0       0       0
  3098 ;;Total ram usage:        8 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 11
  3101 ;; This function calls:
  3102 ;;		_vfpfcnvrt
  3103 ;; This function is called by:
  3104 ;;		_printf
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _vfprintf
  3110  0FCA                     _vfprintf:
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3114                           ;vfprintf@fp stored from wreg
  3115  0FCA  0021               	movlb	1	; select bank1
  3116  0FCB  00CA               	movwf	vfprintf@fp^(0+128)
  3117  0FCC                     l2929:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3120  0FCC  0020               	movlb	0	; select bank0
  3121  0FCD  086D               	movf	vfprintf@fmt+1,w
  3122  0FCE  0021               	movlb	1	; select bank1
  3123  0FCF  00CC               	movwf	(vfprintf@cfmt+1)^(0+128)
  3124  0FD0  0020               	movlb	0	; select bank0
  3125  0FD1  086C               	movf	vfprintf@fmt,w
  3126  0FD2  0021               	movlb	1	; select bank1
  3127  0FD3  00CB               	movwf	vfprintf@cfmt^(0+128)
  3128  0FD4                     l2931:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3131  0FD4  01B8               	clrf	_nout^(0+128)
  3132  0FD5  01B9               	clrf	(_nout+1)^(0+128)
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3135  0FD6  2FEF               	goto	l2935
  3136  0FD7                     l2933:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3139  0FD7  30CB               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3140  0FD8  00C8               	movwf	??_vfprintf^(0+128)
  3141  0FD9  0848               	movf	??_vfprintf^(0+128),w
  3142  0FDA  0020               	movlb	0	; select bank0
  3143  0FDB  00DB               	movwf	vfpfcnvrt@fmt
  3144  0FDC  086E               	movf	vfprintf@ap,w
  3145  0FDD  0021               	movlb	1	; select bank1
  3146  0FDE  00C9               	movwf	(??_vfprintf+1)^(0+128)
  3147  0FDF  0849               	movf	(??_vfprintf+1)^(0+128),w
  3148  0FE0  0020               	movlb	0	; select bank0
  3149  0FE1  00DC               	movwf	vfpfcnvrt@ap
  3150  0FE2  0021               	movlb	1	; select bank1
  3151  0FE3  084A               	movf	vfprintf@fp^(0+128),w
  3152  0FE4  3181  21CA  318F   	fcall	_vfpfcnvrt
  3153  0FE7  0020               	movlb	0	; select bank0
  3154  0FE8  085B               	movf	?_vfpfcnvrt,w
  3155  0FE9  0021               	movlb	1	; select bank1
  3156  0FEA  07B8               	addwf	_nout^(0+128),f
  3157  0FEB  0020               	movlb	0	; select bank0
  3158  0FEC  085C               	movf	?_vfpfcnvrt+1,w
  3159  0FED  0021               	movlb	1	; select bank1
  3160  0FEE  3DB9               	addwfc	(_nout+1)^(0+128),f
  3161  0FEF                     l2935:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3164  0FEF  084B               	movf	vfprintf@cfmt^(0+128),w
  3165  0FF0  0084               	movwf	4
  3166  0FF1  084C               	movf	(vfprintf@cfmt+1)^(0+128),w
  3167  0FF2  0085               	movwf	5
  3168  0FF3  0012               	moviw fsr0++
  3169  0FF4  1D03               	btfss	3,2
  3170  0FF5  2FF7               	goto	u2651
  3171  0FF6  2FF8               	goto	u2650
  3172  0FF7                     u2651:
  3173  0FF7  2FD7               	goto	l2933
  3174  0FF8                     u2650:
  3175  0FF8                     l2937:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3178  0FF8  0839               	movf	(_nout+1)^(0+128),w
  3179  0FF9  0020               	movlb	0	; select bank0
  3180  0FFA  00ED               	movwf	?_vfprintf+1
  3181  0FFB  0021               	movlb	1	; select bank1
  3182  0FFC  0838               	movf	_nout^(0+128),w
  3183  0FFD  0020               	movlb	0	; select bank0
  3184  0FFE  00EC               	movwf	?_vfprintf
  3185  0FFF                     l1154:
  3186  0FFF  0008               	return
  3187  1000                     __end_of_vfprintf:
  3188                           
  3189                           	psect	text3
  3190  01CA                     __ptext3:	
  3191 ;; *************** function _vfpfcnvrt *****************
  3192 ;; Defined at:
  3193 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  fp              1    wreg     PTR struct _IO_FILE
  3196 ;;		 -> NULL(0), 
  3197 ;;  fmt             1   59[BANK0 ] PTR PTR unsigned char 
  3198 ;;		 -> vfprintf@cfmt(2), 
  3199 ;;  ap              1   60[BANK0 ] PTR PTR void 
  3200 ;;		 -> printf@ap(1), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  fp              1   75[BANK0 ] PTR struct _IO_FILE
  3203 ;;		 -> NULL(0), 
  3204 ;;  ll              8   66[BANK0 ] long long 
  3205 ;;  llu             8    0        unsigned long long 
  3206 ;;  f               4    0        unsigned long long 
  3207 ;;  ct              3    0        unsigned char [3]
  3208 ;;  vp              2    0        PTR void 
  3209 ;;  i               2    0        int 
  3210 ;;  done            2    0        int 
  3211 ;;  cp              2    0        PTR unsigned char 
  3212 ;;  c               1   74[BANK0 ] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   59[BANK0 ] int 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3222 ;;      Params:         0       2       0       0       0       0
  3223 ;;      Locals:         0      10       0       0       0       0
  3224 ;;      Temps:          0       5       0       0       0       0
  3225 ;;      Totals:         0      17       0       0       0       0
  3226 ;;Total ram usage:       17 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 10
  3229 ;; This function calls:
  3230 ;;		_ctoa
  3231 ;;		_dtoa
  3232 ;;		_fputc
  3233 ;; This function is called by:
  3234 ;;		_vfprintf
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _vfpfcnvrt
  3240  01CA                     _vfpfcnvrt:
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3244                           ;vfpfcnvrt@fp stored from wreg
  3245  01CA  0020               	movlb	0	; select bank0
  3246  01CB  00EB               	movwf	vfpfcnvrt@fp
  3247  01CC                     l2791:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3250  01CC  085B               	movf	vfpfcnvrt@fmt,w
  3251  01CD  0086               	movwf	6
  3252  01CE  0187               	clrf	7
  3253  01CF  3F40               	moviw [0]fsr1
  3254  01D0  00DD               	movwf	??_vfpfcnvrt
  3255  01D1  3F41               	moviw [1]fsr1
  3256  01D2  00DE               	movwf	??_vfpfcnvrt+1
  3257  01D3  085D               	movf	??_vfpfcnvrt,w
  3258  01D4  0084               	movwf	4
  3259  01D5  085E               	movf	??_vfpfcnvrt+1,w
  3260  01D6  0085               	movwf	5
  3261  01D7  0012               	moviw fsr0++
  3262  01D8  3A25               	xorlw	37
  3263  01D9  1D03               	btfss	3,2
  3264  01DA  29DC               	goto	u2601
  3265  01DB  29DD               	goto	u2600
  3266  01DC                     u2601:
  3267  01DC  2AB4               	goto	l2837
  3268  01DD                     u2600:
  3269  01DD                     l2793:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3272  01DD  085B               	movf	vfpfcnvrt@fmt,w
  3273  01DE  0086               	movwf	6
  3274  01DF  0187               	clrf	7
  3275  01E0  3001               	movlw	1
  3276  01E1  0781               	addwf	1,f
  3277  01E2  3141               	addfsr 1,1
  3278  01E3  1803               	skipnc
  3279  01E4  0A81               	incf	1,f
  3280  01E5                     l2795:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3283  01E5  0021               	movlb	1	; select bank1
  3284  01E6  01BA               	clrf	_width^(0+128)
  3285  01E7  01BB               	clrf	(_width+1)^(0+128)
  3286  01E8  01F0               	clrf	_flags
  3287  01E9  01F1               	clrf	_flags+1
  3288  01EA                     l2797:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3291  01EA  30FF               	movlw	255
  3292  01EB  00BC               	movwf	_prec^(0+128)
  3293  01EC  30FF               	movlw	255
  3294  01ED  00BD               	movwf	(_prec^(0+128)+1)
  3295  01EE                     l2799:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  3298  01EE  0020               	movlb	0	; select bank0
  3299  01EF  085B               	movf	vfpfcnvrt@fmt,w
  3300  01F0  0086               	movwf	6
  3301  01F1  0187               	clrf	7
  3302  01F2  3F40               	moviw [0]fsr1
  3303  01F3  00DD               	movwf	??_vfpfcnvrt
  3304  01F4  3F41               	moviw [1]fsr1
  3305  01F5  00DE               	movwf	??_vfpfcnvrt+1
  3306  01F6  085D               	movf	??_vfpfcnvrt,w
  3307  01F7  0084               	movwf	4
  3308  01F8  085E               	movf	??_vfpfcnvrt+1,w
  3309  01F9  0085               	movwf	5
  3310  01FA  0012               	moviw fsr0++
  3311  01FB  3A63               	xorlw	99
  3312  01FC  1D03               	btfss	3,2
  3313  01FD  29FF               	goto	u2611
  3314  01FE  2A00               	goto	u2610
  3315  01FF                     u2611:
  3316  01FF  2A22               	goto	l2809
  3317  0200                     u2610:
  3318  0200                     l2801:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  3321  0200  085B               	movf	vfpfcnvrt@fmt,w
  3322  0201  0086               	movwf	6
  3323  0202  0187               	clrf	7
  3324  0203  3001               	movlw	1
  3325  0204  0781               	addwf	1,f
  3326  0205  3141               	addfsr 1,1
  3327  0206  1803               	skipnc
  3328  0207  0A81               	incf	1,f
  3329  0208                     l2803:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3332  0208  085C               	movf	vfpfcnvrt@ap,w
  3333  0209  0086               	movwf	6
  3334  020A  0187               	clrf	7
  3335  020B  0801               	movf	1,w
  3336  020C  0084               	movwf	4
  3337  020D  0185               	clrf	5
  3338  020E  3002               	movlw	2
  3339  020F  0781               	addwf	1,f
  3340  0210  0800               	movf	0,w
  3341  0211  00DD               	movwf	??_vfpfcnvrt
  3342  0212  085D               	movf	??_vfpfcnvrt,w
  3343  0213  00EA               	movwf	vfpfcnvrt@c
  3344  0214                     l2805:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  3347  0214  086A               	movf	vfpfcnvrt@c,w
  3348  0215  00DD               	movwf	??_vfpfcnvrt
  3349  0216  085D               	movf	??_vfpfcnvrt,w
  3350  0217  00AC               	movwf	ctoa@c
  3351  0218  086B               	movf	vfpfcnvrt@fp,w
  3352  0219  3186  2616  3181   	fcall	_ctoa
  3353  021C  0020               	movlb	0	; select bank0
  3354  021D  082D               	movf	?_ctoa+1,w
  3355  021E  00DC               	movwf	?_vfpfcnvrt+1
  3356  021F  082C               	movf	?_ctoa,w
  3357  0220  00DB               	movwf	?_vfpfcnvrt
  3358  0221  2AD7               	goto	l1144
  3359  0222                     l2809:
  3360                           
  3361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3362  0222  085B               	movf	vfpfcnvrt@fmt,w
  3363  0223  0086               	movwf	6
  3364  0224  0187               	clrf	7
  3365  0225  3F40               	moviw [0]fsr1
  3366  0226  00DD               	movwf	??_vfpfcnvrt
  3367  0227  3F41               	moviw [1]fsr1
  3368  0228  00DE               	movwf	??_vfpfcnvrt+1
  3369  0229  085D               	movf	??_vfpfcnvrt,w
  3370  022A  0084               	movwf	4
  3371  022B  085E               	movf	??_vfpfcnvrt+1,w
  3372  022C  0085               	movwf	5
  3373  022D  0012               	moviw fsr0++
  3374  022E  3A64               	xorlw	100
  3375  022F  1903               	btfsc	3,2
  3376  0230  2A32               	goto	u2621
  3377  0231  2A33               	goto	u2620
  3378  0232                     u2621:
  3379  0232  2A44               	goto	l2813
  3380  0233                     u2620:
  3381  0233                     l2811:
  3382  0233  085B               	movf	vfpfcnvrt@fmt,w
  3383  0234  0086               	movwf	6
  3384  0235  0187               	clrf	7
  3385  0236  3F40               	moviw [0]fsr1
  3386  0237  00DD               	movwf	??_vfpfcnvrt
  3387  0238  3F41               	moviw [1]fsr1
  3388  0239  00DE               	movwf	??_vfpfcnvrt+1
  3389  023A  085D               	movf	??_vfpfcnvrt,w
  3390  023B  0084               	movwf	4
  3391  023C  085E               	movf	??_vfpfcnvrt+1,w
  3392  023D  0085               	movwf	5
  3393  023E  0012               	moviw fsr0++
  3394  023F  3A69               	xorlw	105
  3395  0240  1D03               	btfss	3,2
  3396  0241  2A43               	goto	u2631
  3397  0242  2A44               	goto	u2630
  3398  0243                     u2631:
  3399  0243  2A7F               	goto	l2821
  3400  0244                     u2630:
  3401  0244                     l2813:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3404  0244  085B               	movf	vfpfcnvrt@fmt,w
  3405  0245  0086               	movwf	6
  3406  0246  0187               	clrf	7
  3407  0247  3001               	movlw	1
  3408  0248  0781               	addwf	1,f
  3409  0249  3141               	addfsr 1,1
  3410  024A  1803               	skipnc
  3411  024B  0A81               	incf	1,f
  3412  024C                     l2815:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3415  024C  085C               	movf	vfpfcnvrt@ap,w
  3416  024D  0086               	movwf	6
  3417  024E  0187               	clrf	7
  3418  024F  0801               	movf	1,w
  3419  0250  0084               	movwf	4
  3420  0251  0185               	clrf	5
  3421  0252  3002               	movlw	2
  3422  0253  0781               	addwf	1,f
  3423  0254  3F00               	moviw [0]fsr0
  3424  0255  00DD               	movwf	??_vfpfcnvrt
  3425  0256  3F01               	moviw [1]fsr0
  3426  0257  00DE               	movwf	??_vfpfcnvrt+1
  3427  0258  085D               	movf	??_vfpfcnvrt,w
  3428  0259  00E2               	movwf	vfpfcnvrt@ll
  3429  025A  085E               	movf	??_vfpfcnvrt+1,w
  3430  025B  00E3               	movwf	vfpfcnvrt@ll+1
  3431  025C  0D89               	rlf	9,f
  3432  025D  3B89               	subwfb	9,f
  3433  025E  0989               	comf	9,f
  3434  025F  00E4               	movwf	vfpfcnvrt@ll+2
  3435  0260  00E5               	movwf	vfpfcnvrt@ll+3
  3436  0261  00E6               	movwf	vfpfcnvrt@ll+4
  3437  0262  00E7               	movwf	vfpfcnvrt@ll+5
  3438  0263  00E8               	movwf	vfpfcnvrt@ll+6
  3439  0264  00E9               	movwf	vfpfcnvrt@ll+7
  3440  0265                     l2817:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3443  0265  0862               	movf	vfpfcnvrt@ll,w
  3444  0266  00BD               	movwf	dtoa@d
  3445  0267  0863               	movf	vfpfcnvrt@ll+1,w
  3446  0268  00BE               	movwf	dtoa@d+1
  3447  0269  0864               	movf	vfpfcnvrt@ll+2,w
  3448  026A  00BF               	movwf	dtoa@d+2
  3449  026B  0865               	movf	vfpfcnvrt@ll+3,w
  3450  026C  00C0               	movwf	dtoa@d+3
  3451  026D  0866               	movf	vfpfcnvrt@ll+4,w
  3452  026E  00C1               	movwf	dtoa@d+4
  3453  026F  0867               	movf	vfpfcnvrt@ll+5,w
  3454  0270  00C2               	movwf	dtoa@d+5
  3455  0271  0868               	movf	vfpfcnvrt@ll+6,w
  3456  0272  00C3               	movwf	dtoa@d+6
  3457  0273  0869               	movf	vfpfcnvrt@ll+7,w
  3458  0274  00C4               	movwf	dtoa@d+7
  3459  0275  086B               	movf	vfpfcnvrt@fp,w
  3460  0276  3180  2061  3181   	fcall	_dtoa
  3461  0279  0020               	movlb	0	; select bank0
  3462  027A  083E               	movf	?_dtoa+1,w
  3463  027B  00DC               	movwf	?_vfpfcnvrt+1
  3464  027C  083D               	movf	?_dtoa,w
  3465  027D  00DB               	movwf	?_vfpfcnvrt
  3466  027E  2AD7               	goto	l1144
  3467  027F                     l2821:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3470  027F  085B               	movf	vfpfcnvrt@fmt,w
  3471  0280  0086               	movwf	6
  3472  0281  0187               	clrf	7
  3473  0282  3F40               	moviw [0]fsr1
  3474  0283  00DD               	movwf	??_vfpfcnvrt
  3475  0284  3F41               	moviw [1]fsr1
  3476  0285  00DE               	movwf	??_vfpfcnvrt+1
  3477  0286  085D               	movf	??_vfpfcnvrt,w
  3478  0287  0084               	movwf	4
  3479  0288  085E               	movf	??_vfpfcnvrt+1,w
  3480  0289  0085               	movwf	5
  3481  028A  0012               	moviw fsr0++
  3482  028B  3A25               	xorlw	37
  3483  028C  1D03               	btfss	3,2
  3484  028D  2A8F               	goto	u2641
  3485  028E  2A90               	goto	u2640
  3486  028F                     u2641:
  3487  028F  2AA9               	goto	l2831
  3488  0290                     u2640:
  3489  0290                     l2823:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3492  0290  085B               	movf	vfpfcnvrt@fmt,w
  3493  0291  0086               	movwf	6
  3494  0292  0187               	clrf	7
  3495  0293  3001               	movlw	1
  3496  0294  0781               	addwf	1,f
  3497  0295  3141               	addfsr 1,1
  3498  0296  1803               	skipnc
  3499  0297  0A81               	incf	1,f
  3500  0298                     l2825:
  3501                           
  3502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3503  0298  3025               	movlw	37
  3504  0299  00A4               	movwf	fputc@c
  3505  029A  3000               	movlw	0
  3506  029B  00A5               	movwf	fputc@c+1
  3507  029C  086B               	movf	vfpfcnvrt@fp,w
  3508  029D  00DD               	movwf	??_vfpfcnvrt
  3509  029E  085D               	movf	??_vfpfcnvrt,w
  3510  029F  00A6               	movwf	fputc@fp
  3511  02A0  3187  2725  3181   	fcall	_fputc
  3512  02A3                     l2827:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3515  02A3  3001               	movlw	1
  3516  02A4  0020               	movlb	0	; select bank0
  3517  02A5  00DB               	movwf	?_vfpfcnvrt
  3518  02A6  3000               	movlw	0
  3519  02A7  00DC               	movwf	?_vfpfcnvrt+1
  3520  02A8  2AD7               	goto	l1144
  3521  02A9                     l2831:
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3524  02A9  085B               	movf	vfpfcnvrt@fmt,w
  3525  02AA  0086               	movwf	6
  3526  02AB  0187               	clrf	7
  3527  02AC  3001               	movlw	1
  3528  02AD  0781               	addwf	1,f
  3529  02AE  3141               	addfsr 1,1
  3530  02AF  1803               	skipnc
  3531  02B0  0A81               	incf	1,f
  3532  02B1                     l2833:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3535  02B1  01DB               	clrf	?_vfpfcnvrt
  3536  02B2  01DC               	clrf	?_vfpfcnvrt+1
  3537  02B3  2AD7               	goto	l1144
  3538  02B4                     l2837:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3541  02B4  085B               	movf	vfpfcnvrt@fmt,w
  3542  02B5  0086               	movwf	6
  3543  02B6  0187               	clrf	7
  3544  02B7  3F40               	moviw [0]fsr1
  3545  02B8  00DD               	movwf	??_vfpfcnvrt
  3546  02B9  3F41               	moviw [1]fsr1
  3547  02BA  00DE               	movwf	??_vfpfcnvrt+1
  3548  02BB  085D               	movf	??_vfpfcnvrt,w
  3549  02BC  0084               	movwf	4
  3550  02BD  085E               	movf	??_vfpfcnvrt+1,w
  3551  02BE  0085               	movwf	5
  3552  02BF  0800               	movf	0,w	;code access
  3553  02C0  00DF               	movwf	??_vfpfcnvrt+2
  3554  02C1  01E0               	clrf	??_vfpfcnvrt+3
  3555  02C2  085F               	movf	??_vfpfcnvrt+2,w
  3556  02C3  00A4               	movwf	fputc@c
  3557  02C4  0860               	movf	??_vfpfcnvrt+3,w
  3558  02C5  00A5               	movwf	fputc@c+1
  3559  02C6  086B               	movf	vfpfcnvrt@fp,w
  3560  02C7  00E1               	movwf	??_vfpfcnvrt+4
  3561  02C8  0861               	movf	??_vfpfcnvrt+4,w
  3562  02C9  00A6               	movwf	fputc@fp
  3563  02CA  3187  2725  3181   	fcall	_fputc
  3564  02CD                     l2839:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3567  02CD  0020               	movlb	0	; select bank0
  3568  02CE  085B               	movf	vfpfcnvrt@fmt,w
  3569  02CF  0086               	movwf	6
  3570  02D0  0187               	clrf	7
  3571  02D1  3001               	movlw	1
  3572  02D2  0781               	addwf	1,f
  3573  02D3  3141               	addfsr 1,1
  3574  02D4  1803               	skipnc
  3575  02D5  0A81               	incf	1,f
  3576  02D6  2AA3               	goto	l2827
  3577  02D7                     l1144:
  3578  02D7  0008               	return
  3579  02D8                     __end_of_vfpfcnvrt:
  3580                           
  3581                           	psect	text4
  3582  0061                     __ptext4:	
  3583 ;; *************** function _dtoa *****************
  3584 ;; Defined at:
  3585 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  fp              1    wreg     PTR struct _IO_FILE
  3588 ;;		 -> NULL(0), 
  3589 ;;  d               8   29[BANK0 ] long long 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  fp              1   42[BANK0 ] PTR struct _IO_FILE
  3592 ;;		 -> NULL(0), 
  3593 ;;  n               8   49[BANK0 ] long long 
  3594 ;;  i               2   57[BANK0 ] int 
  3595 ;;  s               2   47[BANK0 ] int 
  3596 ;;  w               2   45[BANK0 ] int 
  3597 ;;  p               2   43[BANK0 ] int 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2   29[BANK0 ] int 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3607 ;;      Params:         0       8       0       0       0       0
  3608 ;;      Locals:         0      19       0       0       0       0
  3609 ;;      Temps:          0       3       0       0       0       0
  3610 ;;      Totals:         0      30       0       0       0       0
  3611 ;;Total ram usage:       30 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 9
  3614 ;; This function calls:
  3615 ;;		___aodiv
  3616 ;;		___aomod
  3617 ;;		_abs
  3618 ;;		_pad
  3619 ;; This function is called by:
  3620 ;;		_vfpfcnvrt
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _dtoa
  3626  0061                     _dtoa:
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3630                           ;dtoa@fp stored from wreg
  3631  0061  0020               	movlb	0	; select bank0
  3632  0062  00CA               	movwf	dtoa@fp
  3633  0063                     l2721:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3636  0063  083D               	movf	dtoa@d,w
  3637  0064  00D1               	movwf	dtoa@n
  3638  0065  083E               	movf	dtoa@d+1,w
  3639  0066  00D2               	movwf	dtoa@n+1
  3640  0067  083F               	movf	dtoa@d+2,w
  3641  0068  00D3               	movwf	dtoa@n+2
  3642  0069  0840               	movf	dtoa@d+3,w
  3643  006A  00D4               	movwf	dtoa@n+3
  3644  006B  0841               	movf	dtoa@d+4,w
  3645  006C  00D5               	movwf	dtoa@n+4
  3646  006D  0842               	movf	dtoa@d+5,w
  3647  006E  00D6               	movwf	dtoa@n+5
  3648  006F  0843               	movf	dtoa@d+6,w
  3649  0070  00D7               	movwf	dtoa@n+6
  3650  0071  0844               	movf	dtoa@d+7,w
  3651  0072  00D8               	movwf	dtoa@n+7
  3652  0073                     l2723:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3655  0073  3051               	movlw	low dtoa@n
  3656  0074  0086               	movwf	6
  3657  0075  3000               	movlw	high dtoa@n
  3658  0076  0087               	movwf	7
  3659  0077  3F47               	moviw [7]fsr1
  3660  0078  00C5               	movwf	??_dtoa
  3661  0079  1BC5               	btfsc	??_dtoa,7
  3662  007A  287C               	goto	u2441
  3663  007B  287E               	goto	u2440
  3664  007C                     u2441:
  3665  007C  3001               	movlw	1
  3666  007D  287F               	goto	u2450
  3667  007E                     u2440:
  3668  007E  3000               	movlw	0
  3669  007F                     u2450:
  3670  007F  0020               	movlb	0	; select bank0
  3671  0080  00C6               	movwf	??_dtoa+1
  3672  0081  01C7               	clrf	??_dtoa+2
  3673  0082  0846               	movf	??_dtoa+1,w
  3674  0083  00CF               	movwf	dtoa@s
  3675  0084  0847               	movf	??_dtoa+2,w
  3676  0085  00D0               	movwf	dtoa@s+1
  3677  0086                     l2725:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3680  0086  084F               	movf	dtoa@s,w
  3681  0087  0450               	iorwf	dtoa@s+1,w
  3682  0088  1903               	btfsc	3,2
  3683  0089  288B               	goto	u2461
  3684  008A  288C               	goto	u2460
  3685  008B                     u2461:
  3686  008B  28AA               	goto	l1116
  3687  008C                     u2460:
  3688  008C                     l2727:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3691  008C  09D1               	comf	dtoa@n,f
  3692  008D  09D2               	comf	dtoa@n+1,f
  3693  008E  09D3               	comf	dtoa@n+2,f
  3694  008F  09D4               	comf	dtoa@n+3,f
  3695  0090  09D5               	comf	dtoa@n+4,f
  3696  0091  09D6               	comf	dtoa@n+5,f
  3697  0092  09D7               	comf	dtoa@n+6,f
  3698  0093  09D8               	comf	dtoa@n+7,f
  3699  0094  0AD1               	incf	dtoa@n,f
  3700  0095  1D03               	skipz
  3701  0096  28AA               	goto	u247lld
  3702  0097  0AD2               	incf	dtoa@n+1,f
  3703  0098  1D03               	skipz
  3704  0099  28AA               	goto	u247lld
  3705  009A  0AD3               	incf	dtoa@n+2,f
  3706  009B  1D03               	skipz
  3707  009C  28AA               	goto	u247lld
  3708  009D  0AD4               	incf	dtoa@n+3,f
  3709  009E  1D03               	skipz
  3710  009F  28AA               	goto	u247lld
  3711  00A0  0AD5               	incf	dtoa@n+4,f
  3712  00A1  1D03               	skipz
  3713  00A2  28AA               	goto	u247lld
  3714  00A3  0AD6               	incf	dtoa@n+5,f
  3715  00A4  1D03               	skipz
  3716  00A5  28AA               	goto	u247lld
  3717  00A6  0AD7               	incf	dtoa@n+6,f
  3718  00A7  1D03               	skipz
  3719  00A8  28AA               	goto	u247lld
  3720  00A9  0AD8               	incf	dtoa@n+7,f
  3721  00AA                     u247lld:
  3722  00AA                     l1116:	
  3723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  3724                           
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3727  00AA  0021               	movlb	1	; select bank1
  3728  00AB  1BBD               	btfsc	(_prec+1)^(0+128),7
  3729  00AC  28AE               	goto	u2481
  3730  00AD  28AF               	goto	u2480
  3731  00AE                     u2481:
  3732  00AE  28B3               	goto	l1117
  3733  00AF                     u2480:
  3734  00AF                     l2729:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3737  00AF  30FD               	movlw	253
  3738  00B0  05F0               	andwf	_flags,f
  3739  00B1  30FF               	movlw	255
  3740  00B2  05F1               	andwf	_flags+1,f
  3741  00B3                     l1117:	
  3742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  3743                           
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3746  00B3  083D               	movf	(_prec+1)^(0+128),w
  3747  00B4  3A80               	xorlw	128
  3748  00B5  0020               	movlb	0	; select bank0
  3749  00B6  00C5               	movwf	??_dtoa
  3750  00B7  3080               	movlw	128
  3751  00B8  0245               	subwf	??_dtoa,w
  3752  00B9  1D03               	skipz
  3753  00BA  28BE               	goto	u2495
  3754  00BB  3001               	movlw	1
  3755  00BC  0021               	movlb	1	; select bank1
  3756  00BD  023C               	subwf	_prec^(0+128),w
  3757  00BE                     u2495:
  3758  00BE  1803               	skipnc
  3759  00BF  28C1               	goto	u2491
  3760  00C0  28C2               	goto	u2490
  3761  00C1                     u2491:
  3762  00C1  28C8               	goto	l2733
  3763  00C2                     u2490:
  3764  00C2                     l2731:
  3765  00C2  3001               	movlw	1
  3766  00C3  0020               	movlb	0	; select bank0
  3767  00C4  00CB               	movwf	dtoa@p
  3768  00C5  3000               	movlw	0
  3769  00C6  00CC               	movwf	dtoa@p+1
  3770  00C7  28D0               	goto	l1121
  3771  00C8                     l2733:
  3772  00C8  0021               	movlb	1	; select bank1
  3773  00C9  083D               	movf	(_prec+1)^(0+128),w
  3774  00CA  0020               	movlb	0	; select bank0
  3775  00CB  00CC               	movwf	dtoa@p+1
  3776  00CC  0021               	movlb	1	; select bank1
  3777  00CD  083C               	movf	_prec^(0+128),w
  3778  00CE  0020               	movlb	0	; select bank0
  3779  00CF  00CB               	movwf	dtoa@p
  3780  00D0                     l1121:
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3783  00D0  0021               	movlb	1	; select bank1
  3784  00D1  083B               	movf	(_width+1)^(0+128),w
  3785  00D2  0020               	movlb	0	; select bank0
  3786  00D3  00CE               	movwf	dtoa@w+1
  3787  00D4  0021               	movlb	1	; select bank1
  3788  00D5  083A               	movf	_width^(0+128),w
  3789  00D6  0020               	movlb	0	; select bank0
  3790  00D7  00CD               	movwf	dtoa@w
  3791  00D8                     l2735:
  3792                           
  3793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3794  00D8  084F               	movf	dtoa@s,w
  3795  00D9  0450               	iorwf	dtoa@s+1,w
  3796  00DA  1D03               	btfss	3,2
  3797  00DB  28DD               	goto	u2501
  3798  00DC  28DE               	goto	u2500
  3799  00DD                     u2501:
  3800  00DD  28E2               	goto	l2739
  3801  00DE                     u2500:
  3802  00DE                     l2737:
  3803  00DE  1D70               	btfss	_flags,2
  3804  00DF  28E1               	goto	u2511
  3805  00E0  28E2               	goto	u2510
  3806  00E1                     u2511:
  3807  00E1  28E6               	goto	l1122
  3808  00E2                     u2510:
  3809  00E2                     l2739:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  3812  00E2  30FF               	movlw	255
  3813  00E3  07CD               	addwf	dtoa@w,f
  3814  00E4  30FF               	movlw	255
  3815  00E5  3DCE               	addwfc	dtoa@w+1,f
  3816  00E6                     l1122:	
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  3818                           
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3821  00E6  301F               	movlw	31
  3822  00E7  00D9               	movwf	dtoa@i
  3823  00E8  3000               	movlw	0
  3824  00E9  00DA               	movwf	dtoa@i+1
  3825  00EA                     l2741:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3828  00EA  0022               	movlb	2	; select bank2
  3829  00EB  01BF               	clrf	(_dbuf^(0+256)+31)
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3832  00EC  2956               	goto	l1125
  3833  00ED                     l2743:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  3836  00ED  30FF               	movlw	255
  3837  00EE  0020               	movlb	0	; select bank0
  3838  00EF  07D9               	addwf	dtoa@i,f
  3839  00F0  30FF               	movlw	255
  3840  00F1  3DDA               	addwfc	dtoa@i+1,f
  3841  00F2                     l2745:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3844  00F2  300A               	movlw	10
  3845  00F3  00A0               	movwf	___aomod@divisor
  3846  00F4  01A1               	clrf	___aomod@divisor+1
  3847  00F5  01A2               	clrf	___aomod@divisor+2
  3848  00F6  01A3               	clrf	___aomod@divisor+3
  3849  00F7  01A4               	clrf	___aomod@divisor+4
  3850  00F8  01A5               	clrf	___aomod@divisor+5
  3851  00F9  01A6               	clrf	___aomod@divisor+6
  3852  00FA  01A7               	clrf	___aomod@divisor+7
  3853  00FB  0851               	movf	dtoa@n,w
  3854  00FC  00A8               	movwf	___aomod@dividend
  3855  00FD  0852               	movf	dtoa@n+1,w
  3856  00FE  00A9               	movwf	___aomod@dividend+1
  3857  00FF  0853               	movf	dtoa@n+2,w
  3858  0100  00AA               	movwf	___aomod@dividend+2
  3859  0101  0854               	movf	dtoa@n+3,w
  3860  0102  00AB               	movwf	___aomod@dividend+3
  3861  0103  0855               	movf	dtoa@n+4,w
  3862  0104  00AC               	movwf	___aomod@dividend+4
  3863  0105  0856               	movf	dtoa@n+5,w
  3864  0106  00AD               	movwf	___aomod@dividend+5
  3865  0107  0857               	movf	dtoa@n+6,w
  3866  0108  00AE               	movwf	___aomod@dividend+6
  3867  0109  0858               	movf	dtoa@n+7,w
  3868  010A  00AF               	movwf	___aomod@dividend+7
  3869  010B  3183  23DD  3180   	fcall	___aomod
  3870  010E  0020               	movlb	0	; select bank0
  3871  010F  0821               	movf	?___aomod+1,w
  3872  0110  00B4               	movwf	abs@a+1
  3873  0111  0820               	movf	?___aomod,w
  3874  0112  00B3               	movwf	abs@a
  3875  0113  318F  2711  3180   	fcall	_abs
  3876  0116  0020               	movlb	0	; select bank0
  3877  0117  0833               	movf	?_abs,w
  3878  0118  3E30               	addlw	48
  3879  0119  00C5               	movwf	??_dtoa
  3880  011A  0859               	movf	dtoa@i,w
  3881  011B  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3882  011C  0086               	movwf	6
  3883  011D  3001               	movlw	1	; select bank2/3
  3884  011E  0087               	movwf	7
  3885  011F  0845               	movf	??_dtoa,w
  3886  0120  0081               	movwf	1
  3887  0121                     l2747:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  3890  0121  30FF               	movlw	255
  3891  0122  07CB               	addwf	dtoa@p,f
  3892  0123  30FF               	movlw	255
  3893  0124  3DCC               	addwfc	dtoa@p+1,f
  3894  0125                     l2749:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  3897  0125  30FF               	movlw	255
  3898  0126  07CD               	addwf	dtoa@w,f
  3899  0127  30FF               	movlw	255
  3900  0128  3DCE               	addwfc	dtoa@w+1,f
  3901  0129                     l2751:
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3904  0129  300A               	movlw	10
  3905  012A  00A0               	movwf	___aodiv@divisor
  3906  012B  01A1               	clrf	___aodiv@divisor+1
  3907  012C  01A2               	clrf	___aodiv@divisor+2
  3908  012D  01A3               	clrf	___aodiv@divisor+3
  3909  012E  01A4               	clrf	___aodiv@divisor+4
  3910  012F  01A5               	clrf	___aodiv@divisor+5
  3911  0130  01A6               	clrf	___aodiv@divisor+6
  3912  0131  01A7               	clrf	___aodiv@divisor+7
  3913  0132  0851               	movf	dtoa@n,w
  3914  0133  00A8               	movwf	___aodiv@dividend
  3915  0134  0852               	movf	dtoa@n+1,w
  3916  0135  00A9               	movwf	___aodiv@dividend+1
  3917  0136  0853               	movf	dtoa@n+2,w
  3918  0137  00AA               	movwf	___aodiv@dividend+2
  3919  0138  0854               	movf	dtoa@n+3,w
  3920  0139  00AB               	movwf	___aodiv@dividend+3
  3921  013A  0855               	movf	dtoa@n+4,w
  3922  013B  00AC               	movwf	___aodiv@dividend+4
  3923  013C  0856               	movf	dtoa@n+5,w
  3924  013D  00AD               	movwf	___aodiv@dividend+5
  3925  013E  0857               	movf	dtoa@n+6,w
  3926  013F  00AE               	movwf	___aodiv@dividend+6
  3927  0140  0858               	movf	dtoa@n+7,w
  3928  0141  00AF               	movwf	___aodiv@dividend+7
  3929  0142  3182  22D8  3180   	fcall	___aodiv
  3930  0145  0020               	movlb	0	; select bank0
  3931  0146  0820               	movf	?___aodiv,w
  3932  0147  00D1               	movwf	dtoa@n
  3933  0148  0821               	movf	?___aodiv+1,w
  3934  0149  00D2               	movwf	dtoa@n+1
  3935  014A  0822               	movf	?___aodiv+2,w
  3936  014B  00D3               	movwf	dtoa@n+2
  3937  014C  0823               	movf	?___aodiv+3,w
  3938  014D  00D4               	movwf	dtoa@n+3
  3939  014E  0824               	movf	?___aodiv+4,w
  3940  014F  00D5               	movwf	dtoa@n+4
  3941  0150  0825               	movf	?___aodiv+5,w
  3942  0151  00D6               	movwf	dtoa@n+5
  3943  0152  0826               	movf	?___aodiv+6,w
  3944  0153  00D7               	movwf	dtoa@n+6
  3945  0154  0827               	movf	?___aodiv+7,w
  3946  0155  00D8               	movwf	dtoa@n+7
  3947  0156                     l1125:	
  3948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  3949                           
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3952  0156  0020               	movlb	0	; select bank0
  3953  0157  085A               	movf	dtoa@i+1,w
  3954  0158  3A80               	xorlw	128
  3955  0159  00C5               	movwf	??_dtoa
  3956  015A  3080               	movlw	128
  3957  015B  0245               	subwf	??_dtoa,w
  3958  015C  1D03               	skipz
  3959  015D  2960               	goto	u2525
  3960  015E  3001               	movlw	1
  3961  015F  0259               	subwf	dtoa@i,w
  3962  0160                     u2525:
  3963  0160  1C03               	skipc
  3964  0161  2963               	goto	u2521
  3965  0162  2964               	goto	u2520
  3966  0163                     u2521:
  3967  0163  2990               	goto	l2761
  3968  0164                     u2520:
  3969  0164                     l2753:
  3970  0164  0020               	movlb	0	; select bank0
  3971  0165  0851               	movf	dtoa@n,w
  3972  0166  0452               	iorwf	dtoa@n+1,w
  3973  0167  0453               	iorwf	dtoa@n+2,w
  3974  0168  0454               	iorwf	dtoa@n+3,w
  3975  0169  0455               	iorwf	dtoa@n+4,w
  3976  016A  0456               	iorwf	dtoa@n+5,w
  3977  016B  0457               	iorwf	dtoa@n+6,w
  3978  016C  0458               	iorwf	dtoa@n+7,w
  3979  016D  1D03               	skipz
  3980  016E  2970               	goto	u2531
  3981  016F  2971               	goto	u2530
  3982  0170                     u2531:
  3983  0170  28ED               	goto	l2743
  3984  0171                     u2530:
  3985  0171                     l2755:
  3986  0171  084C               	movf	dtoa@p+1,w
  3987  0172  3A80               	xorlw	128
  3988  0173  00C5               	movwf	??_dtoa
  3989  0174  3080               	movlw	128
  3990  0175  0245               	subwf	??_dtoa,w
  3991  0176  1D03               	skipz
  3992  0177  297A               	goto	u2545
  3993  0178  3001               	movlw	1
  3994  0179  024B               	subwf	dtoa@p,w
  3995  017A                     u2545:
  3996  017A  1803               	skipnc
  3997  017B  297D               	goto	u2541
  3998  017C  297E               	goto	u2540
  3999  017D                     u2541:
  4000  017D  28ED               	goto	l2743
  4001  017E                     u2540:
  4002  017E                     l2757:
  4003  017E  0020               	movlb	0	; select bank0
  4004  017F  084E               	movf	dtoa@w+1,w
  4005  0180  3A80               	xorlw	128
  4006  0181  00C5               	movwf	??_dtoa
  4007  0182  3080               	movlw	128
  4008  0183  0245               	subwf	??_dtoa,w
  4009  0184  1D03               	skipz
  4010  0185  2988               	goto	u2555
  4011  0186  3001               	movlw	1
  4012  0187  024D               	subwf	dtoa@w,w
  4013  0188                     u2555:
  4014  0188  1C03               	skipc
  4015  0189  298B               	goto	u2551
  4016  018A  298C               	goto	u2550
  4017  018B                     u2551:
  4018  018B  2990               	goto	l2761
  4019  018C                     u2550:
  4020  018C                     l2759:
  4021  018C  18F0               	btfsc	_flags,1
  4022  018D  298F               	goto	u2561
  4023  018E  2990               	goto	u2560
  4024  018F                     u2561:
  4025  018F  28ED               	goto	l2743
  4026  0190                     u2560:
  4027  0190                     l2761:
  4028                           
  4029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4030  0190  0020               	movlb	0	; select bank0
  4031  0191  084F               	movf	dtoa@s,w
  4032  0192  0450               	iorwf	dtoa@s+1,w
  4033  0193  1D03               	btfss	3,2
  4034  0194  2996               	goto	u2571
  4035  0195  2997               	goto	u2570
  4036  0196                     u2571:
  4037  0196  299B               	goto	l2765
  4038  0197                     u2570:
  4039  0197                     l2763:
  4040  0197  1D70               	btfss	_flags,2
  4041  0198  299A               	goto	u2581
  4042  0199  299B               	goto	u2580
  4043  019A                     u2581:
  4044  019A  29B7               	goto	l2775
  4045  019B                     u2580:
  4046  019B                     l2765:
  4047                           
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4049  019B  30FF               	movlw	255
  4050  019C  07D9               	addwf	dtoa@i,f
  4051  019D  30FF               	movlw	255
  4052  019E  3DDA               	addwfc	dtoa@i+1,f
  4053  019F                     l2767:
  4054                           
  4055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4056  019F  084F               	movf	dtoa@s,w
  4057  01A0  0450               	iorwf	dtoa@s+1,w
  4058  01A1  1D03               	btfss	3,2
  4059  01A2  29A4               	goto	u2591
  4060  01A3  29A5               	goto	u2590
  4061  01A4                     u2591:
  4062  01A4  29AA               	goto	l2771
  4063  01A5                     u2590:
  4064  01A5                     l2769:
  4065  01A5  302B               	movlw	43
  4066  01A6  00C8               	movwf	_dtoa$1427
  4067  01A7  3000               	movlw	0
  4068  01A8  00C9               	movwf	_dtoa$1427+1
  4069  01A9  29AE               	goto	l2773
  4070  01AA                     l2771:
  4071  01AA  302D               	movlw	45
  4072  01AB  00C8               	movwf	_dtoa$1427
  4073  01AC  3000               	movlw	0
  4074  01AD  00C9               	movwf	_dtoa$1427+1
  4075  01AE                     l2773:
  4076  01AE  0848               	movf	_dtoa$1427,w
  4077  01AF  00C5               	movwf	??_dtoa
  4078  01B0  0859               	movf	dtoa@i,w
  4079  01B1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4080  01B2  0086               	movwf	6
  4081  01B3  3001               	movlw	1	; select bank2/3
  4082  01B4  0087               	movwf	7
  4083  01B5  0845               	movf	??_dtoa,w
  4084  01B6  0081               	movwf	1
  4085  01B7                     l2775:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4088  01B7  0859               	movf	dtoa@i,w
  4089  01B8  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4090  01B9  00C5               	movwf	??_dtoa
  4091  01BA  0845               	movf	??_dtoa,w
  4092  01BB  00B4               	movwf	pad@buf
  4093  01BC  084E               	movf	dtoa@w+1,w
  4094  01BD  00B6               	movwf	pad@p+1
  4095  01BE  084D               	movf	dtoa@w,w
  4096  01BF  00B5               	movwf	pad@p
  4097  01C0  084A               	movf	dtoa@fp,w
  4098  01C1  3186  2687  3180   	fcall	_pad
  4099  01C4  0020               	movlb	0	; select bank0
  4100  01C5  0835               	movf	?_pad+1,w
  4101  01C6  00BE               	movwf	?_dtoa+1
  4102  01C7  0834               	movf	?_pad,w
  4103  01C8  00BD               	movwf	?_dtoa
  4104  01C9                     l1139:
  4105  01C9  0008               	return
  4106  01CA                     __end_of_dtoa:
  4107                           
  4108                           	psect	text5
  4109  0687                     __ptext5:	
  4110 ;; *************** function _pad *****************
  4111 ;; Defined at:
  4112 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  fp              1    wreg     PTR struct _IO_FILE
  4115 ;;		 -> NULL(0), 
  4116 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  4117 ;;		 -> dbuf(32), 
  4118 ;;  p               2   21[BANK0 ] int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  fp              1   28[BANK0 ] PTR struct _IO_FILE
  4121 ;;		 -> NULL(0), 
  4122 ;;  w               2   26[BANK0 ] int 
  4123 ;;  i               2   24[BANK0 ] int 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  2   20[BANK0 ] int 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4133 ;;      Params:         0       3       0       0       0       0
  4134 ;;      Locals:         0       5       0       0       0       0
  4135 ;;      Temps:          0       1       0       0       0       0
  4136 ;;      Totals:         0       9       0       0       0       0
  4137 ;;Total ram usage:        9 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 8
  4140 ;; This function calls:
  4141 ;;		_fputc
  4142 ;;		_fputs
  4143 ;;		_strlen
  4144 ;; This function is called by:
  4145 ;;		_dtoa
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function _pad
  4151  0687                     _pad:
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4155                           ;pad@fp stored from wreg
  4156  0687  0020               	movlb	0	; select bank0
  4157  0688  00BC               	movwf	pad@fp
  4158  0689                     l2667:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4161  0689  1C70               	btfss	_flags,0
  4162  068A  2E8C               	goto	u2341
  4163  068B  2E8D               	goto	u2340
  4164  068C                     u2341:
  4165  068C  2E95               	goto	l2671
  4166  068D                     u2340:
  4167  068D                     l2669:
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4170  068D  083C               	movf	pad@fp,w
  4171  068E  00B7               	movwf	??_pad
  4172  068F  0837               	movf	??_pad,w
  4173  0690  00AC               	movwf	fputs@fp
  4174  0691  0834               	movf	pad@buf,w
  4175  0692  318F  274C  3186   	fcall	_fputs
  4176  0695                     l2671:
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4179  0695  0020               	movlb	0	; select bank0
  4180  0696  1BB6               	btfsc	pad@p+1,7
  4181  0697  2E99               	goto	u2351
  4182  0698  2E9A               	goto	u2350
  4183  0699                     u2351:
  4184  0699  2E9F               	goto	l2675
  4185  069A                     u2350:
  4186  069A                     l2673:
  4187  069A  0836               	movf	pad@p+1,w
  4188  069B  00BB               	movwf	pad@w+1
  4189  069C  0835               	movf	pad@p,w
  4190  069D  00BA               	movwf	pad@w
  4191  069E  2EA1               	goto	l1092
  4192  069F                     l2675:
  4193  069F  01BA               	clrf	pad@w
  4194  06A0  01BB               	clrf	pad@w+1
  4195  06A1                     l1092:
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4198  06A1  01B8               	clrf	pad@i
  4199  06A2  01B9               	clrf	pad@i+1
  4200                           
  4201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4202  06A3  2EB5               	goto	l2681
  4203  06A4                     l2677:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4206  06A4  3020               	movlw	32
  4207  06A5  0020               	movlb	0	; select bank0
  4208  06A6  00A4               	movwf	fputc@c
  4209  06A7  3000               	movlw	0
  4210  06A8  00A5               	movwf	fputc@c+1
  4211  06A9  083C               	movf	pad@fp,w
  4212  06AA  00B7               	movwf	??_pad
  4213  06AB  0837               	movf	??_pad,w
  4214  06AC  00A6               	movwf	fputc@fp
  4215  06AD  3187  2725  3186   	fcall	_fputc
  4216  06B0                     l2679:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4219  06B0  3001               	movlw	1
  4220  06B1  0020               	movlb	0	; select bank0
  4221  06B2  07B8               	addwf	pad@i,f
  4222  06B3  3000               	movlw	0
  4223  06B4  3DB9               	addwfc	pad@i+1,f
  4224  06B5                     l2681:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4227  06B5  0839               	movf	pad@i+1,w
  4228  06B6  3A80               	xorlw	128
  4229  06B7  00B7               	movwf	??_pad
  4230  06B8  083B               	movf	pad@w+1,w
  4231  06B9  3A80               	xorlw	128
  4232  06BA  0237               	subwf	??_pad,w
  4233  06BB  1D03               	skipz
  4234  06BC  2EBF               	goto	u2365
  4235  06BD  083A               	movf	pad@w,w
  4236  06BE  0238               	subwf	pad@i,w
  4237  06BF                     u2365:
  4238  06BF  1C03               	skipc
  4239  06C0  2EC2               	goto	u2361
  4240  06C1  2EC3               	goto	u2360
  4241  06C2                     u2361:
  4242  06C2  2EA4               	goto	l2677
  4243  06C3                     u2360:
  4244  06C3                     l1095:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4247  06C3  1870               	btfsc	_flags,0
  4248  06C4  2EC6               	goto	u2371
  4249  06C5  2EC7               	goto	u2370
  4250  06C6                     u2371:
  4251  06C6  2ED0               	goto	l2685
  4252  06C7                     u2370:
  4253  06C7                     l2683:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4256  06C7  0020               	movlb	0	; select bank0
  4257  06C8  083C               	movf	pad@fp,w
  4258  06C9  00B7               	movwf	??_pad
  4259  06CA  0837               	movf	??_pad,w
  4260  06CB  00AC               	movwf	fputs@fp
  4261  06CC  0834               	movf	pad@buf,w
  4262  06CD  318F  274C  3186   	fcall	_fputs
  4263  06D0                     l2685:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4266  06D0  0020               	movlb	0	; select bank0
  4267  06D1  0834               	movf	pad@buf,w
  4268  06D2  00A0               	movwf	strlen@s
  4269  06D3  3001               	movlw	1
  4270  06D4  00A1               	movwf	strlen@s+1
  4271  06D5  318E  26DB  3186   	fcall	_strlen
  4272  06D8  0020               	movlb	0	; select bank0
  4273  06D9  083A               	movf	pad@w,w
  4274  06DA  0720               	addwf	?_strlen,w
  4275  06DB  00B4               	movwf	?_pad
  4276  06DC  083B               	movf	pad@w+1,w
  4277  06DD  3D21               	addwfc	?_strlen+1,w
  4278  06DE  00B5               	movwf	?_pad+1
  4279  06DF                     l1097:
  4280  06DF  0008               	return
  4281  06E0                     __end_of_pad:
  4282                           
  4283                           	psect	text6
  4284  0EDB                     __ptext6:	
  4285 ;; *************** function _strlen *****************
  4286 ;; Defined at:
  4287 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4290 ;;		 -> dbuf(32), STR_1(15), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  4293 ;;		 -> dbuf(32), STR_1(15), 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    0[BANK0 ] unsigned int 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4303 ;;      Params:         0       2       0       0       0       0
  4304 ;;      Locals:         0       2       0       0       0       0
  4305 ;;      Temps:          0       1       0       0       0       0
  4306 ;;      Totals:         0       5       0       0       0       0
  4307 ;;Total ram usage:        5 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 4
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_pad
  4314 ;;		_UART_example_WRITE_STRING
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _strlen
  4320  0EDB                     _strlen:
  4321  0EDB                     l2581:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4324                           
  4325  0EDB  0020               	movlb	0	; select bank0
  4326  0EDC  0821               	movf	strlen@s+1,w
  4327  0EDD  00A4               	movwf	strlen@a+1
  4328  0EDE  0820               	movf	strlen@s,w
  4329  0EDF  00A3               	movwf	strlen@a
  4330  0EE0  2EE5               	goto	l2585
  4331  0EE1                     l2583:
  4332  0EE1  3001               	movlw	1
  4333  0EE2  07A0               	addwf	strlen@s,f
  4334  0EE3  3000               	movlw	0
  4335  0EE4  3DA1               	addwfc	strlen@s+1,f
  4336  0EE5                     l2585:
  4337  0EE5  0820               	movf	strlen@s,w
  4338  0EE6  0084               	movwf	4
  4339  0EE7  0821               	movf	strlen@s+1,w
  4340  0EE8  0085               	movwf	5
  4341  0EE9  0012               	moviw fsr0++
  4342  0EEA  1D03               	btfss	3,2
  4343  0EEB  2EED               	goto	u2111
  4344  0EEC  2EEE               	goto	u2110
  4345  0EED                     u2111:
  4346  0EED  2EE1               	goto	l2583
  4347  0EEE                     u2110:
  4348  0EEE                     l2587:
  4349  0EEE  0823               	movf	strlen@a,w
  4350  0EEF  0220               	subwf	strlen@s,w
  4351  0EF0  00A0               	movwf	?_strlen
  4352  0EF1  0824               	movf	strlen@a+1,w
  4353  0EF2  3B21               	subwfb	strlen@s+1,w
  4354  0EF3  00A1               	movwf	?_strlen+1
  4355  0EF4                     l1187:
  4356  0EF4  0008               	return
  4357  0EF5                     __end_of_strlen:
  4358                           
  4359                           	psect	text7
  4360  0F4C                     __ptext7:	
  4361 ;; *************** function _fputs *****************
  4362 ;; Defined at:
  4363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  s               1    wreg     PTR const unsigned char 
  4366 ;;		 -> dbuf(32), 
  4367 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  4368 ;;		 -> NULL(0), 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  s               1   19[BANK0 ] PTR const unsigned char 
  4371 ;;		 -> dbuf(32), 
  4372 ;;  i               2   17[BANK0 ] int 
  4373 ;;  c               1   16[BANK0 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  2   12[BANK0 ] int 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4383 ;;      Params:         0       1       0       0       0       0
  4384 ;;      Locals:         0       4       0       0       0       0
  4385 ;;      Temps:          0       3       0       0       0       0
  4386 ;;      Totals:         0       8       0       0       0       0
  4387 ;;Total ram usage:        8 bytes
  4388 ;; Hardware stack levels used: 1
  4389 ;; Hardware stack levels required when called: 7
  4390 ;; This function calls:
  4391 ;;		_fputc
  4392 ;; This function is called by:
  4393 ;;		_pad
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           
  4398                           ;psect for function _fputs
  4399  0F4C                     _fputs:
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4403                           ;fputs@s stored from wreg
  4404  0F4C  0020               	movlb	0	; select bank0
  4405  0F4D  00B3               	movwf	fputs@s
  4406  0F4E                     l2591:
  4407  0F4E  01B1               	clrf	fputs@i
  4408  0F4F  01B2               	clrf	fputs@i+1
  4409  0F50  2F64               	goto	l2597
  4410  0F51                     l2593:
  4411  0F51  0830               	movf	fputs@c,w
  4412  0F52  00AD               	movwf	??_fputs
  4413  0F53  01AE               	clrf	??_fputs+1
  4414  0F54  082D               	movf	??_fputs,w
  4415  0F55  00A4               	movwf	fputc@c
  4416  0F56  082E               	movf	??_fputs+1,w
  4417  0F57  00A5               	movwf	fputc@c+1
  4418  0F58  082C               	movf	fputs@fp,w
  4419  0F59  00AF               	movwf	??_fputs+2
  4420  0F5A  082F               	movf	??_fputs+2,w
  4421  0F5B  00A6               	movwf	fputc@fp
  4422  0F5C  3187  2725  318F   	fcall	_fputc
  4423  0F5F                     l2595:
  4424  0F5F  3001               	movlw	1
  4425  0F60  0020               	movlb	0	; select bank0
  4426  0F61  07B1               	addwf	fputs@i,f
  4427  0F62  3000               	movlw	0
  4428  0F63  3DB2               	addwfc	fputs@i+1,f
  4429  0F64                     l2597:
  4430  0F64  0831               	movf	fputs@i,w
  4431  0F65  0733               	addwf	fputs@s,w
  4432  0F66  00AD               	movwf	??_fputs
  4433  0F67  082D               	movf	??_fputs,w
  4434  0F68  0086               	movwf	6
  4435  0F69  3001               	movlw	1	; select bank2/3
  4436  0F6A  0087               	movwf	7
  4437  0F6B  0801               	movf	1,w
  4438  0F6C  00AE               	movwf	??_fputs+1
  4439  0F6D  082E               	movf	??_fputs+1,w
  4440  0F6E  00B0               	movwf	fputs@c
  4441  0F6F  0830               	movf	fputs@c,w
  4442  0F70  1D03               	btfss	3,2
  4443  0F71  2F73               	goto	u2121
  4444  0F72  2F74               	goto	u2120
  4445  0F73                     u2121:
  4446  0F73  2F51               	goto	l2593
  4447  0F74                     u2120:
  4448  0F74                     l1181:
  4449  0F74  0008               	return
  4450  0F75                     __end_of_fputs:
  4451                           
  4452                           	psect	text8
  4453  0F11                     __ptext8:	
  4454 ;; *************** function _abs *****************
  4455 ;; Defined at:
  4456 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  a               2   19[BANK0 ] int 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  2   19[BANK0 ] int 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4470 ;;      Params:         0       2       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0
  4472 ;;      Temps:          0       2       0       0       0       0
  4473 ;;      Totals:         0       4       0       0       0       0
  4474 ;;Total ram usage:        4 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 4
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_dtoa
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _abs
  4486  0F11                     _abs:
  4487  0F11                     l2689:	
  4488                           ;incstack = 0
  4489                           ; Regs used in _abs: [wreg+status,2+status,0]
  4490                           
  4491  0F11  0020               	movlb	0	; select bank0
  4492  0F12  0834               	movf	abs@a+1,w
  4493  0F13  3A80               	xorlw	128
  4494  0F14  00B5               	movwf	??_abs
  4495  0F15  3080               	movlw	128
  4496  0F16  0235               	subwf	??_abs,w
  4497  0F17  1D03               	skipz
  4498  0F18  2F1B               	goto	u2385
  4499  0F19  3001               	movlw	1
  4500  0F1A  0233               	subwf	abs@a,w
  4501  0F1B                     u2385:
  4502  0F1B  1803               	skipnc
  4503  0F1C  2F1E               	goto	u2381
  4504  0F1D  2F1F               	goto	u2380
  4505  0F1E                     u2381:
  4506  0F1E  2F2C               	goto	l1158
  4507  0F1F                     u2380:
  4508  0F1F                     l2691:
  4509  0F1F  0020               	movlb	0	; select bank0
  4510  0F20  0933               	comf	abs@a,w
  4511  0F21  00B5               	movwf	??_abs
  4512  0F22  0934               	comf	abs@a+1,w
  4513  0F23  00B6               	movwf	??_abs+1
  4514  0F24  0AB5               	incf	??_abs,f
  4515  0F25  1903               	skipnz
  4516  0F26  0AB6               	incf	??_abs+1,f
  4517  0F27  0835               	movf	??_abs,w
  4518  0F28  00B3               	movwf	?_abs
  4519  0F29  0836               	movf	??_abs+1,w
  4520  0F2A  00B4               	movwf	?_abs+1
  4521  0F2B  2F2C               	goto	l1161
  4522  0F2C                     l1158:
  4523  0F2C                     l1161:
  4524  0F2C  0008               	return
  4525  0F2D                     __end_of_abs:
  4526                           
  4527                           	psect	text9
  4528  03DD                     __ptext9:	
  4529 ;; *************** function ___aomod *****************
  4530 ;; Defined at:
  4531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  divisor         8    0[BANK0 ] long long 
  4534 ;;  dividend        8    8[BANK0 ] long long 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  sign            1   18[BANK0 ] unsigned char 
  4537 ;;  counter         1   17[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  8    0[BANK0 ] long long 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4547 ;;      Params:         0      16       0       0       0       0
  4548 ;;      Locals:         0       2       0       0       0       0
  4549 ;;      Temps:          0       1       0       0       0       0
  4550 ;;      Totals:         0      19       0       0       0       0
  4551 ;;Total ram usage:       19 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; Hardware stack levels required when called: 4
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_dtoa
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function ___aomod
  4563  03DD                     ___aomod:
  4564  03DD                     l2637:	
  4565                           ;incstack = 0
  4566                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4567                           
  4568  03DD  0020               	movlb	0	; select bank0
  4569  03DE  01B2               	clrf	___aomod@sign
  4570  03DF                     l2639:
  4571  03DF  3028               	movlw	low ___aomod@dividend
  4572  03E0  0086               	movwf	6
  4573  03E1  3000               	movlw	high ___aomod@dividend
  4574  03E2  0087               	movwf	7
  4575  03E3  3F47               	moviw [7]fsr1
  4576  03E4  00B0               	movwf	??___aomod
  4577  03E5  1FB0               	btfss	??___aomod,7
  4578  03E6  2BE8               	goto	u2241
  4579  03E7  2BE9               	goto	u2240
  4580  03E8                     u2241:
  4581  03E8  2C0B               	goto	l2643
  4582  03E9                     u2240:
  4583  03E9                     l2641:
  4584  03E9  0020               	movlb	0	; select bank0
  4585  03EA  09A8               	comf	___aomod@dividend,f
  4586  03EB  09A9               	comf	___aomod@dividend+1,f
  4587  03EC  09AA               	comf	___aomod@dividend+2,f
  4588  03ED  09AB               	comf	___aomod@dividend+3,f
  4589  03EE  09AC               	comf	___aomod@dividend+4,f
  4590  03EF  09AD               	comf	___aomod@dividend+5,f
  4591  03F0  09AE               	comf	___aomod@dividend+6,f
  4592  03F1  09AF               	comf	___aomod@dividend+7,f
  4593  03F2  0AA8               	incf	___aomod@dividend,f
  4594  03F3  1D03               	skipz
  4595  03F4  2C08               	goto	u225lld
  4596  03F5  0AA9               	incf	___aomod@dividend+1,f
  4597  03F6  1D03               	skipz
  4598  03F7  2C08               	goto	u225lld
  4599  03F8  0AAA               	incf	___aomod@dividend+2,f
  4600  03F9  1D03               	skipz
  4601  03FA  2C08               	goto	u225lld
  4602  03FB  0AAB               	incf	___aomod@dividend+3,f
  4603  03FC  1D03               	skipz
  4604  03FD  2C08               	goto	u225lld
  4605  03FE  0AAC               	incf	___aomod@dividend+4,f
  4606  03FF  1D03               	skipz
  4607  0400  2C08               	goto	u225lld
  4608  0401  0AAD               	incf	___aomod@dividend+5,f
  4609  0402  1D03               	skipz
  4610  0403  2C08               	goto	u225lld
  4611  0404  0AAE               	incf	___aomod@dividend+6,f
  4612  0405  1D03               	skipz
  4613  0406  2C08               	goto	u225lld
  4614  0407  0AAF               	incf	___aomod@dividend+7,f
  4615  0408                     u225lld:
  4616  0408  0020               	movlb	0	; select bank0
  4617  0409  01B2               	clrf	___aomod@sign
  4618  040A  0AB2               	incf	___aomod@sign,f
  4619  040B                     l2643:
  4620  040B  3020               	movlw	low ___aomod@divisor
  4621  040C  0086               	movwf	6
  4622  040D  3000               	movlw	high ___aomod@divisor
  4623  040E  0087               	movwf	7
  4624  040F  3F47               	moviw [7]fsr1
  4625  0410  0020               	movlb	0	; select bank0
  4626  0411  00B0               	movwf	??___aomod
  4627  0412  1FB0               	btfss	??___aomod,7
  4628  0413  2C15               	goto	u2261
  4629  0414  2C16               	goto	u2260
  4630  0415                     u2261:
  4631  0415  2C35               	goto	l2647
  4632  0416                     u2260:
  4633  0416                     l2645:
  4634  0416  0020               	movlb	0	; select bank0
  4635  0417  09A0               	comf	___aomod@divisor,f
  4636  0418  09A1               	comf	___aomod@divisor+1,f
  4637  0419  09A2               	comf	___aomod@divisor+2,f
  4638  041A  09A3               	comf	___aomod@divisor+3,f
  4639  041B  09A4               	comf	___aomod@divisor+4,f
  4640  041C  09A5               	comf	___aomod@divisor+5,f
  4641  041D  09A6               	comf	___aomod@divisor+6,f
  4642  041E  09A7               	comf	___aomod@divisor+7,f
  4643  041F  0AA0               	incf	___aomod@divisor,f
  4644  0420  1D03               	skipz
  4645  0421  2C35               	goto	u227lld
  4646  0422  0AA1               	incf	___aomod@divisor+1,f
  4647  0423  1D03               	skipz
  4648  0424  2C35               	goto	u227lld
  4649  0425  0AA2               	incf	___aomod@divisor+2,f
  4650  0426  1D03               	skipz
  4651  0427  2C35               	goto	u227lld
  4652  0428  0AA3               	incf	___aomod@divisor+3,f
  4653  0429  1D03               	skipz
  4654  042A  2C35               	goto	u227lld
  4655  042B  0AA4               	incf	___aomod@divisor+4,f
  4656  042C  1D03               	skipz
  4657  042D  2C35               	goto	u227lld
  4658  042E  0AA5               	incf	___aomod@divisor+5,f
  4659  042F  1D03               	skipz
  4660  0430  2C35               	goto	u227lld
  4661  0431  0AA6               	incf	___aomod@divisor+6,f
  4662  0432  1D03               	skipz
  4663  0433  2C35               	goto	u227lld
  4664  0434  0AA7               	incf	___aomod@divisor+7,f
  4665  0435                     u227lld:
  4666  0435                     l2647:
  4667  0435  0020               	movlb	0	; select bank0
  4668  0436  0820               	movf	___aomod@divisor,w
  4669  0437  0421               	iorwf	___aomod@divisor+1,w
  4670  0438  0422               	iorwf	___aomod@divisor+2,w
  4671  0439  0423               	iorwf	___aomod@divisor+3,w
  4672  043A  0424               	iorwf	___aomod@divisor+4,w
  4673  043B  0425               	iorwf	___aomod@divisor+5,w
  4674  043C  0426               	iorwf	___aomod@divisor+6,w
  4675  043D  0427               	iorwf	___aomod@divisor+7,w
  4676  043E  1903               	skipnz
  4677  043F  2C41               	goto	u2281
  4678  0440  2C42               	goto	u2280
  4679  0441                     u2281:
  4680  0441  2C95               	goto	l2663
  4681  0442                     u2280:
  4682  0442                     l2649:
  4683  0442  01B1               	clrf	___aomod@counter
  4684  0443  0AB1               	incf	___aomod@counter,f
  4685  0444  2C51               	goto	l2655
  4686  0445                     l2651:
  4687  0445  35A0               	lslf	___aomod@divisor,f
  4688  0446  0DA1               	rlf	___aomod@divisor+1,f
  4689  0447  0DA2               	rlf	___aomod@divisor+2,f
  4690  0448  0DA3               	rlf	___aomod@divisor+3,f
  4691  0449  0DA4               	rlf	___aomod@divisor+4,f
  4692  044A  0DA5               	rlf	___aomod@divisor+5,f
  4693  044B  0DA6               	rlf	___aomod@divisor+6,f
  4694  044C  0DA7               	rlf	___aomod@divisor+7,f
  4695  044D                     l2653:
  4696  044D  3001               	movlw	1
  4697  044E  00B0               	movwf	??___aomod
  4698  044F  0830               	movf	??___aomod,w
  4699  0450  07B1               	addwf	___aomod@counter,f
  4700  0451                     l2655:
  4701  0451  1FA7               	btfss	___aomod@divisor+7,7
  4702  0452  2C54               	goto	u2291
  4703  0453  2C55               	goto	u2290
  4704  0454                     u2291:
  4705  0454  2C45               	goto	l2651
  4706  0455                     u2290:
  4707  0455                     l2657:
  4708  0455  0827               	movf	___aomod@divisor+7,w
  4709  0456  022F               	subwf	___aomod@dividend+7,w
  4710  0457  1D03               	skipz
  4711  0458  2C73               	goto	u2305
  4712  0459  0826               	movf	___aomod@divisor+6,w
  4713  045A  022E               	subwf	___aomod@dividend+6,w
  4714  045B  1D03               	skipz
  4715  045C  2C73               	goto	u2305
  4716  045D  0825               	movf	___aomod@divisor+5,w
  4717  045E  022D               	subwf	___aomod@dividend+5,w
  4718  045F  1D03               	skipz
  4719  0460  2C73               	goto	u2305
  4720  0461  0824               	movf	___aomod@divisor+4,w
  4721  0462  022C               	subwf	___aomod@dividend+4,w
  4722  0463  1D03               	skipz
  4723  0464  2C73               	goto	u2305
  4724  0465  0823               	movf	___aomod@divisor+3,w
  4725  0466  022B               	subwf	___aomod@dividend+3,w
  4726  0467  1D03               	skipz
  4727  0468  2C73               	goto	u2305
  4728  0469  0822               	movf	___aomod@divisor+2,w
  4729  046A  022A               	subwf	___aomod@dividend+2,w
  4730  046B  1D03               	skipz
  4731  046C  2C73               	goto	u2305
  4732  046D  0821               	movf	___aomod@divisor+1,w
  4733  046E  0229               	subwf	___aomod@dividend+1,w
  4734  046F  1D03               	skipz
  4735  0470  2C73               	goto	u2305
  4736  0471  0820               	movf	___aomod@divisor,w
  4737  0472  0228               	subwf	___aomod@dividend,w
  4738  0473                     u2305:
  4739  0473  1C03               	skipc
  4740  0474  2C76               	goto	u2301
  4741  0475  2C77               	goto	u2300
  4742  0476                     u2301:
  4743  0476  2C87               	goto	l2661
  4744  0477                     u2300:
  4745  0477                     l2659:
  4746  0477  0820               	movf	___aomod@divisor,w
  4747  0478  02A8               	subwf	___aomod@dividend,f
  4748  0479  0821               	movf	___aomod@divisor+1,w
  4749  047A  3BA9               	subwfb	___aomod@dividend+1,f
  4750  047B  0822               	movf	___aomod@divisor+2,w
  4751  047C  3BAA               	subwfb	___aomod@dividend+2,f
  4752  047D  0823               	movf	___aomod@divisor+3,w
  4753  047E  3BAB               	subwfb	___aomod@dividend+3,f
  4754  047F  0824               	movf	___aomod@divisor+4,w
  4755  0480  3BAC               	subwfb	___aomod@dividend+4,f
  4756  0481  0825               	movf	___aomod@divisor+5,w
  4757  0482  3BAD               	subwfb	___aomod@dividend+5,f
  4758  0483  0826               	movf	___aomod@divisor+6,w
  4759  0484  3BAE               	subwfb	___aomod@dividend+6,f
  4760  0485  0827               	movf	___aomod@divisor+7,w
  4761  0486  3BAF               	subwfb	___aomod@dividend+7,f
  4762  0487                     l2661:
  4763  0487  36A7               	lsrf	___aomod@divisor+7,f
  4764  0488  0CA6               	rrf	___aomod@divisor+6,f
  4765  0489  0CA5               	rrf	___aomod@divisor+5,f
  4766  048A  0CA4               	rrf	___aomod@divisor+4,f
  4767  048B  0CA3               	rrf	___aomod@divisor+3,f
  4768  048C  0CA2               	rrf	___aomod@divisor+2,f
  4769  048D  0CA1               	rrf	___aomod@divisor+1,f
  4770  048E  0CA0               	rrf	___aomod@divisor,f
  4771  048F  3001               	movlw	1
  4772  0490  02B1               	subwf	___aomod@counter,f
  4773  0491  1D03               	btfss	3,2
  4774  0492  2C94               	goto	u2311
  4775  0493  2C95               	goto	u2310
  4776  0494                     u2311:
  4777  0494  2C55               	goto	l2657
  4778  0495                     u2310:
  4779  0495                     l2663:
  4780  0495  0832               	movf	___aomod@sign,w
  4781  0496  1903               	btfsc	3,2
  4782  0497  2C99               	goto	u2321
  4783  0498  2C9A               	goto	u2320
  4784  0499                     u2321:
  4785  0499  2CB8               	goto	l705
  4786  049A                     u2320:
  4787  049A                     l2665:
  4788  049A  09A8               	comf	___aomod@dividend,f
  4789  049B  09A9               	comf	___aomod@dividend+1,f
  4790  049C  09AA               	comf	___aomod@dividend+2,f
  4791  049D  09AB               	comf	___aomod@dividend+3,f
  4792  049E  09AC               	comf	___aomod@dividend+4,f
  4793  049F  09AD               	comf	___aomod@dividend+5,f
  4794  04A0  09AE               	comf	___aomod@dividend+6,f
  4795  04A1  09AF               	comf	___aomod@dividend+7,f
  4796  04A2  0AA8               	incf	___aomod@dividend,f
  4797  04A3  1D03               	skipz
  4798  04A4  2CB8               	goto	u233lld
  4799  04A5  0AA9               	incf	___aomod@dividend+1,f
  4800  04A6  1D03               	skipz
  4801  04A7  2CB8               	goto	u233lld
  4802  04A8  0AAA               	incf	___aomod@dividend+2,f
  4803  04A9  1D03               	skipz
  4804  04AA  2CB8               	goto	u233lld
  4805  04AB  0AAB               	incf	___aomod@dividend+3,f
  4806  04AC  1D03               	skipz
  4807  04AD  2CB8               	goto	u233lld
  4808  04AE  0AAC               	incf	___aomod@dividend+4,f
  4809  04AF  1D03               	skipz
  4810  04B0  2CB8               	goto	u233lld
  4811  04B1  0AAD               	incf	___aomod@dividend+5,f
  4812  04B2  1D03               	skipz
  4813  04B3  2CB8               	goto	u233lld
  4814  04B4  0AAE               	incf	___aomod@dividend+6,f
  4815  04B5  1D03               	skipz
  4816  04B6  2CB8               	goto	u233lld
  4817  04B7  0AAF               	incf	___aomod@dividend+7,f
  4818  04B8                     u233lld:
  4819  04B8                     l705:
  4820  04B8  0020               	movlb	0	; select bank0
  4821  04B9  0828               	movf	___aomod@dividend,w
  4822  04BA  00A0               	movwf	?___aomod
  4823  04BB  0829               	movf	___aomod@dividend+1,w
  4824  04BC  00A1               	movwf	?___aomod+1
  4825  04BD  082A               	movf	___aomod@dividend+2,w
  4826  04BE  00A2               	movwf	?___aomod+2
  4827  04BF  082B               	movf	___aomod@dividend+3,w
  4828  04C0  00A3               	movwf	?___aomod+3
  4829  04C1  082C               	movf	___aomod@dividend+4,w
  4830  04C2  00A4               	movwf	?___aomod+4
  4831  04C3  082D               	movf	___aomod@dividend+5,w
  4832  04C4  00A5               	movwf	?___aomod+5
  4833  04C5  082E               	movf	___aomod@dividend+6,w
  4834  04C6  00A6               	movwf	?___aomod+6
  4835  04C7  082F               	movf	___aomod@dividend+7,w
  4836  04C8  00A7               	movwf	?___aomod+7
  4837  04C9                     l706:
  4838  04C9  0008               	return
  4839  04CA                     __end_of___aomod:
  4840                           
  4841                           	psect	text10
  4842  02D8                     __ptext10:	
  4843 ;; *************** function ___aodiv *****************
  4844 ;; Defined at:
  4845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  divisor         8    0[BANK0 ] long long 
  4848 ;;  dividend        8    8[BANK0 ] long long 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  quotient        8   19[BANK0 ] long long 
  4851 ;;  sign            1   18[BANK0 ] unsigned char 
  4852 ;;  counter         1   17[BANK0 ] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  8    0[BANK0 ] long long 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4862 ;;      Params:         0      16       0       0       0       0
  4863 ;;      Locals:         0      10       0       0       0       0
  4864 ;;      Temps:          0       1       0       0       0       0
  4865 ;;      Totals:         0      27       0       0       0       0
  4866 ;;Total ram usage:       27 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 4
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_dtoa
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           
  4877                           ;psect for function ___aodiv
  4878  02D8                     ___aodiv:
  4879  02D8                     l2599:	
  4880                           ;incstack = 0
  4881                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4882                           
  4883  02D8  0020               	movlb	0	; select bank0
  4884  02D9  01B2               	clrf	___aodiv@sign
  4885  02DA                     l2601:
  4886  02DA  3020               	movlw	low ___aodiv@divisor
  4887  02DB  0086               	movwf	6
  4888  02DC  3000               	movlw	high ___aodiv@divisor
  4889  02DD  0087               	movwf	7
  4890  02DE  3F47               	moviw [7]fsr1
  4891  02DF  00B0               	movwf	??___aodiv
  4892  02E0  1FB0               	btfss	??___aodiv,7
  4893  02E1  2AE3               	goto	u2131
  4894  02E2  2AE4               	goto	u2130
  4895  02E3                     u2131:
  4896  02E3  2B06               	goto	l2605
  4897  02E4                     u2130:
  4898  02E4                     l2603:
  4899  02E4  0020               	movlb	0	; select bank0
  4900  02E5  09A0               	comf	___aodiv@divisor,f
  4901  02E6  09A1               	comf	___aodiv@divisor+1,f
  4902  02E7  09A2               	comf	___aodiv@divisor+2,f
  4903  02E8  09A3               	comf	___aodiv@divisor+3,f
  4904  02E9  09A4               	comf	___aodiv@divisor+4,f
  4905  02EA  09A5               	comf	___aodiv@divisor+5,f
  4906  02EB  09A6               	comf	___aodiv@divisor+6,f
  4907  02EC  09A7               	comf	___aodiv@divisor+7,f
  4908  02ED  0AA0               	incf	___aodiv@divisor,f
  4909  02EE  1D03               	skipz
  4910  02EF  2B03               	goto	u214lld
  4911  02F0  0AA1               	incf	___aodiv@divisor+1,f
  4912  02F1  1D03               	skipz
  4913  02F2  2B03               	goto	u214lld
  4914  02F3  0AA2               	incf	___aodiv@divisor+2,f
  4915  02F4  1D03               	skipz
  4916  02F5  2B03               	goto	u214lld
  4917  02F6  0AA3               	incf	___aodiv@divisor+3,f
  4918  02F7  1D03               	skipz
  4919  02F8  2B03               	goto	u214lld
  4920  02F9  0AA4               	incf	___aodiv@divisor+4,f
  4921  02FA  1D03               	skipz
  4922  02FB  2B03               	goto	u214lld
  4923  02FC  0AA5               	incf	___aodiv@divisor+5,f
  4924  02FD  1D03               	skipz
  4925  02FE  2B03               	goto	u214lld
  4926  02FF  0AA6               	incf	___aodiv@divisor+6,f
  4927  0300  1D03               	skipz
  4928  0301  2B03               	goto	u214lld
  4929  0302  0AA7               	incf	___aodiv@divisor+7,f
  4930  0303                     u214lld:
  4931  0303  0020               	movlb	0	; select bank0
  4932  0304  01B2               	clrf	___aodiv@sign
  4933  0305  0AB2               	incf	___aodiv@sign,f
  4934  0306                     l2605:
  4935  0306  3028               	movlw	low ___aodiv@dividend
  4936  0307  0086               	movwf	6
  4937  0308  3000               	movlw	high ___aodiv@dividend
  4938  0309  0087               	movwf	7
  4939  030A  3F47               	moviw [7]fsr1
  4940  030B  0020               	movlb	0	; select bank0
  4941  030C  00B0               	movwf	??___aodiv
  4942  030D  1FB0               	btfss	??___aodiv,7
  4943  030E  2B10               	goto	u2151
  4944  030F  2B11               	goto	u2150
  4945  0310                     u2151:
  4946  0310  2B35               	goto	l2611
  4947  0311                     u2150:
  4948  0311                     l2607:
  4949  0311  0020               	movlb	0	; select bank0
  4950  0312  09A8               	comf	___aodiv@dividend,f
  4951  0313  09A9               	comf	___aodiv@dividend+1,f
  4952  0314  09AA               	comf	___aodiv@dividend+2,f
  4953  0315  09AB               	comf	___aodiv@dividend+3,f
  4954  0316  09AC               	comf	___aodiv@dividend+4,f
  4955  0317  09AD               	comf	___aodiv@dividend+5,f
  4956  0318  09AE               	comf	___aodiv@dividend+6,f
  4957  0319  09AF               	comf	___aodiv@dividend+7,f
  4958  031A  0AA8               	incf	___aodiv@dividend,f
  4959  031B  1D03               	skipz
  4960  031C  2B30               	goto	u216lld
  4961  031D  0AA9               	incf	___aodiv@dividend+1,f
  4962  031E  1D03               	skipz
  4963  031F  2B30               	goto	u216lld
  4964  0320  0AAA               	incf	___aodiv@dividend+2,f
  4965  0321  1D03               	skipz
  4966  0322  2B30               	goto	u216lld
  4967  0323  0AAB               	incf	___aodiv@dividend+3,f
  4968  0324  1D03               	skipz
  4969  0325  2B30               	goto	u216lld
  4970  0326  0AAC               	incf	___aodiv@dividend+4,f
  4971  0327  1D03               	skipz
  4972  0328  2B30               	goto	u216lld
  4973  0329  0AAD               	incf	___aodiv@dividend+5,f
  4974  032A  1D03               	skipz
  4975  032B  2B30               	goto	u216lld
  4976  032C  0AAE               	incf	___aodiv@dividend+6,f
  4977  032D  1D03               	skipz
  4978  032E  2B30               	goto	u216lld
  4979  032F  0AAF               	incf	___aodiv@dividend+7,f
  4980  0330                     u216lld:
  4981  0330                     l2609:
  4982  0330  3001               	movlw	1
  4983  0331  0020               	movlb	0	; select bank0
  4984  0332  00B0               	movwf	??___aodiv
  4985  0333  0830               	movf	??___aodiv,w
  4986  0334  06B2               	xorwf	___aodiv@sign,f
  4987  0335                     l2611:
  4988  0335  3033               	movlw	low ___aodiv@quotient
  4989  0336  0086               	movwf	6
  4990  0337  3000               	movlw	high ___aodiv@quotient
  4991  0338  0087               	movwf	7
  4992  0339  3008               	movlw	8
  4993  033A  0020               	movlb	0	; select bank0
  4994  033B  00B0               	movwf	??___aodiv
  4995  033C  3000               	movlw	0
  4996  033D                     u2170:
  4997  033D  001E               	movwi fsr1++
  4998  033E  0BB0               	decfsz	??___aodiv,f
  4999  033F  2B3D               	goto	u2170
  5000  0340                     l2613:
  5001  0340  0820               	movf	___aodiv@divisor,w
  5002  0341  0421               	iorwf	___aodiv@divisor+1,w
  5003  0342  0422               	iorwf	___aodiv@divisor+2,w
  5004  0343  0423               	iorwf	___aodiv@divisor+3,w
  5005  0344  0424               	iorwf	___aodiv@divisor+4,w
  5006  0345  0425               	iorwf	___aodiv@divisor+5,w
  5007  0346  0426               	iorwf	___aodiv@divisor+6,w
  5008  0347  0427               	iorwf	___aodiv@divisor+7,w
  5009  0348  1903               	skipnz
  5010  0349  2B4B               	goto	u2181
  5011  034A  2B4C               	goto	u2180
  5012  034B                     u2181:
  5013  034B  2BA8               	goto	l2633
  5014  034C                     u2180:
  5015  034C                     l2615:
  5016  034C  01B1               	clrf	___aodiv@counter
  5017  034D  0AB1               	incf	___aodiv@counter,f
  5018  034E  2B5B               	goto	l2621
  5019  034F                     l2617:
  5020  034F  35A0               	lslf	___aodiv@divisor,f
  5021  0350  0DA1               	rlf	___aodiv@divisor+1,f
  5022  0351  0DA2               	rlf	___aodiv@divisor+2,f
  5023  0352  0DA3               	rlf	___aodiv@divisor+3,f
  5024  0353  0DA4               	rlf	___aodiv@divisor+4,f
  5025  0354  0DA5               	rlf	___aodiv@divisor+5,f
  5026  0355  0DA6               	rlf	___aodiv@divisor+6,f
  5027  0356  0DA7               	rlf	___aodiv@divisor+7,f
  5028  0357                     l2619:
  5029  0357  3001               	movlw	1
  5030  0358  00B0               	movwf	??___aodiv
  5031  0359  0830               	movf	??___aodiv,w
  5032  035A  07B1               	addwf	___aodiv@counter,f
  5033  035B                     l2621:
  5034  035B  1FA7               	btfss	___aodiv@divisor+7,7
  5035  035C  2B5E               	goto	u2191
  5036  035D  2B5F               	goto	u2190
  5037  035E                     u2191:
  5038  035E  2B4F               	goto	l2617
  5039  035F                     u2190:
  5040  035F                     l2623:
  5041  035F  35B3               	lslf	___aodiv@quotient,f
  5042  0360  0DB4               	rlf	___aodiv@quotient+1,f
  5043  0361  0DB5               	rlf	___aodiv@quotient+2,f
  5044  0362  0DB6               	rlf	___aodiv@quotient+3,f
  5045  0363  0DB7               	rlf	___aodiv@quotient+4,f
  5046  0364  0DB8               	rlf	___aodiv@quotient+5,f
  5047  0365  0DB9               	rlf	___aodiv@quotient+6,f
  5048  0366  0DBA               	rlf	___aodiv@quotient+7,f
  5049  0367                     l2625:
  5050  0367  0827               	movf	___aodiv@divisor+7,w
  5051  0368  022F               	subwf	___aodiv@dividend+7,w
  5052  0369  1D03               	skipz
  5053  036A  2B85               	goto	u2205
  5054  036B  0826               	movf	___aodiv@divisor+6,w
  5055  036C  022E               	subwf	___aodiv@dividend+6,w
  5056  036D  1D03               	skipz
  5057  036E  2B85               	goto	u2205
  5058  036F  0825               	movf	___aodiv@divisor+5,w
  5059  0370  022D               	subwf	___aodiv@dividend+5,w
  5060  0371  1D03               	skipz
  5061  0372  2B85               	goto	u2205
  5062  0373  0824               	movf	___aodiv@divisor+4,w
  5063  0374  022C               	subwf	___aodiv@dividend+4,w
  5064  0375  1D03               	skipz
  5065  0376  2B85               	goto	u2205
  5066  0377  0823               	movf	___aodiv@divisor+3,w
  5067  0378  022B               	subwf	___aodiv@dividend+3,w
  5068  0379  1D03               	skipz
  5069  037A  2B85               	goto	u2205
  5070  037B  0822               	movf	___aodiv@divisor+2,w
  5071  037C  022A               	subwf	___aodiv@dividend+2,w
  5072  037D  1D03               	skipz
  5073  037E  2B85               	goto	u2205
  5074  037F  0821               	movf	___aodiv@divisor+1,w
  5075  0380  0229               	subwf	___aodiv@dividend+1,w
  5076  0381  1D03               	skipz
  5077  0382  2B85               	goto	u2205
  5078  0383  0820               	movf	___aodiv@divisor,w
  5079  0384  0228               	subwf	___aodiv@dividend,w
  5080  0385                     u2205:
  5081  0385  1C03               	skipc
  5082  0386  2B88               	goto	u2201
  5083  0387  2B89               	goto	u2200
  5084  0388                     u2201:
  5085  0388  2B9A               	goto	l2631
  5086  0389                     u2200:
  5087  0389                     l2627:
  5088  0389  0820               	movf	___aodiv@divisor,w
  5089  038A  02A8               	subwf	___aodiv@dividend,f
  5090  038B  0821               	movf	___aodiv@divisor+1,w
  5091  038C  3BA9               	subwfb	___aodiv@dividend+1,f
  5092  038D  0822               	movf	___aodiv@divisor+2,w
  5093  038E  3BAA               	subwfb	___aodiv@dividend+2,f
  5094  038F  0823               	movf	___aodiv@divisor+3,w
  5095  0390  3BAB               	subwfb	___aodiv@dividend+3,f
  5096  0391  0824               	movf	___aodiv@divisor+4,w
  5097  0392  3BAC               	subwfb	___aodiv@dividend+4,f
  5098  0393  0825               	movf	___aodiv@divisor+5,w
  5099  0394  3BAD               	subwfb	___aodiv@dividend+5,f
  5100  0395  0826               	movf	___aodiv@divisor+6,w
  5101  0396  3BAE               	subwfb	___aodiv@dividend+6,f
  5102  0397  0827               	movf	___aodiv@divisor+7,w
  5103  0398  3BAF               	subwfb	___aodiv@dividend+7,f
  5104  0399                     l2629:
  5105  0399  1433               	bsf	___aodiv@quotient,0
  5106  039A                     l2631:
  5107  039A  36A7               	lsrf	___aodiv@divisor+7,f
  5108  039B  0CA6               	rrf	___aodiv@divisor+6,f
  5109  039C  0CA5               	rrf	___aodiv@divisor+5,f
  5110  039D  0CA4               	rrf	___aodiv@divisor+4,f
  5111  039E  0CA3               	rrf	___aodiv@divisor+3,f
  5112  039F  0CA2               	rrf	___aodiv@divisor+2,f
  5113  03A0  0CA1               	rrf	___aodiv@divisor+1,f
  5114  03A1  0CA0               	rrf	___aodiv@divisor,f
  5115  03A2  3001               	movlw	1
  5116  03A3  02B1               	subwf	___aodiv@counter,f
  5117  03A4  1D03               	btfss	3,2
  5118  03A5  2BA7               	goto	u2211
  5119  03A6  2BA8               	goto	u2210
  5120  03A7                     u2211:
  5121  03A7  2B5F               	goto	l2623
  5122  03A8                     u2210:
  5123  03A8                     l2633:
  5124  03A8  0832               	movf	___aodiv@sign,w
  5125  03A9  1903               	btfsc	3,2
  5126  03AA  2BAC               	goto	u2221
  5127  03AB  2BAD               	goto	u2220
  5128  03AC                     u2221:
  5129  03AC  2BCB               	goto	l692
  5130  03AD                     u2220:
  5131  03AD                     l2635:
  5132  03AD  09B3               	comf	___aodiv@quotient,f
  5133  03AE  09B4               	comf	___aodiv@quotient+1,f
  5134  03AF  09B5               	comf	___aodiv@quotient+2,f
  5135  03B0  09B6               	comf	___aodiv@quotient+3,f
  5136  03B1  09B7               	comf	___aodiv@quotient+4,f
  5137  03B2  09B8               	comf	___aodiv@quotient+5,f
  5138  03B3  09B9               	comf	___aodiv@quotient+6,f
  5139  03B4  09BA               	comf	___aodiv@quotient+7,f
  5140  03B5  0AB3               	incf	___aodiv@quotient,f
  5141  03B6  1D03               	skipz
  5142  03B7  2BCB               	goto	u223lld
  5143  03B8  0AB4               	incf	___aodiv@quotient+1,f
  5144  03B9  1D03               	skipz
  5145  03BA  2BCB               	goto	u223lld
  5146  03BB  0AB5               	incf	___aodiv@quotient+2,f
  5147  03BC  1D03               	skipz
  5148  03BD  2BCB               	goto	u223lld
  5149  03BE  0AB6               	incf	___aodiv@quotient+3,f
  5150  03BF  1D03               	skipz
  5151  03C0  2BCB               	goto	u223lld
  5152  03C1  0AB7               	incf	___aodiv@quotient+4,f
  5153  03C2  1D03               	skipz
  5154  03C3  2BCB               	goto	u223lld
  5155  03C4  0AB8               	incf	___aodiv@quotient+5,f
  5156  03C5  1D03               	skipz
  5157  03C6  2BCB               	goto	u223lld
  5158  03C7  0AB9               	incf	___aodiv@quotient+6,f
  5159  03C8  1D03               	skipz
  5160  03C9  2BCB               	goto	u223lld
  5161  03CA  0ABA               	incf	___aodiv@quotient+7,f
  5162  03CB                     u223lld:
  5163  03CB                     l692:
  5164  03CB  0020               	movlb	0	; select bank0
  5165  03CC  0833               	movf	___aodiv@quotient,w
  5166  03CD  00A0               	movwf	?___aodiv
  5167  03CE  0834               	movf	___aodiv@quotient+1,w
  5168  03CF  00A1               	movwf	?___aodiv+1
  5169  03D0  0835               	movf	___aodiv@quotient+2,w
  5170  03D1  00A2               	movwf	?___aodiv+2
  5171  03D2  0836               	movf	___aodiv@quotient+3,w
  5172  03D3  00A3               	movwf	?___aodiv+3
  5173  03D4  0837               	movf	___aodiv@quotient+4,w
  5174  03D5  00A4               	movwf	?___aodiv+4
  5175  03D6  0838               	movf	___aodiv@quotient+5,w
  5176  03D7  00A5               	movwf	?___aodiv+5
  5177  03D8  0839               	movf	___aodiv@quotient+6,w
  5178  03D9  00A6               	movwf	?___aodiv+6
  5179  03DA  083A               	movf	___aodiv@quotient+7,w
  5180  03DB  00A7               	movwf	?___aodiv+7
  5181  03DC                     l693:
  5182  03DC  0008               	return
  5183  03DD                     __end_of___aodiv:
  5184                           
  5185                           	psect	text11
  5186  0616                     __ptext11:	
  5187 ;; *************** function _ctoa *****************
  5188 ;; Defined at:
  5189 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  fp              1    wreg     PTR struct _IO_FILE
  5192 ;;		 -> NULL(0), 
  5193 ;;  c               1   12[BANK0 ] unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  5196 ;;		 -> NULL(0), 
  5197 ;;  w               2   19[BANK0 ] int 
  5198 ;;  l               2   17[BANK0 ] int 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   12[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5208 ;;      Params:         0       2       0       0       0       0
  5209 ;;      Locals:         0       5       0       0       0       0
  5210 ;;      Temps:          0       3       0       0       0       0
  5211 ;;      Totals:         0      10       0       0       0       0
  5212 ;;Total ram usage:       10 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 7
  5215 ;; This function calls:
  5216 ;;		_fputc
  5217 ;; This function is called by:
  5218 ;;		_vfpfcnvrt
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _ctoa
  5224  0616                     _ctoa:
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _ctoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5228                           ;ctoa@fp stored from wreg
  5229  0616  0020               	movlb	0	; select bank0
  5230  0617  00B5               	movwf	ctoa@fp
  5231  0618                     l2693:
  5232                           
  5233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  5234  0618  0021               	movlb	1	; select bank1
  5235  0619  083A               	movf	_width^(0+128),w
  5236  061A  043B               	iorwf	(_width+1)^(0+128),w
  5237  061B  1D03               	btfss	3,2
  5238  061C  2E1E               	goto	u2391
  5239  061D  2E1F               	goto	u2390
  5240  061E                     u2391:
  5241  061E  2E27               	goto	l2697
  5242  061F                     u2390:
  5243  061F                     l2695:
  5244  061F  083B               	movf	(_width+1)^(0+128),w
  5245  0620  0020               	movlb	0	; select bank0
  5246  0621  00B4               	movwf	ctoa@w+1
  5247  0622  0021               	movlb	1	; select bank1
  5248  0623  083A               	movf	_width^(0+128),w
  5249  0624  0020               	movlb	0	; select bank0
  5250  0625  00B3               	movwf	ctoa@w
  5251  0626  2E30               	goto	l2699
  5252  0627                     l2697:
  5253  0627  083A               	movf	_width^(0+128),w
  5254  0628  3EFF               	addlw	255
  5255  0629  0020               	movlb	0	; select bank0
  5256  062A  00B3               	movwf	ctoa@w
  5257  062B  30FF               	movlw	255
  5258  062C  0021               	movlb	1	; select bank1
  5259  062D  3D3B               	addwfc	(_width+1)^(0+128),w
  5260  062E  0020               	movlb	0	; select bank0
  5261  062F  00B4               	movwf	ctoa@w+1
  5262  0630                     l2699:
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  5265  0630  1C70               	btfss	_flags,0
  5266  0631  2E33               	goto	u2401
  5267  0632  2E34               	goto	u2400
  5268  0633                     u2401:
  5269  0633  2E42               	goto	l2703
  5270  0634                     u2400:
  5271  0634                     l2701:
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  5274  0634  082C               	movf	ctoa@c,w
  5275  0635  00AE               	movwf	??_ctoa
  5276  0636  01AF               	clrf	??_ctoa+1
  5277  0637  082E               	movf	??_ctoa,w
  5278  0638  00A4               	movwf	fputc@c
  5279  0639  082F               	movf	??_ctoa+1,w
  5280  063A  00A5               	movwf	fputc@c+1
  5281  063B  0835               	movf	ctoa@fp,w
  5282  063C  00B0               	movwf	??_ctoa+2
  5283  063D  0830               	movf	??_ctoa+2,w
  5284  063E  00A6               	movwf	fputc@fp
  5285  063F  3187  2725  3186   	fcall	_fputc
  5286  0642                     l2703:
  5287                           
  5288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  5289  0642  0020               	movlb	0	; select bank0
  5290  0643  1BB4               	btfsc	ctoa@w+1,7
  5291  0644  2E46               	goto	u2411
  5292  0645  2E47               	goto	u2410
  5293  0646                     u2411:
  5294  0646  2E48               	goto	l2707
  5295  0647                     u2410:
  5296  0647  2E4A               	goto	l1108
  5297  0648                     l2707:
  5298  0648  01B3               	clrf	ctoa@w
  5299  0649  01B4               	clrf	ctoa@w+1
  5300  064A                     l1108:
  5301                           
  5302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  5303  064A  01B1               	clrf	ctoa@l
  5304  064B  01B2               	clrf	ctoa@l+1
  5305                           
  5306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5307  064C  2E5E               	goto	l2713
  5308  064D                     l2709:
  5309                           
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  5311  064D  3020               	movlw	32
  5312  064E  0020               	movlb	0	; select bank0
  5313  064F  00A4               	movwf	fputc@c
  5314  0650  3000               	movlw	0
  5315  0651  00A5               	movwf	fputc@c+1
  5316  0652  0835               	movf	ctoa@fp,w
  5317  0653  00AE               	movwf	??_ctoa
  5318  0654  082E               	movf	??_ctoa,w
  5319  0655  00A6               	movwf	fputc@fp
  5320  0656  3187  2725  3186   	fcall	_fputc
  5321  0659                     l2711:
  5322                           
  5323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  5324  0659  3001               	movlw	1
  5325  065A  0020               	movlb	0	; select bank0
  5326  065B  07B1               	addwf	ctoa@l,f
  5327  065C  3000               	movlw	0
  5328  065D  3DB2               	addwfc	ctoa@l+1,f
  5329  065E                     l2713:
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5332  065E  0832               	movf	ctoa@l+1,w
  5333  065F  3A80               	xorlw	128
  5334  0660  00AE               	movwf	??_ctoa
  5335  0661  0834               	movf	ctoa@w+1,w
  5336  0662  3A80               	xorlw	128
  5337  0663  022E               	subwf	??_ctoa,w
  5338  0664  1D03               	skipz
  5339  0665  2E68               	goto	u2425
  5340  0666  0833               	movf	ctoa@w,w
  5341  0667  0231               	subwf	ctoa@l,w
  5342  0668                     u2425:
  5343  0668  1C03               	skipc
  5344  0669  2E6B               	goto	u2421
  5345  066A  2E6C               	goto	u2420
  5346  066B                     u2421:
  5347  066B  2E4D               	goto	l2709
  5348  066C                     u2420:
  5349  066C                     l1111:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  5352  066C  1870               	btfsc	_flags,0
  5353  066D  2E6F               	goto	u2431
  5354  066E  2E70               	goto	u2430
  5355  066F                     u2431:
  5356  066F  2E7F               	goto	l2717
  5357  0670                     u2430:
  5358  0670                     l2715:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  5361  0670  0020               	movlb	0	; select bank0
  5362  0671  082C               	movf	ctoa@c,w
  5363  0672  00AE               	movwf	??_ctoa
  5364  0673  01AF               	clrf	??_ctoa+1
  5365  0674  082E               	movf	??_ctoa,w
  5366  0675  00A4               	movwf	fputc@c
  5367  0676  082F               	movf	??_ctoa+1,w
  5368  0677  00A5               	movwf	fputc@c+1
  5369  0678  0835               	movf	ctoa@fp,w
  5370  0679  00B0               	movwf	??_ctoa+2
  5371  067A  0830               	movf	??_ctoa+2,w
  5372  067B  00A6               	movwf	fputc@fp
  5373  067C  3187  2725  3186   	fcall	_fputc
  5374  067F                     l2717:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  5377  067F  0020               	movlb	0	; select bank0
  5378  0680  0831               	movf	ctoa@l,w
  5379  0681  3E01               	addlw	1
  5380  0682  00AC               	movwf	?_ctoa
  5381  0683  3000               	movlw	0
  5382  0684  3D32               	addwfc	ctoa@l+1,w
  5383  0685  00AD               	movwf	?_ctoa+1
  5384  0686                     l1113:
  5385  0686  0008               	return
  5386  0687                     __end_of_ctoa:
  5387                           
  5388                           	psect	text12
  5389  0725                     __ptext12:	
  5390 ;; *************** function _fputc *****************
  5391 ;; Defined at:
  5392 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  c               2    4[BANK0 ] int 
  5395 ;;  fp              1    6[BANK0 ] PTR struct _IO_FILE
  5396 ;;		 -> NULL(0), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  2    4[BANK0 ] int 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5408 ;;      Params:         0       3       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0
  5410 ;;      Temps:          0       5       0       0       0       0
  5411 ;;      Totals:         0       8       0       0       0       0
  5412 ;;Total ram usage:        8 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 6
  5415 ;; This function calls:
  5416 ;;		_putch
  5417 ;; This function is called by:
  5418 ;;		_pad
  5419 ;;		_ctoa
  5420 ;;		_vfpfcnvrt
  5421 ;;		_fputs
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _fputc
  5427  0725                     _fputc:
  5428  0725                     l2567:	
  5429                           ;incstack = 0
  5430                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5431                           
  5432  0725  0020               	movlb	0	; select bank0
  5433  0726  0826               	movf	fputc@fp,w
  5434  0727  1903               	btfsc	3,2
  5435  0728  2F2A               	goto	u2071
  5436  0729  2F2B               	goto	u2070
  5437  072A                     u2071:
  5438  072A  2F30               	goto	l2571
  5439  072B                     u2070:
  5440  072B                     l2569:
  5441  072B  0826               	movf	fputc@fp,w
  5442  072C  1D03               	btfss	3,2
  5443  072D  2F2F               	goto	u2081
  5444  072E  2F30               	goto	u2080
  5445  072F                     u2081:
  5446  072F  2F35               	goto	l2573
  5447  0730                     u2080:
  5448  0730                     l2571:
  5449  0730  0824               	movf	fputc@c,w
  5450  0731  318E  2644  3187   	fcall	_putch
  5451  0734  2F65               	goto	l1173
  5452  0735                     l2573:
  5453  0735  0826               	movf	fputc@fp,w
  5454  0736  3E03               	addlw	3
  5455  0737  0086               	movwf	6
  5456  0738  0187               	clrf	7
  5457  0739  0016               	moviw fsr1++
  5458  073A  0401               	iorwf	1,w
  5459  073B  1903               	btfsc	3,2
  5460  073C  2F3E               	goto	u2091
  5461  073D  2F3F               	goto	u2090
  5462  073E                     u2091:
  5463  073E  2F5C               	goto	l2577
  5464  073F                     u2090:
  5465  073F                     l2575:
  5466  073F  0826               	movf	fputc@fp,w
  5467  0740  3E03               	addlw	3
  5468  0741  0086               	movwf	6
  5469  0742  0187               	clrf	7
  5470  0743  3F40               	moviw [0]fsr1
  5471  0744  00A7               	movwf	??_fputc
  5472  0745  3F41               	moviw [1]fsr1
  5473  0746  00A8               	movwf	??_fputc+1
  5474  0747  0A26               	incf	fputc@fp,w
  5475  0748  0086               	movwf	6
  5476  0749  0187               	clrf	7
  5477  074A  3F40               	moviw [0]fsr1
  5478  074B  00A9               	movwf	??_fputc+2
  5479  074C  3F41               	moviw [1]fsr1
  5480  074D  00AA               	movwf	??_fputc+3
  5481  074E  082A               	movf	??_fputc+3,w
  5482  074F  3A80               	xorlw	128
  5483  0750  00AB               	movwf	??_fputc+4
  5484  0751  0828               	movf	??_fputc+1,w
  5485  0752  3A80               	xorlw	128
  5486  0753  022B               	subwf	??_fputc+4,w
  5487  0754  1D03               	skipz
  5488  0755  2F58               	goto	u2105
  5489  0756  0827               	movf	??_fputc,w
  5490  0757  0229               	subwf	??_fputc+2,w
  5491  0758                     u2105:
  5492  0758  1803               	skipnc
  5493  0759  2F5B               	goto	u2101
  5494  075A  2F5C               	goto	u2100
  5495  075B                     u2101:
  5496  075B  2F65               	goto	l1173
  5497  075C                     u2100:
  5498  075C                     l2577:
  5499  075C  0020               	movlb	0	; select bank0
  5500  075D  0A26               	incf	fputc@fp,w
  5501  075E  0086               	movwf	6
  5502  075F  0187               	clrf	7
  5503  0760  3001               	movlw	1
  5504  0761  0781               	addwf	1,f
  5505  0762  3141               	addfsr 1,1
  5506  0763  1803               	skipnc
  5507  0764  0A81               	incf	1,f
  5508  0765                     l1173:
  5509  0765  0008               	return
  5510  0766                     __end_of_fputc:
  5511                           
  5512                           	psect	text13
  5513  0E44                     __ptext13:	
  5514 ;; *************** function _putch *****************
  5515 ;; Defined at:
  5516 ;;		line 201 in file "mcc_generated_files/eusart.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  txData          1    wreg     unsigned char 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  txData          1    3[BANK0 ] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5530 ;;      Params:         0       0       0       0       0       0
  5531 ;;      Locals:         0       1       0       0       0       0
  5532 ;;      Temps:          0       1       0       0       0       0
  5533 ;;      Totals:         0       2       0       0       0       0
  5534 ;;Total ram usage:        2 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 5
  5537 ;; This function calls:
  5538 ;;		_EUSART_Write
  5539 ;; This function is called by:
  5540 ;;		_fputc
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           
  5545                           ;psect for function _putch
  5546  0E44                     _putch:
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5550                           ;putch@txData stored from wreg
  5551  0E44  0020               	movlb	0	; select bank0
  5552  0E45  00A3               	movwf	putch@txData
  5553  0E46                     l2565:
  5554                           
  5555                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  5556  0E46  0823               	movf	putch@txData,w
  5557  0E47  00A2               	movwf	??_putch
  5558  0E48  0822               	movf	??_putch,w
  5559  0E49  00A0               	movwf	EUSART_Write@txData
  5560  0E4A  318F  2775  318E   	fcall	_EUSART_Write
  5561  0E4D                     l190:
  5562  0E4D  0008               	return
  5563  0E4E                     __end_of_putch:
  5564                           
  5565                           	psect	text14
  5566  0F75                     __ptext14:	
  5567 ;; *************** function _EUSART_Write *****************
  5568 ;; Defined at:
  5569 ;;		line 173 in file "mcc_generated_files/eusart.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  txData          1    0[BANK0 ] unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5583 ;;      Params:         0       1       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0
  5585 ;;      Temps:          0       1       0       0       0       0
  5586 ;;      Totals:         0       2       0       0       0       0
  5587 ;;Total ram usage:        2 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_putch
  5594 ;;		_UART_example_WRITE_STRING
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _EUSART_Write
  5600  0F75                     _EUSART_Write:
  5601  0F75                     l2547:	
  5602                           ;incstack = 0
  5603                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5604                           
  5605  0F75                     l2549:	
  5606                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  5607                           
  5608                           
  5609                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  5610  0F75  0021               	movlb	1	; select bank1
  5611  0F76  0860               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  5612  0F77  1903               	btfsc	3,2
  5613  0F78  2F7A               	goto	u2041
  5614  0F79  2F7B               	goto	u2040
  5615  0F7A                     u2041:
  5616  0F7A  2F75               	goto	l2549
  5617  0F7B                     u2040:
  5618  0F7B                     l180:
  5619                           
  5620                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  5621  0F7B  1A11               	btfsc	17,4	;volatile
  5622  0F7C  2F7E               	goto	u2051
  5623  0F7D  2F7F               	goto	u2050
  5624  0F7E                     u2051:
  5625  0F7E  2F84               	goto	l181
  5626  0F7F                     u2050:
  5627  0F7F                     l2551:
  5628                           
  5629                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  5630  0F7F  0020               	movlb	0	; select bank0
  5631  0F80  0820               	movf	EUSART_Write@txData,w
  5632  0F81  0023               	movlb	3	; select bank3
  5633  0F82  009A               	movwf	26	;volatile
  5634                           
  5635                           ;mcc_generated_files/eusart.c: 182:     }
  5636  0F83  2F9C               	goto	l2563
  5637  0F84                     l181:	
  5638                           ;mcc_generated_files/eusart.c: 183:     else
  5639                           
  5640                           
  5641                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  5642  0F84  1211               	bcf	17,4	;volatile
  5643  0F85                     l2553:
  5644                           
  5645                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5646  0F85  0020               	movlb	0	; select bank0
  5647  0F86  0820               	movf	EUSART_Write@txData,w
  5648  0F87  00A1               	movwf	??_EUSART_Write
  5649  0F88  0875               	movf	_eusartTxHead,w
  5650  0F89  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5651  0F8A  0086               	movwf	6
  5652  0F8B  0187               	clrf	7
  5653  0F8C  0821               	movf	??_EUSART_Write,w
  5654  0F8D  0081               	movwf	1
  5655  0F8E                     l2555:
  5656  0F8E  3001               	movlw	1
  5657  0F8F  00A1               	movwf	??_EUSART_Write
  5658  0F90  0821               	movf	??_EUSART_Write,w
  5659  0F91  07F5               	addwf	_eusartTxHead,f	;volatile
  5660  0F92                     l2557:
  5661                           
  5662                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5663  0F92  3008               	movlw	8
  5664  0F93  0275               	subwf	_eusartTxHead,w	;volatile
  5665  0F94  1C03               	skipc
  5666  0F95  2F97               	goto	u2061
  5667  0F96  2F98               	goto	u2060
  5668  0F97                     u2061:
  5669  0F97  2F99               	goto	l2561
  5670  0F98                     u2060:
  5671  0F98                     l2559:
  5672                           
  5673                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5674  0F98  01F5               	clrf	_eusartTxHead	;volatile
  5675  0F99                     l2561:
  5676                           
  5677                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5678  0F99  3001               	movlw	1
  5679  0F9A  0021               	movlb	1	; select bank1
  5680  0F9B  02E0               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  5681  0F9C                     l2563:
  5682                           
  5683                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  5684  0F9C  0021               	movlb	1	; select bank1
  5685  0F9D  1611               	bsf	17,4	;volatile
  5686  0F9E                     l184:
  5687  0F9E  0008               	return
  5688  0F9F                     __end_of_EUSART_Write:
  5689                           
  5690                           	psect	text15
  5691  04CA                     __ptext15:	
  5692 ;; *************** function _memset *****************
  5693 ;; Defined at:
  5694 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  dest            1    wreg     PTR void 
  5697 ;;		 -> main@strBuf(10), rx(16), 
  5698 ;;  c               2    0[BANK0 ] int 
  5699 ;;  n               2    2[BANK0 ] unsigned int 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  dest            1    8[BANK0 ] PTR void 
  5702 ;;		 -> main@strBuf(10), rx(16), 
  5703 ;;  k               2    6[BANK0 ] unsigned int 
  5704 ;;  s               1    9[BANK0 ] PTR unsigned char 
  5705 ;;		 -> main@strBuf(10), rx(16), 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      PTR void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5715 ;;      Params:         0       4       0       0       0       0
  5716 ;;      Locals:         0       4       0       0       0       0
  5717 ;;      Temps:          0       2       0       0       0       0
  5718 ;;      Totals:         0      10       0       0       0       0
  5719 ;;Total ram usage:       10 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; Hardware stack levels required when called: 4
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_main
  5726 ;;		_UART_example_READ
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           
  5731                           ;psect for function _memset
  5732  04CA                     _memset:
  5733                           
  5734                           ;incstack = 0
  5735                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5736                           ;memset@dest stored from wreg
  5737  04CA  0020               	movlb	0	; select bank0
  5738  04CB  00A8               	movwf	memset@dest
  5739  04CC                     l3145:
  5740  04CC  0828               	movf	memset@dest,w
  5741  04CD  00A4               	movwf	??_memset
  5742  04CE  0824               	movf	??_memset,w
  5743  04CF  00A9               	movwf	memset@s
  5744  04D0                     l3147:
  5745  04D0  0822               	movf	memset@n,w
  5746  04D1  0423               	iorwf	memset@n+1,w
  5747  04D2  1D03               	btfss	3,2
  5748  04D3  2CD5               	goto	u2891
  5749  04D4  2CD6               	goto	u2890
  5750  04D5                     u2891:
  5751  04D5  2CD7               	goto	l3151
  5752  04D6                     u2890:
  5753  04D6  2D77               	goto	l1052
  5754  04D7                     l3151:
  5755  04D7  0820               	movf	memset@c,w
  5756  04D8  00A4               	movwf	??_memset
  5757  04D9  0829               	movf	memset@s,w
  5758  04DA  0086               	movwf	6
  5759  04DB  3001               	movlw	1	; select bank2/3
  5760  04DC  0087               	movwf	7
  5761  04DD  0824               	movf	??_memset,w
  5762  04DE  0081               	movwf	1
  5763  04DF                     l3153:
  5764  04DF  0820               	movf	memset@c,w
  5765  04E0  00A4               	movwf	??_memset
  5766  04E1  0822               	movf	memset@n,w
  5767  04E2  0729               	addwf	memset@s,w
  5768  04E3  00A5               	movwf	??_memset+1
  5769  04E4  0825               	movf	??_memset+1,w
  5770  04E5  3EFF               	addlw	255
  5771  04E6  0086               	movwf	6
  5772  04E7  3001               	movlw	1	; select bank2/3
  5773  04E8  0087               	movwf	7
  5774  04E9  0824               	movf	??_memset,w
  5775  04EA  0081               	movwf	1
  5776  04EB                     l3155:
  5777  04EB  3000               	movlw	0
  5778  04EC  0223               	subwf	memset@n+1,w
  5779  04ED  3003               	movlw	3
  5780  04EE  1903               	skipnz
  5781  04EF  0222               	subwf	memset@n,w
  5782  04F0  1803               	skipnc
  5783  04F1  2CF3               	goto	u2901
  5784  04F2  2CF4               	goto	u2900
  5785  04F3                     u2901:
  5786  04F3  2CF5               	goto	l3159
  5787  04F4                     u2900:
  5788  04F4  2D77               	goto	l1052
  5789  04F5                     l3159:
  5790  04F5  0820               	movf	memset@c,w
  5791  04F6  00A4               	movwf	??_memset
  5792  04F7  0A29               	incf	memset@s,w
  5793  04F8  0086               	movwf	6
  5794  04F9  3001               	movlw	1	; select bank2/3
  5795  04FA  0087               	movwf	7
  5796  04FB  0824               	movf	??_memset,w
  5797  04FC  0081               	movwf	1
  5798  04FD                     l3161:
  5799  04FD  0820               	movf	memset@c,w
  5800  04FE  00A4               	movwf	??_memset
  5801  04FF  0829               	movf	memset@s,w
  5802  0500  3E02               	addlw	2
  5803  0501  0086               	movwf	6
  5804  0502  3001               	movlw	1	; select bank2/3
  5805  0503  0087               	movwf	7
  5806  0504  0824               	movf	??_memset,w
  5807  0505  0081               	movwf	1
  5808  0506                     l3163:
  5809  0506  0820               	movf	memset@c,w
  5810  0507  00A4               	movwf	??_memset
  5811  0508  0822               	movf	memset@n,w
  5812  0509  0729               	addwf	memset@s,w
  5813  050A  00A5               	movwf	??_memset+1
  5814  050B  0825               	movf	??_memset+1,w
  5815  050C  3EFE               	addlw	254
  5816  050D  0086               	movwf	6
  5817  050E  3001               	movlw	1	; select bank2/3
  5818  050F  0087               	movwf	7
  5819  0510  0824               	movf	??_memset,w
  5820  0511  0081               	movwf	1
  5821  0512                     l3165:
  5822  0512  0820               	movf	memset@c,w
  5823  0513  00A4               	movwf	??_memset
  5824  0514  0822               	movf	memset@n,w
  5825  0515  0729               	addwf	memset@s,w
  5826  0516  00A5               	movwf	??_memset+1
  5827  0517  0825               	movf	??_memset+1,w
  5828  0518  3EFD               	addlw	253
  5829  0519  0086               	movwf	6
  5830  051A  3001               	movlw	1	; select bank2/3
  5831  051B  0087               	movwf	7
  5832  051C  0824               	movf	??_memset,w
  5833  051D  0081               	movwf	1
  5834  051E                     l3167:
  5835  051E  3000               	movlw	0
  5836  051F  0223               	subwf	memset@n+1,w
  5837  0520  3007               	movlw	7
  5838  0521  1903               	skipnz
  5839  0522  0222               	subwf	memset@n,w
  5840  0523  1803               	skipnc
  5841  0524  2D26               	goto	u2911
  5842  0525  2D27               	goto	u2910
  5843  0526                     u2911:
  5844  0526  2D28               	goto	l3171
  5845  0527                     u2910:
  5846  0527  2D77               	goto	l1052
  5847  0528                     l3171:
  5848  0528  0820               	movf	memset@c,w
  5849  0529  00A4               	movwf	??_memset
  5850  052A  0829               	movf	memset@s,w
  5851  052B  3E03               	addlw	3
  5852  052C  0086               	movwf	6
  5853  052D  3001               	movlw	1	; select bank2/3
  5854  052E  0087               	movwf	7
  5855  052F  0824               	movf	??_memset,w
  5856  0530  0081               	movwf	1
  5857  0531  0820               	movf	memset@c,w
  5858  0532  00A4               	movwf	??_memset
  5859  0533  0822               	movf	memset@n,w
  5860  0534  0729               	addwf	memset@s,w
  5861  0535  00A5               	movwf	??_memset+1
  5862  0536  0825               	movf	??_memset+1,w
  5863  0537  3EFC               	addlw	252
  5864  0538  0086               	movwf	6
  5865  0539  3001               	movlw	1	; select bank2/3
  5866  053A  0087               	movwf	7
  5867  053B  0824               	movf	??_memset,w
  5868  053C  0081               	movwf	1
  5869  053D                     l3173:
  5870  053D  3000               	movlw	0
  5871  053E  0223               	subwf	memset@n+1,w
  5872  053F  3009               	movlw	9
  5873  0540  1903               	skipnz
  5874  0541  0222               	subwf	memset@n,w
  5875  0542  1803               	skipnc
  5876  0543  2D45               	goto	u2921
  5877  0544  2D46               	goto	u2920
  5878  0545                     u2921:
  5879  0545  2D47               	goto	l3177
  5880  0546                     u2920:
  5881  0546  2D77               	goto	l1052
  5882  0547                     l3177:
  5883  0547  0929               	comf	memset@s,w
  5884  0548  00A4               	movwf	??_memset
  5885  0549  092A               	comf	memset@s+1,w
  5886  054A  00A5               	movwf	??_memset+1
  5887  054B  0AA4               	incf	??_memset,f
  5888  054C  1903               	skipnz
  5889  054D  0AA5               	incf	??_memset+1,f
  5890  054E  3003               	movlw	3
  5891  054F  0524               	andwf	??_memset,w
  5892  0550  00A6               	movwf	memset@k
  5893  0551  3000               	movlw	0
  5894  0552  0525               	andwf	??_memset+1,w
  5895  0553  00A7               	movwf	memset@k+1
  5896  0554  0826               	movf	memset@k,w
  5897  0555  00A4               	movwf	??_memset
  5898  0556  0824               	movf	??_memset,w
  5899  0557  07A9               	addwf	memset@s,f
  5900  0558                     l3179:
  5901  0558  0826               	movf	memset@k,w
  5902  0559  02A2               	subwf	memset@n,f
  5903  055A  0827               	movf	memset@k+1,w
  5904  055B  3BA3               	subwfb	memset@n+1,f
  5905  055C                     l3181:
  5906  055C  30FC               	movlw	252
  5907  055D  05A2               	andwf	memset@n,f
  5908  055E  30FF               	movlw	255
  5909  055F  05A3               	andwf	memset@n+1,f
  5910  0560  2D71               	goto	l3189
  5911  0561                     l3183:
  5912  0561  0820               	movf	memset@c,w
  5913  0562  00A4               	movwf	??_memset
  5914  0563  0829               	movf	memset@s,w
  5915  0564  0086               	movwf	6
  5916  0565  3001               	movlw	1	; select bank2/3
  5917  0566  0087               	movwf	7
  5918  0567  0824               	movf	??_memset,w
  5919  0568  0081               	movwf	1
  5920  0569                     l3185:
  5921  0569  3001               	movlw	1
  5922  056A  02A2               	subwf	memset@n,f
  5923  056B  3000               	movlw	0
  5924  056C  3BA3               	subwfb	memset@n+1,f
  5925  056D                     l3187:
  5926  056D  3001               	movlw	1
  5927  056E  00A4               	movwf	??_memset
  5928  056F  0824               	movf	??_memset,w
  5929  0570  07A9               	addwf	memset@s,f
  5930  0571                     l3189:
  5931  0571  0822               	movf	memset@n,w
  5932  0572  0423               	iorwf	memset@n+1,w
  5933  0573  1D03               	btfss	3,2
  5934  0574  2D76               	goto	u2931
  5935  0575  2D77               	goto	u2930
  5936  0576                     u2931:
  5937  0576  2D61               	goto	l3183
  5938  0577                     u2930:
  5939  0577                     l1052:
  5940  0577  0008               	return
  5941  0578                     __end_of_memset:
  5942                           
  5943                           	psect	text16
  5944  0E95                     __ptext16:	
  5945 ;; *************** function _SYSTEM_Initialize *****************
  5946 ;; Defined at:
  5947 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5961 ;;      Params:         0       0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used: 1
  5967 ;; Hardware stack levels required when called: 6
  5968 ;; This function calls:
  5969 ;;		_EPWM1_Initialize
  5970 ;;		_EUSART_Initialize
  5971 ;;		_OSCILLATOR_Initialize
  5972 ;;		_PIN_MANAGER_Initialize
  5973 ;;		_TMR2_Initialize
  5974 ;;		_TMR4_Initialize
  5975 ;;		_WDT_Initialize
  5976 ;; This function is called by:
  5977 ;;		_main
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           
  5982                           ;psect for function _SYSTEM_Initialize
  5983  0E95                     _SYSTEM_Initialize:
  5984  0E95                     l3063:	
  5985                           ;incstack = 0
  5986                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5987                           
  5988                           
  5989                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5990  0E95  318E  267F  318E   	fcall	_PIN_MANAGER_Initialize
  5991                           
  5992                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5993  0E98  318D  25FF  318E   	fcall	_OSCILLATOR_Initialize
  5994                           
  5995                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5996  0E9B  318D  25F5  318E   	fcall	_WDT_Initialize
  5997                           
  5998                           ;mcc_generated_files/mcc.c: 56:     EPWM1_Initialize();
  5999  0E9E  318E  264E  318E   	fcall	_EPWM1_Initialize
  6000                           
  6001                           ;mcc_generated_files/mcc.c: 57:     TMR4_Initialize();
  6002  0EA1  318E  266B  318E   	fcall	_TMR4_Initialize
  6003                           
  6004                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  6005  0EA4  318E  2606  318E   	fcall	_TMR2_Initialize
  6006                           
  6007                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  6008  0EA7  3186  26E0  318E   	fcall	_EUSART_Initialize
  6009  0EAA                     l256:
  6010  0EAA  0008               	return
  6011  0EAB                     __end_of_SYSTEM_Initialize:
  6012                           
  6013                           	psect	text17
  6014  0DF5                     __ptext17:	
  6015 ;; *************** function _WDT_Initialize *****************
  6016 ;; Defined at:
  6017 ;;		line 72 in file "mcc_generated_files/mcc.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6031 ;;      Params:         0       0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0
  6034 ;;      Totals:         0       0       0       0       0       0
  6035 ;;Total ram usage:        0 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; Hardware stack levels required when called: 4
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_SYSTEM_Initialize
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _WDT_Initialize
  6047  0DF5                     _WDT_Initialize:
  6048  0DF5                     l2907:	
  6049                           ;incstack = 0
  6050                           ; Regs used in _WDT_Initialize: [wreg]
  6051                           
  6052                           
  6053                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  6054  0DF5  3016               	movlw	22
  6055  0DF6  0021               	movlb	1	; select bank1
  6056  0DF7  0097               	movwf	23	;volatile
  6057  0DF8                     l262:
  6058  0DF8  0008               	return
  6059  0DF9                     __end_of_WDT_Initialize:
  6060                           
  6061                           	psect	text18
  6062  0E6B                     __ptext18:	
  6063 ;; *************** function _TMR4_Initialize *****************
  6064 ;; Defined at:
  6065 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, pclath, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6079 ;;      Params:         0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 5
  6086 ;; This function calls:
  6087 ;;		_TMR4_SetInterruptHandler
  6088 ;; This function is called by:
  6089 ;;		_SYSTEM_Initialize
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _TMR4_Initialize
  6095  0E6B                     _TMR4_Initialize:
  6096  0E6B                     l2909:	
  6097                           ;incstack = 0
  6098                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6099                           
  6100                           
  6101                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x7C;
  6102  0E6B  307C               	movlw	124
  6103  0E6C  0028               	movlb	8	; select bank8
  6104  0E6D  0096               	movwf	22	;volatile
  6105  0E6E                     l2911:
  6106                           
  6107                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  6108  0E6E  0195               	clrf	21	;volatile
  6109  0E6F                     l2913:
  6110                           
  6111                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  6112  0E6F  0020               	movlb	0	; select bank0
  6113  0E70  1093               	bcf	19,1	;volatile
  6114  0E71                     l2915:
  6115                           
  6116                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  6117  0E71  0021               	movlb	1	; select bank1
  6118  0E72  1493               	bsf	19,1	;volatile
  6119  0E73                     l2917:
  6120                           
  6121                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6122  0E73  30EC               	movlw	low _TMR4_DefaultInterruptHandler
  6123  0E74  0020               	movlb	0	; select bank0
  6124  0E75  00A0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  6125  0E76  300D               	movlw	high _TMR4_DefaultInterruptHandler
  6126  0E77  00A1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  6127  0E78  318E  263B  318E   	fcall	_TMR4_SetInterruptHandler
  6128  0E7B                     l2919:
  6129                           
  6130                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x1D;
  6131  0E7B  301D               	movlw	29
  6132  0E7C  0028               	movlb	8	; select bank8
  6133  0E7D  0097               	movwf	23	;volatile
  6134  0E7E                     l372:
  6135  0E7E  0008               	return
  6136  0E7F                     __end_of_TMR4_Initialize:
  6137                           
  6138                           	psect	text19
  6139  0E3B                     __ptext19:	
  6140 ;; *************** function _TMR4_SetInterruptHandler *****************
  6141 ;; Defined at:
  6142 ;;		line 132 in file "mcc_generated_files/tmr4.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6145 ;;		 -> TMR4_CustumCallBack(1), TMR4_DefaultInterruptHandler(1), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6157 ;;      Params:         0       2       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0
  6160 ;;      Totals:         0       2       0       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 4
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_TMR4_Initialize
  6168 ;;		_main
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function _TMR4_SetInterruptHandler
  6174  0E3B                     _TMR4_SetInterruptHandler:
  6175  0E3B                     l2789:	
  6176                           ;incstack = 0
  6177                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  6178                           
  6179                           
  6180                           ;mcc_generated_files/tmr4.c: 133:     TMR4_InterruptHandler = InterruptHandler;
  6181  0E3B  0020               	movlb	0	; select bank0
  6182  0E3C  0821               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
  6183  0E3D  0021               	movlb	1	; select bank1
  6184  0E3E  00D7               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  6185  0E3F  0020               	movlb	0	; select bank0
  6186  0E40  0820               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
  6187  0E41  0021               	movlb	1	; select bank1
  6188  0E42  00D6               	movwf	_TMR4_InterruptHandler^(0+128)
  6189  0E43                     l394:
  6190  0E43  0008               	return
  6191  0E44                     __end_of_TMR4_SetInterruptHandler:
  6192                           
  6193                           	psect	text20
  6194  0E06                     __ptext20:	
  6195 ;; *************** function _TMR2_Initialize *****************
  6196 ;; Defined at:
  6197 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1    wreg      void 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6211 ;;      Params:         0       0       0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0
  6214 ;;      Totals:         0       0       0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 4
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_SYSTEM_Initialize
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _TMR2_Initialize
  6227  0E06                     _TMR2_Initialize:
  6228  0E06                     l2921:	
  6229                           ;incstack = 0
  6230                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6231                           
  6232                           
  6233                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6234  0E06  30FF               	movlw	255
  6235  0E07  0020               	movlb	0	; select bank0
  6236  0E08  009B               	movwf	27	;volatile
  6237  0E09                     l2923:
  6238                           
  6239                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6240  0E09  019A               	clrf	26	;volatile
  6241  0E0A                     l2925:
  6242                           
  6243                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6244  0E0A  1091               	bcf	17,1	;volatile
  6245  0E0B                     l2927:
  6246                           
  6247                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6248  0E0B  3004               	movlw	4
  6249  0E0C  009C               	movwf	28	;volatile
  6250  0E0D                     l303:
  6251  0E0D  0008               	return
  6252  0E0E                     __end_of_TMR2_Initialize:
  6253                           
  6254                           	psect	text21
  6255  0E7F                     __ptext21:	
  6256 ;; *************** function _PIN_MANAGER_Initialize *****************
  6257 ;; Defined at:
  6258 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6272 ;;      Params:         0       0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 4
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_SYSTEM_Initialize
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           
  6287                           ;psect for function _PIN_MANAGER_Initialize
  6288  0E7F                     _PIN_MANAGER_Initialize:
  6289  0E7F                     l2889:	
  6290                           ;incstack = 0
  6291                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6292                           
  6293                           
  6294                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6295  0E7F  0022               	movlb	2	; select bank2
  6296  0E80  018C               	clrf	12	;volatile
  6297                           
  6298                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6299  0E81  018D               	clrf	13	;volatile
  6300  0E82                     l2891:
  6301                           
  6302                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  6303  0E82  30FF               	movlw	255
  6304  0E83  0021               	movlb	1	; select bank1
  6305  0E84  008C               	movwf	12	;volatile
  6306  0E85                     l2893:
  6307                           
  6308                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF3;
  6309  0E85  30F3               	movlw	243
  6310  0E86  008D               	movwf	13	;volatile
  6311  0E87                     l2895:
  6312                           
  6313                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  6314  0E87  30F0               	movlw	240
  6315  0E88  0023               	movlb	3	; select bank3
  6316  0E89  008D               	movwf	13	;volatile
  6317  0E8A                     l2897:
  6318                           
  6319                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1D;
  6320  0E8A  301D               	movlw	29
  6321  0E8B  008C               	movwf	12	;volatile
  6322                           
  6323                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  6324  0E8C  0024               	movlb	4	; select bank4
  6325  0E8D  018D               	clrf	13	;volatile
  6326                           
  6327                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  6328  0E8E  018C               	clrf	12	;volatile
  6329  0E8F                     l2899:
  6330                           
  6331                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  6332  0E8F  0021               	movlb	1	; select bank1
  6333  0E90  1795               	bsf	21,7	;volatile
  6334                           
  6335                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  6336  0E91  0022               	movlb	2	; select bank2
  6337  0E92  019D               	clrf	29	;volatile
  6338                           
  6339                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  6340  0E93  019E               	clrf	30	;volatile
  6341  0E94                     l287:
  6342  0E94  0008               	return
  6343  0E95                     __end_of_PIN_MANAGER_Initialize:
  6344                           
  6345                           	psect	text22
  6346  0DFF                     __ptext22:	
  6347 ;; *************** function _OSCILLATOR_Initialize *****************
  6348 ;; Defined at:
  6349 ;;		line 62 in file "mcc_generated_files/mcc.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6363 ;;      Params:         0       0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0
  6366 ;;      Totals:         0       0       0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 4
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_SYSTEM_Initialize
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function _OSCILLATOR_Initialize
  6379  0DFF                     _OSCILLATOR_Initialize:
  6380  0DFF                     l2901:	
  6381                           ;incstack = 0
  6382                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6383                           
  6384                           
  6385                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x68;
  6386  0DFF  3068               	movlw	104
  6387  0E00  0021               	movlb	1	; select bank1
  6388  0E01  0099               	movwf	25	;volatile
  6389  0E02                     l2903:
  6390                           
  6391                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  6392  0E02  0198               	clrf	24	;volatile
  6393  0E03                     l2905:
  6394                           
  6395                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  6396  0E03  0022               	movlb	2	; select bank2
  6397  0E04  0196               	clrf	22	;volatile
  6398  0E05                     l259:
  6399  0E05  0008               	return
  6400  0E06                     __end_of_OSCILLATOR_Initialize:
  6401                           
  6402                           	psect	text23
  6403  06E0                     __ptext23:	
  6404 ;; *************** function _EUSART_Initialize *****************
  6405 ;; Defined at:
  6406 ;;		line 88 in file "mcc_generated_files/eusart.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0, pclath, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6420 ;;      Params:         0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0
  6422 ;;      Temps:          0       1       0       0       0       0
  6423 ;;      Totals:         0       1       0       0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 5
  6427 ;; This function calls:
  6428 ;;		_EUSART_SetErrorHandler
  6429 ;;		_EUSART_SetFramingErrorHandler
  6430 ;;		_EUSART_SetOverrunErrorHandler
  6431 ;;		_EUSART_SetRxInterruptHandler
  6432 ;;		_EUSART_SetTxInterruptHandler
  6433 ;; This function is called by:
  6434 ;;		_SYSTEM_Initialize
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _EUSART_Initialize
  6440  06E0                     _EUSART_Initialize:
  6441  06E0                     l2857:	
  6442                           ;incstack = 0
  6443                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6444                           
  6445                           
  6446                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  6447  06E0  0021               	movlb	1	; select bank1
  6448  06E1  1291               	bcf	17,5	;volatile
  6449  06E2                     l2859:
  6450                           
  6451                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6452  06E2  30A4               	movlw	low _EUSART_Receive_ISR
  6453  06E3  0020               	movlb	0	; select bank0
  6454  06E4  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  6455  06E5  3007               	movlw	high _EUSART_Receive_ISR
  6456  06E6  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  6457  06E7  318E  2629  3186   	fcall	_EUSART_SetRxInterruptHandler
  6458  06EA                     l2861:
  6459                           
  6460                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  6461  06EA  0021               	movlb	1	; select bank1
  6462  06EB  1211               	bcf	17,4	;volatile
  6463                           
  6464                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6465  06EC  30DD               	movlw	low _EUSART_Transmit_ISR
  6466  06ED  0020               	movlb	0	; select bank0
  6467  06EE  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  6468  06EF  3007               	movlw	high _EUSART_Transmit_ISR
  6469  06F0  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  6470  06F1  318E  2632  3186   	fcall	_EUSART_SetTxInterruptHandler
  6471  06F4                     l2863:
  6472                           
  6473                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  6474  06F4  3008               	movlw	8
  6475  06F5  0023               	movlb	3	; select bank3
  6476  06F6  009F               	movwf	31	;volatile
  6477  06F7                     l2865:
  6478                           
  6479                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  6480  06F7  3090               	movlw	144
  6481  06F8  009D               	movwf	29	;volatile
  6482  06F9                     l2867:
  6483                           
  6484                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  6485  06F9  3024               	movlw	36
  6486  06FA  009E               	movwf	30	;volatile
  6487  06FB                     l2869:
  6488                           
  6489                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x67;
  6490  06FB  3067               	movlw	103
  6491  06FC  009B               	movwf	27	;volatile
  6492  06FD                     l2871:
  6493                           
  6494                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  6495  06FD  019C               	clrf	28	;volatile
  6496  06FE                     l2873:
  6497                           
  6498                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6499  06FE  30EB               	movlw	low _EUSART_DefaultFramingErrorHandler
  6500  06FF  0020               	movlb	0	; select bank0
  6501  0700  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  6502  0701  300D               	movlw	high _EUSART_DefaultFramingErrorHandler
  6503  0702  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  6504  0703  318E  2617  3186   	fcall	_EUSART_SetFramingErrorHandler
  6505  0706                     l2875:
  6506                           
  6507                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6508  0706  30F1               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6509  0707  0020               	movlb	0	; select bank0
  6510  0708  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  6511  0709  300D               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6512  070A  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  6513  070B  318E  2620  3186   	fcall	_EUSART_SetOverrunErrorHandler
  6514  070E                     l2877:
  6515                           
  6516                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6517  070E  30ED               	movlw	low _EUSART_DefaultErrorHandler
  6518  070F  0020               	movlb	0	; select bank0
  6519  0710  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  6520  0711  300D               	movlw	high _EUSART_DefaultErrorHandler
  6521  0712  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  6522  0713  318E  260E  3186   	fcall	_EUSART_SetErrorHandler
  6523                           
  6524                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  6525  0716  0021               	movlb	1	; select bank1
  6526  0717  01C6               	clrf	_eusartRxLastError^(0+128)	;volatile
  6527                           
  6528                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  6529  0718  01F5               	clrf	_eusartTxHead	;volatile
  6530                           
  6531                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  6532  0719  01F4               	clrf	_eusartTxTail	;volatile
  6533  071A                     l2879:
  6534                           
  6535                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6536  071A  3008               	movlw	8
  6537  071B  0020               	movlb	0	; select bank0
  6538  071C  00A2               	movwf	??_EUSART_Initialize
  6539  071D  0822               	movf	??_EUSART_Initialize,w
  6540  071E  0021               	movlb	1	; select bank1
  6541  071F  00E0               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6542  0720                     l2881:
  6543                           
  6544                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  6545  0720  01F3               	clrf	_eusartRxHead	;volatile
  6546  0721                     l2883:
  6547                           
  6548                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  6549  0721  01F2               	clrf	_eusartRxTail	;volatile
  6550  0722                     l2885:
  6551                           
  6552                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  6553  0722  01C7               	clrf	_eusartRxCount^(0+128)	;volatile
  6554  0723                     l2887:
  6555                           
  6556                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  6557  0723  1691               	bsf	17,5	;volatile
  6558  0724                     l156:
  6559  0724  0008               	return
  6560  0725                     __end_of_EUSART_Initialize:
  6561                           
  6562                           	psect	text24
  6563  0E32                     __ptext24:	
  6564 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6565 ;; Defined at:
  6566 ;;		line 285 in file "mcc_generated_files/eusart.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6569 ;;		 -> EUSART_Transmit_ISR(1), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6581 ;;      Params:         0       2       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0
  6584 ;;      Totals:         0       2       0       0       0       0
  6585 ;;Total ram usage:        2 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 4
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_EUSART_Initialize
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _EUSART_SetTxInterruptHandler
  6597  0E32                     _EUSART_SetTxInterruptHandler:
  6598  0E32                     l2781:	
  6599                           ;incstack = 0
  6600                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  6601                           
  6602                           
  6603                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  6604  0E32  0020               	movlb	0	; select bank0
  6605  0E33  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  6606  0E34  0021               	movlb	1	; select bank1
  6607  0E35  00DF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  6608  0E36  0020               	movlb	0	; select bank0
  6609  0E37  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  6610  0E38  0021               	movlb	1	; select bank1
  6611  0E39  00DE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  6612  0E3A                     l228:
  6613  0E3A  0008               	return
  6614  0E3B                     __end_of_EUSART_SetTxInterruptHandler:
  6615                           
  6616                           	psect	text25
  6617  0E29                     __ptext25:	
  6618 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6619 ;; Defined at:
  6620 ;;		line 289 in file "mcc_generated_files/eusart.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6623 ;;		 -> EUSART_Receive_ISR(1), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6635 ;;      Params:         0       2       0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0
  6638 ;;      Totals:         0       2       0       0       0       0
  6639 ;;Total ram usage:        2 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 4
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_EUSART_Initialize
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           
  6650                           ;psect for function _EUSART_SetRxInterruptHandler
  6651  0E29                     _EUSART_SetRxInterruptHandler:
  6652  0E29                     l2779:	
  6653                           ;incstack = 0
  6654                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  6655                           
  6656                           
  6657                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  6658  0E29  0020               	movlb	0	; select bank0
  6659  0E2A  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  6660  0E2B  0021               	movlb	1	; select bank1
  6661  0E2C  00DD               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  6662  0E2D  0020               	movlb	0	; select bank0
  6663  0E2E  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  6664  0E2F  0021               	movlb	1	; select bank1
  6665  0E30  00DC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  6666  0E31                     l231:
  6667  0E31  0008               	return
  6668  0E32                     __end_of_EUSART_SetRxInterruptHandler:
  6669                           
  6670                           	psect	text26
  6671  0E20                     __ptext26:	
  6672 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6673 ;; Defined at:
  6674 ;;		line 277 in file "mcc_generated_files/eusart.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6677 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6689 ;;      Params:         0       2       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0
  6692 ;;      Totals:         0       2       0       0       0       0
  6693 ;;Total ram usage:        2 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 4
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_EUSART_Initialize
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _EUSART_SetOverrunErrorHandler
  6705  0E20                     _EUSART_SetOverrunErrorHandler:
  6706  0E20                     l2785:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6709                           
  6710                           
  6711                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  6712  0E20  0020               	movlb	0	; select bank0
  6713  0E21  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6714  0E22  0021               	movlb	1	; select bank1
  6715  0E23  00D9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6716  0E24  0020               	movlb	0	; select bank0
  6717  0E25  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6718  0E26  0021               	movlb	1	; select bank1
  6719  0E27  00D8               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6720  0E28                     l222:
  6721  0E28  0008               	return
  6722  0E29                     __end_of_EUSART_SetOverrunErrorHandler:
  6723                           
  6724                           	psect	text27
  6725  0E17                     __ptext27:	
  6726 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6727 ;; Defined at:
  6728 ;;		line 273 in file "mcc_generated_files/eusart.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6731 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6743 ;;      Params:         0       2       0       0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0
  6746 ;;      Totals:         0       2       0       0       0       0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 4
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_EUSART_Initialize
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           
  6758                           ;psect for function _EUSART_SetFramingErrorHandler
  6759  0E17                     _EUSART_SetFramingErrorHandler:
  6760  0E17                     l2783:	
  6761                           ;incstack = 0
  6762                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6763                           
  6764                           
  6765                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  6766  0E17  0020               	movlb	0	; select bank0
  6767  0E18  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6768  0E19  0021               	movlb	1	; select bank1
  6769  0E1A  00DB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6770  0E1B  0020               	movlb	0	; select bank0
  6771  0E1C  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6772  0E1D  0021               	movlb	1	; select bank1
  6773  0E1E  00DA               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6774  0E1F                     l219:
  6775  0E1F  0008               	return
  6776  0E20                     __end_of_EUSART_SetFramingErrorHandler:
  6777                           
  6778                           	psect	text28
  6779  0E0E                     __ptext28:	
  6780 ;; *************** function _EUSART_SetErrorHandler *****************
  6781 ;; Defined at:
  6782 ;;		line 281 in file "mcc_generated_files/eusart.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6785 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6797 ;;      Params:         0       2       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0
  6800 ;;      Totals:         0       2       0       0       0       0
  6801 ;;Total ram usage:        2 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 4
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_EUSART_Initialize
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function _EUSART_SetErrorHandler
  6813  0E0E                     _EUSART_SetErrorHandler:
  6814  0E0E                     l2787:	
  6815                           ;incstack = 0
  6816                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6817                           
  6818                           
  6819                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  6820  0E0E  0020               	movlb	0	; select bank0
  6821  0E0F  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6822  0E10  0022               	movlb	2	; select bank2
  6823  0E11  00DF               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  6824  0E12  0020               	movlb	0	; select bank0
  6825  0E13  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6826  0E14  0022               	movlb	2	; select bank2
  6827  0E15  00DE               	movwf	_EUSART_ErrorHandler^(0+256)
  6828  0E16                     l225:
  6829  0E16  0008               	return
  6830  0E17                     __end_of_EUSART_SetErrorHandler:
  6831                           
  6832                           	psect	text29
  6833  0E4E                     __ptext29:	
  6834 ;; *************** function _EPWM1_Initialize *****************
  6835 ;; Defined at:
  6836 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6850 ;;      Params:         0       0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0
  6853 ;;      Totals:         0       0       0       0       0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 4
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_SYSTEM_Initialize
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function _EPWM1_Initialize
  6866  0E4E                     _EPWM1_Initialize:
  6867  0E4E                     l2845:	
  6868                           ;incstack = 0
  6869                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  6870                           
  6871                           
  6872                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  6873  0E4E  303C               	movlw	60
  6874  0E4F  0025               	movlb	5	; select bank5
  6875  0E50  0093               	movwf	19	;volatile
  6876  0E51                     l2847:
  6877                           
  6878                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  6879  0E51  0195               	clrf	21	;volatile
  6880  0E52                     l2849:
  6881                           
  6882                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  6883  0E52  3080               	movlw	128
  6884  0E53  0094               	movwf	20	;volatile
  6885  0E54                     l2851:
  6886                           
  6887                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  6888  0E54  3001               	movlw	1
  6889  0E55  0096               	movwf	22	;volatile
  6890  0E56                     l2853:
  6891                           
  6892                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  6893  0E56  0192               	clrf	18	;volatile
  6894                           
  6895                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0xFF;
  6896  0E57  30FF               	movlw	255
  6897  0E58  0091               	movwf	17	;volatile
  6898  0E59                     l2855:
  6899                           
  6900                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  6901  0E59  30FC               	movlw	-4
  6902  0E5A  059E               	andwf	30,f	;volatile
  6903  0E5B                     l78:
  6904  0E5B  0008               	return
  6905  0E5C                     __end_of_EPWM1_Initialize:
  6906                           
  6907                           	psect	text30
  6908  0EF5                     __ptext30:	
  6909 ;; *************** function _EPWM1_LoadDutyValue *****************
  6910 ;; Defined at:
  6911 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6925 ;;      Params:         0       2       0       0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0
  6927 ;;      Temps:          0       2       0       0       0       0
  6928 ;;      Totals:         0       4       0       0       0       0
  6929 ;;Total ram usage:        4 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 4
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_main
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function _EPWM1_LoadDutyValue
  6941  0EF5                     _EPWM1_LoadDutyValue:
  6942  0EF5                     l3039:	
  6943                           ;incstack = 0
  6944                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6945                           
  6946                           
  6947                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6948  0EF5  0020               	movlb	0	; select bank0
  6949  0EF6  0821               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  6950  0EF7  00A3               	movwf	??_EPWM1_LoadDutyValue+1
  6951  0EF8  0820               	movf	EPWM1_LoadDutyValue@dutyValue,w
  6952  0EF9  00A2               	movwf	??_EPWM1_LoadDutyValue
  6953  0EFA  36A3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  6954  0EFB  0CA2               	rrf	??_EPWM1_LoadDutyValue,f
  6955  0EFC  36A3               	lsrf	??_EPWM1_LoadDutyValue+1,f
  6956  0EFD  0CA2               	rrf	??_EPWM1_LoadDutyValue,f
  6957  0EFE  0822               	movf	??_EPWM1_LoadDutyValue,w
  6958  0EFF  0025               	movlb	5	; select bank5
  6959  0F00  0091               	movwf	17	;volatile
  6960                           
  6961                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6962  0F01  0020               	movlb	0	; select bank0
  6963  0F02  0820               	movf	EPWM1_LoadDutyValue@dutyValue,w
  6964  0F03  3903               	andlw	3
  6965  0F04  00A2               	movwf	??_EPWM1_LoadDutyValue
  6966  0F05  3004               	movlw	4
  6967  0F06                     u2775:
  6968  0F06  35A2               	lslf	??_EPWM1_LoadDutyValue,f
  6969  0F07  0B89               	decfsz	9,f
  6970  0F08  2F06               	goto	u2775
  6971  0F09  0025               	movlb	5	; select bank5
  6972  0F0A  0813               	movf	19,w	;volatile
  6973  0F0B  39CF               	andlw	207
  6974  0F0C  0020               	movlb	0	; select bank0
  6975  0F0D  0422               	iorwf	??_EPWM1_LoadDutyValue,w
  6976  0F0E  0025               	movlb	5	; select bank5
  6977  0F0F  0093               	movwf	19	;volatile
  6978  0F10                     l81:
  6979  0F10  0008               	return
  6980  0F11                     __end_of_EPWM1_LoadDutyValue:
  6981                           
  6982                           	psect	intentry
  6983  0004                     __pintentry:	
  6984 ;; *************** function _INTERRUPT_InterruptManager *****************
  6985 ;; Defined at:
  6986 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7000 ;;      Params:         0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 3
  7007 ;; This function calls:
  7008 ;;		Absolute function
  7009 ;;		_EUSART_Receive_ISR
  7010 ;;		_EUSART_Transmit_ISR
  7011 ;;		_TMR4_ISR
  7012 ;; This function is called by:
  7013 ;;		Interrupt level 1
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017  0004                     _INTERRUPT_InterruptManager:
  7018                           
  7019                           ;incstack = 0
  7020  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7021                           
  7022                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7023  0005  3180               	pagesel	$
  7024  0006                     i1l2493:
  7025                           
  7026                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  7027  0006  1F0B               	btfss	11,6	;volatile
  7028  0007  2809               	goto	u194_21
  7029  0008  280A               	goto	u194_20
  7030  0009                     u194_21:
  7031  0009  283A               	goto	i1l351
  7032  000A                     u194_20:
  7033  000A                     i1l2495:
  7034                           
  7035                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  7036  000A  0021               	movlb	1	; select bank1
  7037  000B  1E11               	btfss	17,4	;volatile
  7038  000C  280E               	goto	u195_21
  7039  000D  280F               	goto	u195_20
  7040  000E                     u195_21:
  7041  000E  281B               	goto	i1l344
  7042  000F                     u195_20:
  7043  000F                     i1l2497:
  7044  000F  0020               	movlb	0	; select bank0
  7045  0010  1E11               	btfss	17,4	;volatile
  7046  0011  2813               	goto	u196_21
  7047  0012  2814               	goto	u196_20
  7048  0013                     u196_21:
  7049  0013  281B               	goto	i1l344
  7050  0014                     u196_20:
  7051  0014                     i1l2499:
  7052                           
  7053                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  7054  0014  0021               	movlb	1	; select bank1
  7055  0015  085F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  7056  0016  008A               	movwf	10
  7057  0017  085E               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  7058  0018  000A               	callw
  7059  0019  3180               	pagesel	$
  7060                           
  7061                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  7062  001A  283A               	goto	i1l351
  7063  001B                     i1l344:	
  7064                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  7065                           
  7066  001B  0021               	movlb	1	; select bank1
  7067  001C  1E91               	btfss	17,5	;volatile
  7068  001D  281F               	goto	u197_21
  7069  001E  2820               	goto	u197_20
  7070  001F                     u197_21:
  7071  001F  282C               	goto	i1l346
  7072  0020                     u197_20:
  7073  0020                     i1l2501:
  7074  0020  0020               	movlb	0	; select bank0
  7075  0021  1E91               	btfss	17,5	;volatile
  7076  0022  2824               	goto	u198_21
  7077  0023  2825               	goto	u198_20
  7078  0024                     u198_21:
  7079  0024  282C               	goto	i1l346
  7080  0025                     u198_20:
  7081  0025                     i1l2503:
  7082                           
  7083                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  7084  0025  0021               	movlb	1	; select bank1
  7085  0026  085D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  7086  0027  008A               	movwf	10
  7087  0028  085C               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  7088  0029  000A               	callw
  7089  002A  3180               	pagesel	$
  7090                           
  7091                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7092  002B  283A               	goto	i1l351
  7093  002C                     i1l346:	
  7094                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.TMR4IE == 1 && PI
      +                          R3bits.TMR4IF == 1)
  7095                           
  7096  002C  0021               	movlb	1	; select bank1
  7097  002D  1C93               	btfss	19,1	;volatile
  7098  002E  2830               	goto	u199_21
  7099  002F  2831               	goto	u199_20
  7100  0030                     u199_21:
  7101  0030  283A               	goto	i1l345
  7102  0031                     u199_20:
  7103  0031                     i1l2505:
  7104  0031  0020               	movlb	0	; select bank0
  7105  0032  1C93               	btfss	19,1	;volatile
  7106  0033  2835               	goto	u200_21
  7107  0034  2836               	goto	u200_20
  7108  0035                     u200_21:
  7109  0035  283A               	goto	i1l345
  7110  0036                     u200_20:
  7111  0036                     i1l2507:
  7112                           
  7113                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  7114  0036  318E  265C  3180   	fcall	_TMR4_ISR
  7115                           
  7116                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7117  0039  283A               	goto	i1l351
  7118  003A                     i1l345:
  7119  003A                     i1l351:	
  7120                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  7121                           
  7122  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7123  003B  0009               	retfie
  7124  003C                     __end_of_INTERRUPT_InterruptManager:
  7125                           
  7126                           	psect	text32
  7127  0E5C                     __ptext32:	
  7128 ;; *************** function _TMR4_ISR *****************
  7129 ;; Defined at:
  7130 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;		None
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      void 
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0, pclath, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7144 ;;      Params:         0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used: 1
  7150 ;; Hardware stack levels required when called: 2
  7151 ;; This function calls:
  7152 ;;		Absolute function
  7153 ;;		_TMR4_CustumCallBack
  7154 ;;		_TMR4_DefaultInterruptHandler
  7155 ;; This function is called by:
  7156 ;;		_INTERRUPT_InterruptManager
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function _TMR4_ISR
  7162  0E5C                     _TMR4_ISR:
  7163  0E5C                     i1l2477:	
  7164                           ;incstack = 0
  7165                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  7166                           
  7167                           
  7168                           ;mcc_generated_files/tmr4.c: 123:     PIR3bits.TMR4IF = 0;
  7169  0E5C  0020               	movlb	0	; select bank0
  7170  0E5D  1093               	bcf	19,1	;volatile
  7171  0E5E                     i1l2479:
  7172                           
  7173                           ;mcc_generated_files/tmr4.c: 125:     if(TMR4_InterruptHandler)
  7174  0E5E  0021               	movlb	1	; select bank1
  7175  0E5F  0856               	movf	_TMR4_InterruptHandler^(0+128),w
  7176  0E60  0457               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  7177  0E61  1903               	btfsc	3,2
  7178  0E62  2E64               	goto	u191_21
  7179  0E63  2E65               	goto	u191_20
  7180  0E64                     u191_21:
  7181  0E64  2E6A               	goto	i1l391
  7182  0E65                     u191_20:
  7183  0E65                     i1l2481:
  7184                           
  7185                           ;mcc_generated_files/tmr4.c: 126:     {;mcc_generated_files/tmr4.c: 127:         TMR4_In
      +                          terruptHandler();
  7186  0E65  0857               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  7187  0E66  008A               	movwf	10
  7188  0E67  0856               	movf	_TMR4_InterruptHandler^(0+128),w
  7189  0E68  000A               	callw
  7190  0E69  318E               	pagesel	$
  7191  0E6A                     i1l391:
  7192  0E6A  0008               	return
  7193  0E6B                     __end_of_TMR4_ISR:
  7194                           
  7195                           	psect	text33
  7196  0F9F                     __ptext33:	
  7197 ;; *************** function _TMR4_CustumCallBack *****************
  7198 ;; Defined at:
  7199 ;;		line 118 in file "main.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0, pclath, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7213 ;;      Params:         0       0       0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0
  7216 ;;      Totals:         0       0       0       0       0       0
  7217 ;;Total ram usage:        0 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; Hardware stack levels required when called: 1
  7220 ;; This function calls:
  7221 ;;		___wmul
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;;		_TMR4_ISR
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           
  7229                           ;psect for function _TMR4_CustumCallBack
  7230  0F9F                     _TMR4_CustumCallBack:
  7231  0F9F                     i1l2301:	
  7232                           ;incstack = 0
  7233                           ; Regs used in _TMR4_CustumCallBack: [wreg+status,2+status,0+pclath+cstack]
  7234                           
  7235                           
  7236                           ;main.c: 119:     if( PORTAbits.RA1 == 1 ){
  7237  0F9F  0020               	movlb	0	; select bank0
  7238  0FA0  1C8C               	btfss	12,1	;volatile
  7239  0FA1  2FA3               	goto	u169_21
  7240  0FA2  2FA4               	goto	u169_20
  7241  0FA3                     u169_21:
  7242  0FA3  2FA9               	goto	i1l2305
  7243  0FA4                     u169_20:
  7244  0FA4                     i1l2303:
  7245                           
  7246                           ;main.c: 120:         tempsignalon_count++;
  7247  0FA4  3001               	movlw	1
  7248  0FA5  0021               	movlb	1	; select bank1
  7249  0FA6  07C2               	addwf	_tempsignalon_count^(0+128),f
  7250  0FA7  3000               	movlw	0
  7251  0FA8  3DC3               	addwfc	(_tempsignalon_count+1)^(0+128),f
  7252  0FA9                     i1l2305:
  7253                           
  7254                           ;main.c: 123:     if( ++tmr4_count == 100 ){
  7255  0FA9  3001               	movlw	1
  7256  0FAA  0021               	movlb	1	; select bank1
  7257  0FAB  07C4               	addwf	_tmr4_count^(0+128),f
  7258  0FAC  3000               	movlw	0
  7259  0FAD  3DC5               	addwfc	(_tmr4_count+1)^(0+128),f
  7260  0FAE  3064               	movlw	100
  7261  0FAF  0644               	xorwf	_tmr4_count^(0+128),w
  7262  0FB0  0445               	iorwf	(_tmr4_count+1)^(0+128),w
  7263  0FB1  1D03               	btfss	3,2
  7264  0FB2  2FB4               	goto	u170_21
  7265  0FB3  2FB5               	goto	u170_20
  7266  0FB4                     u170_21:
  7267  0FB4  2FC9               	goto	i1l442
  7268  0FB5                     u170_20:
  7269  0FB5                     i1l2307:
  7270                           
  7271                           ;main.c: 124:         tmr4_count = 0;
  7272  0FB5  01C4               	clrf	_tmr4_count^(0+128)
  7273  0FB6  01C5               	clrf	(_tmr4_count+1)^(0+128)
  7274  0FB7                     i1l2309:
  7275                           
  7276                           ;main.c: 125:         temp_duty = tempsignalon_count*10;
  7277  0FB7  0843               	movf	(_tempsignalon_count+1)^(0+128),w
  7278  0FB8  00F7               	movwf	___wmul@multiplier+1
  7279  0FB9  0842               	movf	_tempsignalon_count^(0+128),w
  7280  0FBA  00F6               	movwf	___wmul@multiplier
  7281  0FBB  300A               	movlw	10
  7282  0FBC  00F8               	movwf	___wmul@multiplicand
  7283  0FBD  3000               	movlw	0
  7284  0FBE  00F9               	movwf	___wmul@multiplicand+1
  7285  0FBF  318F  272D  318F   	fcall	___wmul
  7286  0FC2  0877               	movf	?___wmul+1,w
  7287  0FC3  0021               	movlb	1	; select bank1
  7288  0FC4  00C1               	movwf	(_temp_duty+1)^(0+128)
  7289  0FC5  0876               	movf	?___wmul,w
  7290  0FC6  00C0               	movwf	_temp_duty^(0+128)
  7291  0FC7                     i1l2311:
  7292                           
  7293                           ;main.c: 126:         tempsignalon_count = 0;
  7294  0FC7  01C2               	clrf	_tempsignalon_count^(0+128)
  7295  0FC8  01C3               	clrf	(_tempsignalon_count+1)^(0+128)
  7296  0FC9                     i1l442:
  7297  0FC9  0008               	return
  7298  0FCA                     __end_of_TMR4_CustumCallBack:
  7299                           
  7300                           	psect	text34
  7301  0DEC                     __ptext34:	
  7302 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7303 ;; Defined at:
  7304 ;;		line 136 in file "mcc_generated_files/tmr4.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		None
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7318 ;;      Params:         0       0       0       0       0       0
  7319 ;;      Locals:         0       0       0       0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0
  7321 ;;      Totals:         0       0       0       0       0       0
  7322 ;;Total ram usage:        0 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_TMR4_Initialize
  7328 ;;		_TMR4_ISR
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           
  7333                           ;psect for function _TMR4_DefaultInterruptHandler
  7334  0DEC                     _TMR4_DefaultInterruptHandler:
  7335  0DEC                     i1l397:	
  7336                           ;incstack = 0
  7337                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  7338                           
  7339  0DEC  0008               	return
  7340  0DED                     __end_of_TMR4_DefaultInterruptHandler:
  7341                           
  7342                           	psect	text35
  7343  0F2D                     __ptext35:	
  7344 ;; *************** function ___wmul *****************
  7345 ;; Defined at:
  7346 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  multiplier      2    0[COMMON] unsigned int 
  7349 ;;  multiplicand    2    2[COMMON] unsigned int 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  product         2    4[COMMON] unsigned int 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  2    0[COMMON] unsigned int 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7361 ;;      Params:         4       0       0       0       0       0
  7362 ;;      Locals:         2       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0
  7364 ;;      Totals:         6       0       0       0       0       0
  7365 ;;Total ram usage:        6 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_TMR4_CustumCallBack
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           
  7375                           ;psect for function ___wmul
  7376  0F2D                     ___wmul:
  7377  0F2D                     i1l2145:	
  7378                           ;incstack = 0
  7379                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7380                           
  7381  0F2D  01FA               	clrf	___wmul@product
  7382  0F2E  01FB               	clrf	___wmul@product+1
  7383  0F2F                     i1l2147:
  7384  0F2F  1C76               	btfss	___wmul@multiplier,0
  7385  0F30  2F32               	goto	u160_21
  7386  0F31  2F33               	goto	u160_20
  7387  0F32                     u160_21:
  7388  0F32  2F37               	goto	i1l592
  7389  0F33                     u160_20:
  7390  0F33                     i1l2149:
  7391  0F33  0878               	movf	___wmul@multiplicand,w
  7392  0F34  07FA               	addwf	___wmul@product,f
  7393  0F35  0879               	movf	___wmul@multiplicand+1,w
  7394  0F36  3DFB               	addwfc	___wmul@product+1,f
  7395  0F37                     i1l592:
  7396  0F37  3001               	movlw	1
  7397  0F38                     u161_25:
  7398  0F38  35F8               	lslf	___wmul@multiplicand,f
  7399  0F39  0DF9               	rlf	___wmul@multiplicand+1,f
  7400  0F3A  0B89               	decfsz	9,f
  7401  0F3B  2F38               	goto	u161_25
  7402  0F3C                     i1l2151:
  7403  0F3C  3001               	movlw	1
  7404  0F3D                     u162_25:
  7405  0F3D  36F7               	lsrf	___wmul@multiplier+1,f
  7406  0F3E  0CF6               	rrf	___wmul@multiplier,f
  7407  0F3F  0B89               	decfsz	9,f
  7408  0F40  2F3D               	goto	u162_25
  7409  0F41                     i1l2153:
  7410  0F41  0876               	movf	___wmul@multiplier,w
  7411  0F42  0477               	iorwf	___wmul@multiplier+1,w
  7412  0F43  1D03               	btfss	3,2
  7413  0F44  2F46               	goto	u163_21
  7414  0F45  2F47               	goto	u163_20
  7415  0F46                     u163_21:
  7416  0F46  2F2F               	goto	i1l2147
  7417  0F47                     u163_20:
  7418  0F47                     i1l2155:
  7419  0F47  087B               	movf	___wmul@product+1,w
  7420  0F48  00F7               	movwf	?___wmul+1
  7421  0F49  087A               	movf	___wmul@product,w
  7422  0F4A  00F6               	movwf	?___wmul
  7423  0F4B                     i1l594:
  7424  0F4B  0008               	return
  7425  0F4C                     __end_of___wmul:
  7426                           
  7427                           	psect	text36
  7428  07DD                     __ptext36:	
  7429 ;; *************** function _EUSART_Transmit_ISR *****************
  7430 ;; Defined at:
  7431 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7445 ;;      Params:         0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0
  7447 ;;      Temps:          1       0       0       0       0       0
  7448 ;;      Totals:         1       0       0       0       0       0
  7449 ;;Total ram usage:        1 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_EUSART_Initialize
  7455 ;;		_INTERRUPT_InterruptManager
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           
  7460                           ;psect for function _EUSART_Transmit_ISR
  7461  07DD                     _EUSART_Transmit_ISR:
  7462  07DD                     i1l2443:	
  7463                           ;incstack = 0
  7464                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7465                           
  7466                           
  7467                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7468  07DD  3008               	movlw	8
  7469  07DE  0021               	movlb	1	; select bank1
  7470  07DF  0260               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7471  07E0  1803               	skipnc
  7472  07E1  2FE3               	goto	u186_21
  7473  07E2  2FE4               	goto	u186_20
  7474  07E3                     u186_21:
  7475  07E3  2FFC               	goto	i1l193
  7476  07E4                     u186_20:
  7477  07E4                     i1l2445:
  7478                           
  7479                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7480  07E4  0874               	movf	_eusartTxTail,w
  7481  07E5  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7482  07E6  0086               	movwf	6
  7483  07E7  0187               	clrf	7
  7484  07E8  0801               	movf	1,w
  7485  07E9  0023               	movlb	3	; select bank3
  7486  07EA  009A               	movwf	26	;volatile
  7487  07EB                     i1l2447:
  7488  07EB  3001               	movlw	1
  7489  07EC  00F6               	movwf	??_EUSART_Transmit_ISR
  7490  07ED  0876               	movf	??_EUSART_Transmit_ISR,w
  7491  07EE  07F4               	addwf	_eusartTxTail,f	;volatile
  7492  07EF                     i1l2449:
  7493                           
  7494                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7495  07EF  3008               	movlw	8
  7496  07F0  0274               	subwf	_eusartTxTail,w	;volatile
  7497  07F1  1C03               	skipc
  7498  07F2  2FF4               	goto	u187_21
  7499  07F3  2FF5               	goto	u187_20
  7500  07F4                     u187_21:
  7501  07F4  2FF6               	goto	i1l2453
  7502  07F5                     u187_20:
  7503  07F5                     i1l2451:
  7504                           
  7505                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7506  07F5  01F4               	clrf	_eusartTxTail	;volatile
  7507  07F6                     i1l2453:
  7508                           
  7509                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7510  07F6  3001               	movlw	1
  7511  07F7  00F6               	movwf	??_EUSART_Transmit_ISR
  7512  07F8  0876               	movf	??_EUSART_Transmit_ISR,w
  7513  07F9  0021               	movlb	1	; select bank1
  7514  07FA  07E0               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7515                           
  7516                           ;mcc_generated_files/eusart.c: 218:     }
  7517  07FB  2FFD               	goto	i1l196
  7518  07FC                     i1l193:	
  7519                           ;mcc_generated_files/eusart.c: 219:     else
  7520                           
  7521                           
  7522                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  7523  07FC  1211               	bcf	17,4	;volatile
  7524  07FD                     i1l196:
  7525  07FD  0008               	return
  7526  07FE                     __end_of_EUSART_Transmit_ISR:
  7527                           
  7528                           	psect	text37
  7529  07A4                     __ptext37:	
  7530 ;; *************** function _EUSART_Receive_ISR *****************
  7531 ;; Defined at:
  7532 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7546 ;;      Params:         0       0       0       0       0       0
  7547 ;;      Locals:         0       0       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0       0
  7549 ;;      Totals:         0       0       0       0       0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; Hardware stack levels required when called: 2
  7553 ;; This function calls:
  7554 ;;		Absolute function
  7555 ;;		_EUSART_DefaultErrorHandler
  7556 ;;		_EUSART_DefaultFramingErrorHandler
  7557 ;;		_EUSART_DefaultOverrunErrorHandler
  7558 ;;		_EUSART_RxDataHandler
  7559 ;; This function is called by:
  7560 ;;		_EUSART_Initialize
  7561 ;;		_INTERRUPT_InterruptManager
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           
  7566                           ;psect for function _EUSART_Receive_ISR
  7567  07A4                     _EUSART_Receive_ISR:
  7568  07A4                     i1l2455:	
  7569                           ;incstack = 0
  7570                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7571                           
  7572                           
  7573                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7574  07A4  0873               	movf	_eusartRxHead,w	;volatile
  7575  07A5  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7576  07A6  0086               	movwf	6
  7577  07A7  0187               	clrf	7
  7578  07A8  0181               	clrf	1
  7579  07A9                     i1l2457:
  7580                           
  7581                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7582  07A9  0023               	movlb	3	; select bank3
  7583  07AA  1D1D               	btfss	29,2	;volatile
  7584  07AB  2FAD               	goto	u188_21
  7585  07AC  2FAE               	goto	u188_20
  7586  07AD                     u188_21:
  7587  07AD  2FB9               	goto	i1l2463
  7588  07AE                     u188_20:
  7589  07AE                     i1l2459:
  7590                           
  7591                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7592  07AE  0873               	movf	_eusartRxHead,w	;volatile
  7593  07AF  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7594  07B0  0086               	movwf	6
  7595  07B1  0187               	clrf	7
  7596  07B2  1481               	bsf	1,1
  7597  07B3                     i1l2461:
  7598                           
  7599                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7600  07B3  0021               	movlb	1	; select bank1
  7601  07B4  085B               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  7602  07B5  008A               	movwf	10
  7603  07B6  085A               	movf	_EUSART_FramingErrorHandler^(0+128),w
  7604  07B7  000A               	callw
  7605  07B8  3187               	pagesel	$
  7606  07B9                     i1l2463:
  7607                           
  7608                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7609  07B9  0023               	movlb	3	; select bank3
  7610  07BA  1C9D               	btfss	29,1	;volatile
  7611  07BB  2FBD               	goto	u189_21
  7612  07BC  2FBE               	goto	u189_20
  7613  07BD                     u189_21:
  7614  07BD  2FC9               	goto	i1l2469
  7615  07BE                     u189_20:
  7616  07BE                     i1l2465:
  7617                           
  7618                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7619  07BE  0873               	movf	_eusartRxHead,w	;volatile
  7620  07BF  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7621  07C0  0086               	movwf	6
  7622  07C1  0187               	clrf	7
  7623  07C2  1501               	bsf	1,2
  7624  07C3                     i1l2467:
  7625                           
  7626                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7627  07C3  0021               	movlb	1	; select bank1
  7628  07C4  0859               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  7629  07C5  008A               	movwf	10
  7630  07C6  0858               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  7631  07C7  000A               	callw
  7632  07C8  3187               	pagesel	$
  7633  07C9                     i1l2469:
  7634                           
  7635                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7636  07C9  0873               	movf	_eusartRxHead,w	;volatile
  7637  07CA  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7638  07CB  0086               	movwf	6
  7639  07CC  0187               	clrf	7
  7640  07CD  0801               	movf	1,w
  7641  07CE  1903               	btfsc	3,2
  7642  07CF  2FD1               	goto	u190_21
  7643  07D0  2FD2               	goto	u190_20
  7644  07D1                     u190_21:
  7645  07D1  2FD9               	goto	i1l2473
  7646  07D2                     u190_20:
  7647  07D2                     i1l2471:
  7648                           
  7649                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7650  07D2  0022               	movlb	2	; select bank2
  7651  07D3  085F               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
  7652  07D4  008A               	movwf	10
  7653  07D5  085E               	movf	_EUSART_ErrorHandler^(0+256),w
  7654  07D6  000A               	callw
  7655  07D7  3187               	pagesel	$
  7656                           
  7657                           ;mcc_generated_files/eusart.c: 242:     } else {
  7658  07D8  2FDC               	goto	i1l203
  7659  07D9                     i1l2473:
  7660                           
  7661                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7662  07D9  318E  26C1  3187   	fcall	_EUSART_RxDataHandler
  7663  07DC                     i1l203:
  7664  07DC  0008               	return
  7665  07DD                     __end_of_EUSART_Receive_ISR:
  7666                           
  7667                           	psect	text38
  7668  0DF1                     __ptext38:	
  7669 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7670 ;; Defined at:
  7671 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		None
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7685 ;;      Params:         0       0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0
  7688 ;;      Totals:         0       0       0       0       0       0
  7689 ;;Total ram usage:        0 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_EUSART_Initialize
  7695 ;;		_EUSART_Receive_ISR
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7701  0DF1                     _EUSART_DefaultOverrunErrorHandler:
  7702  0DF1                     i1l2257:	
  7703                           ;incstack = 0
  7704                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7705                           
  7706                           
  7707                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  7708  0DF1  0023               	movlb	3	; select bank3
  7709  0DF2  121D               	bcf	29,4	;volatile
  7710                           
  7711                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  7712  0DF3  161D               	bsf	29,4	;volatile
  7713  0DF4                     i1l213:
  7714  0DF4  0008               	return
  7715  0DF5                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7716                           
  7717                           	psect	text39
  7718  0DEB                     __ptext39:	
  7719 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7720 ;; Defined at:
  7721 ;;		line 259 in file "mcc_generated_files/eusart.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		None
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7735 ;;      Params:         0       0       0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used: 1
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_EUSART_Initialize
  7745 ;;		_EUSART_Receive_ISR
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7751  0DEB                     _EUSART_DefaultFramingErrorHandler:
  7752  0DEB                     i1l210:	
  7753                           ;incstack = 0
  7754                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7755                           
  7756  0DEB  0008               	return
  7757  0DEC                     __end_of_EUSART_DefaultFramingErrorHandler:
  7758                           
  7759                           	psect	text40
  7760  0DED                     __ptext40:	
  7761 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7762 ;; Defined at:
  7763 ;;		line 269 in file "mcc_generated_files/eusart.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7777 ;;      Params:         0       0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 1
  7784 ;; This function calls:
  7785 ;;		_EUSART_RxDataHandler
  7786 ;; This function is called by:
  7787 ;;		_EUSART_Initialize
  7788 ;;		_EUSART_Receive_ISR
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _EUSART_DefaultErrorHandler
  7794  0DED                     _EUSART_DefaultErrorHandler:
  7795  0DED                     i1l2259:	
  7796                           ;incstack = 0
  7797                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7798                           
  7799                           
  7800                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  7801  0DED  318E  26C1  318D   	fcall	_EUSART_RxDataHandler
  7802  0DF0                     i1l216:
  7803  0DF0  0008               	return
  7804  0DF1                     __end_of_EUSART_DefaultErrorHandler:
  7805                           
  7806                           	psect	text41
  7807  0EC1                     __ptext41:	
  7808 ;; *************** function _EUSART_RxDataHandler *****************
  7809 ;; Defined at:
  7810 ;;		line 249 in file "mcc_generated_files/eusart.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7824 ;;      Params:         0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0
  7826 ;;      Temps:          1       0       0       0       0       0
  7827 ;;      Totals:         1       0       0       0       0       0
  7828 ;;Total ram usage:        1 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_EUSART_Receive_ISR
  7834 ;;		_EUSART_DefaultErrorHandler
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           
  7839                           ;psect for function _EUSART_RxDataHandler
  7840  0EC1                     _EUSART_RxDataHandler:
  7841  0EC1                     i1l2133:	
  7842                           ;incstack = 0
  7843                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7844                           
  7845                           
  7846                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7847  0EC1  0023               	movlb	3	; select bank3
  7848  0EC2  0819               	movf	25,w	;volatile
  7849  0EC3  00F6               	movwf	??_EUSART_RxDataHandler
  7850  0EC4  0873               	movf	_eusartRxHead,w
  7851  0EC5  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7852  0EC6  0086               	movwf	6
  7853  0EC7  0187               	clrf	7
  7854  0EC8  0876               	movf	??_EUSART_RxDataHandler,w
  7855  0EC9  0081               	movwf	1
  7856  0ECA                     i1l2135:
  7857  0ECA  3001               	movlw	1
  7858  0ECB  00F6               	movwf	??_EUSART_RxDataHandler
  7859  0ECC  0876               	movf	??_EUSART_RxDataHandler,w
  7860  0ECD  07F3               	addwf	_eusartRxHead,f	;volatile
  7861  0ECE                     i1l2137:
  7862                           
  7863                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7864  0ECE  3008               	movlw	8
  7865  0ECF  0273               	subwf	_eusartRxHead,w	;volatile
  7866  0ED0  1C03               	skipc
  7867  0ED1  2ED3               	goto	u159_21
  7868  0ED2  2ED4               	goto	u159_20
  7869  0ED3                     u159_21:
  7870  0ED3  2ED5               	goto	i1l2141
  7871  0ED4                     u159_20:
  7872  0ED4                     i1l2139:
  7873                           
  7874                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  7875  0ED4  01F3               	clrf	_eusartRxHead	;volatile
  7876  0ED5                     i1l2141:
  7877                           
  7878                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  7879  0ED5  3001               	movlw	1
  7880  0ED6  00F6               	movwf	??_EUSART_RxDataHandler
  7881  0ED7  0876               	movf	??_EUSART_RxDataHandler,w
  7882  0ED8  0021               	movlb	1	; select bank1
  7883  0ED9  07C7               	addwf	_eusartRxCount^(0+128),f	;volatile
  7884  0EDA                     i1l207:
  7885  0EDA  0008               	return
  7886  0EDB                     __end_of_EUSART_RxDataHandler:
  7887  007E                     btemp	set	126	;btemp
  7888  007E                     int$flags	set	126
  7889  007E                     wtemp0	set	126
  7890                           
  7891                           	psect	config
  7892                           
  7893                           ;Config register CONFIG1 @ 0x8007
  7894                           ;	Oscillator Selection
  7895                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7896                           ;	Watchdog Timer Enable
  7897                           ;	WDTE = OFF, WDT disabled
  7898                           ;	Power-up Timer Enable
  7899                           ;	PWRTE = OFF, PWRT disabled
  7900                           ;	MCLR Pin Function Select
  7901                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7902                           ;	Flash Program Memory Code Protection
  7903                           ;	CP = OFF, Program memory code protection is disabled
  7904                           ;	Data Memory Code Protection
  7905                           ;	CPD = OFF, Data memory code protection is disabled
  7906                           ;	Brown-out Reset Enable
  7907                           ;	BOREN = ON, Brown-out Reset enabled
  7908                           ;	Clock Out Enable
  7909                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7910                           ;	Internal/External Switchover
  7911                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7912                           ;	Fail-Safe Clock Monitor Enable
  7913                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7914  8007                     	org	32775
  7915  8007  3FE4               	dw	16356
  7916                           
  7917                           ;Config register CONFIG2 @ 0x8008
  7918                           ;	Flash Memory Self-Write Protection
  7919                           ;	WRT = OFF, Write protection off
  7920                           ;	PLL Enable
  7921                           ;	PLLEN = OFF, 4x PLL disabled
  7922                           ;	Stack Overflow/Underflow Reset Enable
  7923                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7924                           ;	Brown-out Reset Voltage Selection
  7925                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7926                           ;	Low-Voltage Programming Enable
  7927                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7928  8008                     	org	32776
  7929  8008  1EFF               	dw	7935

Data Sizes:
    Strings     135
    Constant    20
    Data        2
    BSS         94
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     14      67
    BANK2            80     14      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    S34$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    S34$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_1(CODE[15]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), STR_1(CODE[15]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1362_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[22]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[22]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 62
		 -> STR_7(CODE[22]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[62]), STR_2(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    memset@dest	PTR void  size(1) Largest target is 16
		 -> main@strBuf(BANK2[10]), rx(BANK2[16]), 

    memset@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@strBuf(BANK2[10]), rx(BANK2[16]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_CustumCallBack(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_CustumCallBack(), Absolute function(), TMR4_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> main@strBuf(BANK2[10]), rx(BANK2[16]), 

    string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    S34$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S34$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    S34$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    uart.TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    S34$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    S34$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    S34$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    S34$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    uart.DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    S34$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    S34$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S34$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR4_CustumCallBack->___wmul
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   16678
                                             12 BANK1      2     2      0
                                              0 BANK2     14    14      0
                _EPWM1_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   12823
                                             79 BANK0      1     1      0
                                              5 BANK1      7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   12196
                                             76 BANK0      3     0      3
                                              0 BANK1      5     5      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   11749
                                             59 BANK0     17    15      2
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6985
                                             29 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4754
                                             20 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     310
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    2124
                                             12 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                10     8      2    2171
                                             12 BANK0     10     8      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1732
                                              4 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                2     2      0     248
                                              2 BANK0      2     2      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     1      1     217
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _memset                                              10     6      4    1896
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                   _EPWM1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     512
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     244
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0     244
                   Absolute function *
                _TMR4_CustumCallBack *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_CustumCallBack                                 0     0      0     244
                             ___wmul
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _WDT_Initialize
   _TMR4_SetInterruptHandler
   _memset
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR4_ISR *
     Absolute function(Fake) *
     _TMR4_CustumCallBack *
       ___wmul
     _TMR4_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      E      43       8       83.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      E      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      DF      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 10 16:15:23 2022

                ?_EUSART_SetRxInterruptHandler 0020                    __end_of_TMR4_CustumCallBack 0FCA  
                                           l81 0F10                                             l78 0E5B  
                                           _rx 0140                            ___wmul@multiplicand 0078  
                                          l222 0E28                                            l231 0E31  
                                          l303 0E0D                                            l225 0E16  
                                          l219 0E1F                                            l228 0E3A  
                                          l156 0724                                            l180 0F7B  
                                          l181 0F84                                            l262 0DF8  
                                          l190 0E4D                                            l256 0EAA  
                                          l184 0F9E                                            l259 0E05  
                                          l372 0E7E                                            l287 0E94  
                                          l705 04B8                                            l394 0E43  
                                          l706 04C9                                            l692 03CB  
                                          l693 03DC                                            _PR2 001B  
                                          _PR4 0416                                            _abs 0F11  
                       ??_EUSART_RxDataHandler 0076                                            _pad 0687  
               ?_EUSART_SetFramingErrorHandler 0020                                _TMR2_Initialize 0E06  
                                          wreg 0009                                           l1111 066C  
                                         l1113 0686                                           l1121 00D0  
                                         l1122 00E6                                           ?_abs 0033  
                                         l1052 0577                                           l1108 064A  
                                         l1116 00AA                                           l1125 0156  
                                         l1117 00B3                                           l1144 02D7  
                                         l1161 0F2C                                           l1065 0EC0  
                                         l1154 0FFF                                           l1139 01C9  
                                         l1092 06A1                                           l1173 0765  
                                         l1181 0F74                                           l1158 0F2C  
                                         l1095 06C3                                           l1097 06DF  
                                         l3201 0582                                           l1187 0EF4  
                                         l3211 05A7                                           l3203 0586  
                                         l3221 05D6                                           l3213 05AF  
                                         l3205 0586                                           l3039 0EF5  
                                         l3063 0E95                                           l3151 04D7  
                                         l3223 05E4                                           l3215 05B7  
                                         l3207 0592                                           l3161 04FD  
                                         l3153 04DF                                           l3145 04CC  
                                         l2601 02DA                                           l3225 05F0  
                                         l3217 05C2                                           l3209 059A  
                                         l3171 0528                                           l3163 0506  
                                         l3155 04EB                                           l3147 04D0  
                                         l2611 0335                                           l2603 02E4  
                                         l3227 05FD                                           l3219 05D1  
                                         l3181 055C                                           l3173 053D  
                                         l3165 0512                                           l2701 0634  
                                         l2621 035B                                           l2613 0340  
                                         l2605 0306                                           l3229 0608  
                                         l3183 0561                                           l3167 051E  
                                         l3159 04F5                                           l2551 0F7F  
                                         l2711 0659                                           l2703 0642  
                                         l2631 039A                                           l2623 035F  
                                         l2615 034C                                           l2607 0311  
                                         l3185 0569                                           l3177 0547  
                                         l2561 0F99                                           l2553 0F85  
                                         l2713 065E                                           l2625 0367  
                                         l2617 034F                                           l2633 03A8  
                                         l2609 0330                                           l2641 03E9  
                                         l2721 0063                                           l2801 0200  
                                         l3193 0578                                           l3187 056D  
                                         l3179 0558                                           l2555 0F8E  
                                         l2563 0F9C                                           l2547 0F75  
                                         l2571 0730                                           l2715 0670  
                                         l2707 0648                                           l2635 03AD  
                                         l2627 0389                                           l2619 0357  
                                         l2651 0445                                           l2643 040B  
                                         l2731 00C2                                           l2723 0073  
                                         l2811 0233                                           l2803 0208  
                                         l3195 057B                                           l2901 0DFF  
                                         l3189 0571                                           l2557 0F92  
                                         l2549 0F75                                           l2565 0E46  
                                         l2573 0735                                           l2717 067F  
                                         l2709 064D                                           l2629 0399  
                                         l2661 0487                                           l2653 044D  
                                         l2645 0416                                           l2637 03DD  
                                         l2581 0EDB                                           l2741 00EA  
                                         l2733 00C8                                           l2725 0086  
                                         l2821 027F                                           l2813 0244  
                                         l2805 0214                                           l3197 057C  
                                         l2903 0E02                                           l2911 0E6E  
                                         l2559 0F98                                           l2575 073F  
                                         l2567 0725                                           l2655 0451  
                                         l2663 0495                                           l2647 0435  
                                         l2639 03DF                                           l2591 0F4E  
                                         l2583 0EE1                                           l2671 0695  
                                         l2751 0129                                           l2743 00ED  
                                         l2735 00D8                                           l2727 008C  
                                         l2823 0290                                           l2831 02A9  
                                         l2815 024C                                           l3199 057D  
                                         l2905 0E03                                           l2921 0E06  
                                         l2913 0E6F                                           l2577 075C  
                                         l2569 072B                                           l2665 049A  
                                         l2657 0455                                           l2649 0442  
                                         l2593 0F51                                           l2585 0EE5  
                                         l2681 06B5                                           l2673 069A  
                                         l2753 0164                                           l2761 0190  
                                         l2745 00F2                                           l2737 00DE  
                                         l2729 00AF                                           l2833 02B1  
                                         l2825 0298                                           l2817 0265  
                                         l2809 0222                                           l2851 0E54  
                                         l2923 0E09                                           l2915 0E71  
                                         l2907 0DF5                                           l2659 0477  
                                         l2691 0F1F                                           l2595 0F5F  
                                         l2587 0EEE                                           l2683 06C7  
                                         l2675 069F                                           l2667 0689  
                                         l2771 01AA                                           l2763 0197  
                                         l2755 0171                                           l2747 0121  
                                         l2739 00E2                                           l2827 02A3  
                                         l2931 0FD4                                           l2853 0E56  
                                         l2845 0E4E                                           l2781 0E32  
                                         l2861 06EA                                           l2925 0E0A  
                                         l2917 0E73                                           l2909 0E6B  
                                         l2693 0618                                           l2597 0F64  
                                         l2685 06D0                                           l2677 06A4  
                                         l2669 068D                                           l2773 01AE  
                                         l2765 019B                                           l2757 017E  
                                         l2749 0125                                           l2837 02B4  
                                         l2933 0FD7                                           ?_pad 0034  
                                         l2855 0E59                                           l2847 0E51  
                                         l2783 0E17                                           l2871 06FD  
                                         l2863 06F4                                           l2927 0E0B  
                                         l2919 0E7B                                           l2695 061F  
                                         l2599 02D8                                           l2679 06B0  
                                         l2767 019F                                           l2775 01B7  
                                         l2759 018C                                           l2839 02CD  
                                         l2791 01CC                                           l2935 0FEF  
                                         l2849 0E52                                           l2785 0E20  
                                         l2881 0720                                           l2873 06FE  
                                         l2865 06F7                                           l2857 06E0  
                                         l2697 0627                                           l2689 0F11  
                                         l2769 01A5                                           l2793 01DD  
                                         l2937 0FF8                                           l2929 0FCC  
                                         l2787 0E0E                                           l2779 0E29  
                                         l2883 0721                                           l2875 0706  
                                         l2867 06F9                                           l2859 06E2  
                                         l2891 0E82                                           l2699 0630  
                                         l2795 01E5                                           l2955 0EAB  
                                         l2885 0722                                           l2877 070E  
                                         l2869 06FB                                           l2893 0E85  
                                         l2789 0E3B                                           l2797 01EA  
                                         l2957 0EB1                                           l2887 0723  
                                         l2879 071A                                           l2895 0E87  
                                         l2799 01EE                                           l2897 0E8A  
                                         l2889 0E7F                                           l2899 0E8F  
                                         STR_1 0839                                           STR_2 0828  
                                         STR_3 0766                                           STR_4 0848  
                                         STR_5 0858                                           STR_6 0854  
                                         STR_7 07FE                                    main@maxDuty 015C  
                                         u2100 075C                                           u2101 075B  
                                         u2110 0EEE                                           u2111 0EED  
                                         u2040 0F7B                                           u2200 0389  
                                         u2120 0F74                                           u2041 0F7A  
                                         u2105 0758                                           u2201 0388  
                                         u2121 0F73                                           u2050 0F7F  
                                         u2210 03A8                                           u2130 02E4  
                                         u2051 0F7E                                           u2211 03A7  
                                         u2131 02E3                                           u2060 0F98  
                                         u2220 03AD                                           u2300 0477  
                                         u2061 0F97                                           u2221 03AC  
                                         u2205 0385                                           u2301 0476  
                                         _LATA 010C                                           u2070 072B  
                                         u2150 0311                                           u2310 0495  
                                         _LATB 010D                                           u2071 072A  
                                         u2151 0310                                           u2311 0494  
                                         u2080 0730                                           u2400 0634  
                                         u2320 049A                                           u2240 03E9  
                                         u2081 072F                                           u2401 0633  
                                         u2321 0499                                           u2305 0473  
                                         u2241 03E8                                           u2090 073F  
                                         u2410 0647                                           u2170 033D  
                                         u2091 073E                                           u2411 0646  
                                         u2420 066C                                           u2180 034C  
                                         u2260 0416                                           u2340 068D  
                                         u2500 00DE                                           u2421 066B  
                                         u2181 034B                                           u2261 0415  
                                         u2341 068C                                           u2501 00DD  
                                         u2430 0670                                           u2190 035F  
                                         u2350 069A                                           u2510 00E2  
                                         u2431 066F                                           u2191 035E  
                                         u2351 0699                                           u2511 00E1  
                                         u2280 0442                                           u2360 06C3  
                                         u2520 0164                                           u2440 007E  
                                         u2600 01DD                                           u2425 0668  
                                         u2281 0441                                           u2361 06C2  
                                         u2521 0163                                           u2441 007C  
                                         u2601 01DC                                           u2290 0455  
                                         u2370 06C7                                           u2530 0171  
                                         u2450 007F                                           u2610 0200  
                                         u2291 0454                                           u2371 06C6  
                                         u2531 0170                                           u2611 01FF  
                                         u2380 0F1F                                           u2540 017E  
                                         u2460 008C                                           u2620 0233  
                                         u2381 0F1E                                           u2365 06BF  
                                         u2541 017D                                           u2525 0160  
                                         u2461 008B                                           u2621 0232  
                                         u2390 061F                                           u2550 018C  
                                         u2630 0244                                           u2391 061E  
                                         u2551 018B                                           u2631 0243  
                                         u2560 0190                                           u2480 00AF  
                                         u2640 0290                                           u2385 0F1B  
                                         u2561 018F                                           u2545 017A  
                                         u2481 00AE                                           u2641 028F  
                                         u2570 0197                                           u2490 00C2  
                                         u2650 0FF8                                           u2571 0196  
                                         u2555 0188                                           u2491 00C1  
                                         u2651 0FF7                                           u2900 04F4  
                                         u2580 019B                                           u2901 04F3  
                                         u2581 019A                                           u2910 0527  
                                         u2590 01A5                                           u2911 0526  
                                         u2591 01A4                                           u2495 00BE  
                                         u2920 0546                                           u2921 0545  
                                         u2930 0577                                           u2931 0576  
                                         u2940 05C2                                           u2941 05C1  
                                         u2950 05E4                                           u2775 0F06  
                                         u2951 05E3                                           u2960 05FD  
                                         u2961 05FC                                           u2945 05BE  
                                         u2890 04D6                                           u2891 04D5  
                                         u2955 05E0                                           u2965 05F9  
                                         u2977 05A0                                    main@minDuty 015A  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _WPUA 020C                                           _WPUB 020D  
                                         abs@a 0033                                           _dbuf 0120  
                                         _ctoa 0616                                           _main 0578  
                                         _dtoa 0061                                           _prec 00BC  
                                         _uart 0814                                           _nout 00B8  
                                         pad@i 0038                                           pad@p 0035  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 003A                                           btemp 007E  
                                         start 003C                          ??_EPWM1_LoadDutyValue 0022  
                   ??_TMR4_SetInterruptHandler 0022                                          ??_abs 0035  
                                        ??_pad 0037                                  ?_EUSART_Write 0020  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 0E06  
                              __end_of___aodiv 03DD                                          ?_ctoa 002C  
                                        ?_main 0076                                          ?_dtoa 003D  
                              __end_of___aomod 04CA                                          _T2CON 001C  
                                        _T4CON 0417                                          i1l210 0DEB  
                                        i1l203 07DC                                          i1l213 0DF4  
                                        i1l207 0EDA                                          i1l216 0DF0  
                                        i1l351 003A                                          i1l344 001B  
                                        i1l193 07FC                                          i1l345 003A  
                                        i1l442 0FC9                                          i1l346 002C  
                                        i1l196 07FD                                          i1l391 0E6A  
                                        i1l397 0DEC                                          i1l592 0F37  
                                        i1l594 0F4B                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 005B  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0E6B                               __end_of_TMR4_ISR 0E6B  
                                        _flags 0070                                 _WDT_Initialize 0DF5  
                                        _fputc 0725                                          _fputs 0F4C  
                                        pad@fp 003C                                          _width 00BA  
                                        ctoa@c 002C                                          _putch 0E44  
                                        ctoa@l 0031                                          ctoa@w 0033  
                                        dtoa@d 003D                                          dtoa@i 0059  
                                        dtoa@n 0051                                          dtoa@p 004B  
                                        dtoa@s 004F                                          dtoa@w 004D  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 003E  
                                 __end_of_ctoa 0687                                   __end_of_main 0616  
                                 __end_of_dtoa 01CA                                   __end_of_uart 0828  
                               ??_EUSART_Write 0021                        __end_of_TMR2_Initialize 0E0E  
                  ?_INTERRUPT_InterruptManager 0076                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_ctoa 002E                                         ??_main 00D4  
                                       ??_dtoa 0045                         __end_of_WDT_Initialize 0DF9  
    __end_of_EUSART_DefaultFramingErrorHandler 0DEC     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0076             ?_EUSART_DefaultFramingErrorHandler 0076  
            _EUSART_DefaultFramingErrorHandler 0DEB                     _EUSART_OverrunErrorHandler 00D8  
                                       ?_fputc 0024                                         ?_fputs 002C  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         ?_putch 0076  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       i1l2141 0ED5                                         i1l2133 0EC1  
                                       i1l2301 0F9F                                         i1l2135 0ECA  
                                       i1l2151 0F3C                                         i1l2311 0FC7  
                                       i1l2303 0FA4                                         u200_20 0036  
                                       i1l2137 0ECE                                         i1l2153 0F41  
                                       i1l2145 0F2D                                         i1l2305 0FA9  
                                       u200_21 0035                                         i1l2139 0ED4  
                                       i1l2155 0F47                                         i1l2147 0F2F  
                                       i1l2307 0FB5                                         i1l2149 0F33  
                                       i1l2309 0FB7                                         i1l2501 0020  
                                       i1l2503 0025                                         i1l2257 0DF1  
                                       i1l2505 0031                                         i1l2259 0DED  
                                       i1l2451 07F5                                         i1l2443 07DD  
                                       i1l2507 0036                                         i1l2461 07B3  
                                       i1l2453 07F6                                         i1l2445 07E4  
                                       i1l2471 07D2                                         i1l2463 07B9  
                                       i1l2455 07A4                                         i1l2447 07EB  
                                       i1l2473 07D9                                         i1l2465 07BE  
                                       i1l2457 07A9                                         i1l2449 07EF  
                                       i1l2481 0E65                                         i1l2467 07C3  
                                       i1l2459 07AE                                         i1l2469 07C9  
                                       i1l2477 0E5C                                         i1l2493 0006  
                                       i1l2479 0E5E                                         i1l2495 000A  
                                       i1l2497 000F                                         i1l2499 0014  
                                       u160_20 0F33                                         u160_21 0F32  
                                       u161_25 0F38                                         u170_20 0FB5  
                                       u170_21 0FB4                                         u162_25 0F3D  
                                       u163_20 0F47                                         u163_21 0F46  
                                       u190_20 07D2                                         u190_21 07D1  
                                       u159_20 0ED4                                         u191_20 0E65  
                                       u159_21 0ED3                                         u191_21 0E64  
                                       u169_20 0FA4                                         u169_21 0FA3  
                                       u186_20 07E4                                         u194_20 000A  
                                       u186_21 07E3                                         u194_21 0009  
                                       u187_20 07F5                                         u195_20 000F  
                                       u187_21 07F4                                         u195_21 000E  
                                       u188_20 07AE                                         u196_20 0014  
                                       u188_21 07AD                                         u196_21 0013  
                                       u189_20 07BE                                         u197_20 0020  
                                       u189_21 07BD                                         u197_21 001F  
                                       u198_20 0025                                         u198_21 0024  
                                       u199_20 0031                                         u199_21 0030  
                                       _OSCCON 0099                                         u214lld 0303  
                                       u223lld 03CB                                         u216lld 0330  
                                       u233lld 04B8                                         u225lld 0408  
                                       u227lld 0435                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         u247lld 00AA  
                                       _WDTCON 0097                                   _CCPTMRS0bits 029E  
                                 vfprintf@cfmt 00CB                                      ??___aodiv 0030  
                                    ??___aomod 0030                                         ___wmul 0F2D  
                          _EUSART_Transmit_ISR 07DD                                         _memset 04CA  
                      __end_of_TMR4_Initialize 0E7F                                         _printf 0EAB  
                                       pad@buf 0034                                         ctoa@fp 0035  
                                       dtoa@fp 004A                                         _string 00E1  
                                       _strlen 0EDB           __end_of_TMR4_DefaultInterruptHandler 0DED  
        __size_of_TMR4_DefaultInterruptHandler 0001                   _TMR4_DefaultInterruptHandler 0DEC  
                                       fputc@c 0024                                         fputs@c 0030  
                                       fputs@i 0031                                         fputs@s 0033  
                              ?_WDT_Initialize 0076                               __end_of_vfprintf 1000  
     TMR4_SetInterruptHandler@InterruptHandler 0020                           ?_EUSART_Transmit_ISR 0076  
                            _SYSTEM_Initialize 0E95                        __end_of__initialization 005D  
                           ?_SYSTEM_Initialize 0076           __end_of_EUSART_SetTxInterruptHandler 0E3B  
        __size_of_EUSART_SetTxInterruptHandler 0009                   _EUSART_SetTxInterruptHandler 0E32  
                            ?_EPWM1_Initialize 0076                                 __pcstackCOMMON 0076  
                                 __pidataBANK1 0002                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR4_ISR 0076                             ??_EPWM1_Initialize 0020  
                                __end_of_fputc 0766                                  __end_of_fputs 0F75  
                                __end_of_putch 0E4E                               ?_TMR2_Initialize 0076  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 00A0  
                ?_TMR4_DefaultInterruptHandler 0076                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_fputc 0027                      __end_of_SYSTEM_Initialize 0EAB  
                                      ??_fputs 002D                          ??_EUSART_Transmit_ISR 0076  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0F9F  
                  __size_of_EUSART_Receive_ISR 0039                          _TMR4_InterruptHandler 00D6  
                                   __pmaintext 0578                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00DE                                        ?___wmul 0076  
                                   ??_TMR4_ISR 007C                                     __pintentry 0004  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                                        ?_memset 0020  
                             ?_TMR4_Initialize 0076                                        _APFCON0 011D  
                                      _APFCON1 011E                   ??_EUSART_DefaultErrorHandler 0077  
                                      ?_printf 00CD                                        ?_strlen 0020  
                                _eusartRxCount 00C7                   __size_of_TMR4_CustumCallBack 002B  
                           __size_of_vfpfcnvrt 010E                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                     ??_EUSART_SetErrorHandler 0022                    __end_of_EPWM1_LoadDutyValue 0F11  
          __size_of_EUSART_DefaultErrorHandler 0004                                        ___aodiv 02D8  
                                      ___aomod 03DD                                __size_of___wmul 001F  
                                    ?_vfprintf 006C                                __size_of_memset 00AE  
                                      __ptext1 0EAB                                        __ptext2 0FCA  
                                      __ptext3 01CA                                        __ptext4 0061  
                                      __ptext5 0687                                        __ptext6 0EDB  
                                      __ptext7 0F4C                                        __ptext8 0F11  
                                      __ptext9 03DD                                __size_of_printf 0016  
                              __size_of_strlen 001A                          _OSCILLATOR_Initialize 0DFF  
                                    _T2CONbits 001C                                   __size_of_abs 001C  
                                 __size_of_pad 0059                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 0020              __size_of_TMR4_SetInterruptHandler 0009  
                    ?_TMR4_SetInterruptHandler 0020                     __size_of_SYSTEM_Initialize 0016  
                                      clrloop0 0DFA                           end_of_initialization 005D  
               ??_TMR4_DefaultInterruptHandler 0076          __end_of_EUSART_SetOverrunErrorHandler 0E29  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 0E20  
                                      fputc@fp 0026                                        memset@c 0020  
                                      memset@k 0026                                        memset@n 0022  
                                      memset@s 0029                                        fputs@fp 002C  
                                   _tmr4_count 00C4                              _EUSART_Initialize 06E0  
                                _old_temp_duty 00BE                             ?_EUSART_Initialize 0076  
                            __end_of_vfpfcnvrt 02D8                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0000                             _EUSART_is_tx_ready 0000  
                                   ??_vfprintf 00C8                                        strlen@a 0023  
                                      strlen@s 0020                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                                    _PORTAbits 000C                          __size_of_EUSART_Write 002A  
              __size_of_EUSART_SetErrorHandler 0009                      __end_of_EUSART_Initialize 0725  
                                    _TXSTAbits 019E                                     main@strBuf 0150  
           __end_of_EUSART_DefaultErrorHandler 0DF1                     _EUSART_DefaultErrorHandler 0DED  
                                  vfpfcnvrt@ap 005C                                    vfpfcnvrt@fp 006B  
                                  vfpfcnvrt@ll 0062                                 __end_of___wmul 0F4C  
                                 _EUSART_Write 0F75                              __size_of_TMR4_ISR 000F  
                       ?_OSCILLATOR_Initialize 0076                                 __end_of_memset 0578  
                               __end_of_printf 0EC1                                 __end_of_strlen 0EF5  
                          start_initialization 003E                      __size_of_EPWM1_Initialize 000E  
              __size_of_PIN_MANAGER_Initialize 0016                                    __end_of_abs 0F2D  
                                  __end_of_pad 06E0   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                                    putch@txData 0023  
                 EPWM1_LoadDutyValue@dutyValue 0020                             _tempsignalon_count 00C2  
                          _TMR4_CustumCallBack 0F9F                 ?_EUSART_SetOverrunErrorHandler 0020  
                                  vfprintf@fmt 006C                     _EUSART_FramingErrorHandler 00DA  
                                     ??___wmul 007A                         _EUSART_SetErrorHandler 0E0E  
                                  __pdataBANK1 00E1                                       ??_memset 0024  
                                   memset@dest 0028                                       ??_printf 006F  
                                     ??_strlen 0022                    __end_of_EUSART_Transmit_ISR 07FE  
                         ?_TMR4_CustumCallBack 0076                                    __pbssCOMMON 0070  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00C8                                  __pcstackBANK2 0150  
                             ___aodiv@dividend 0028                       __size_of_TMR2_Initialize 0008  
                   __end_of_EUSART_Receive_ISR 07DD                     __size_of_EUSART_Initialize 0045  
             _EUSART_RxDefaultInterruptHandler 00DC                                      __pnvBANK1 00D6  
                                    __pnvBANK2 015E                   __end_of_EUSART_RxDataHandler 0EDB  
                       _PIN_MANAGER_Initialize 0E7F                                      _dtoa$1427 0048  
                                     ?___aodiv 0020                                       ?___aomod 0020  
             __end_of_TMR4_SetInterruptHandler 0E44                               ___aodiv@quotient 0033  
                                 _eusartRxHead 0073                                   _eusartTxHead 0075  
                                 _eusartRxTail 0072                                   _eusartTxTail 0074  
                 ??_INTERRUPT_InterruptManager 007C                              __size_of_vfprintf 0036  
                      _eusartTxBufferRemaining 00E0                          ??_TMR4_CustumCallBack 007C  
                     __size_of_TMR4_Initialize 0014                                 __size_of_fputc 0041  
                               __size_of_fputs 0029                                 __size_of_putch 000A  
                               _eusartRxBuffer 00A8                                 _eusartTxBuffer 00B0  
                               ___wmul@product 007A         EUSART_SetErrorHandler@interruptHandler 0020  
                                    clear_ram0 0DF9                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 00C6  
          __size_of_INTERRUPT_InterruptManager 0038                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR3bits 0013  
                 __size_of_EPWM1_LoadDutyValue 001C                              _EUSART_is_tx_done 0000  
                                    _temp_duty 00C0      __end_of_EUSART_DefaultOverrunErrorHandler 0DF5  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0076  
           ?_EUSART_DefaultOverrunErrorHandler 0076              _EUSART_DefaultOverrunErrorHandler 0DF1  
                                     _TMR4_ISR 0E5C                                       _PSTR1CON 0296  
                                    _vfpfcnvrt 01CA                              ___wmul@multiplier 0076  
                             _EPWM1_Initialize 0E4E                                    _EUSART_Read 0000  
                                   vfpfcnvrt@c 006A                              ??_TMR2_Initialize 0020  
                                   vfprintf@ap 006E                                     vfprintf@fp 00CA  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 015E  
                             __size_of___aodiv 0105                               __size_of___aomod 00ED  
                  ?_EUSART_DefaultErrorHandler 0076                                     ?_vfpfcnvrt 005B  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0031  
                     _TMR4_SetInterruptHandler 0E3B                           _EUSART_RxDataHandler 0EC1  
                                     __ptext10 02D8                                       __ptext11 0616  
                                     __ptext20 0E06                                       __ptext12 0725  
                                     __ptext21 0E7F                                       __ptext13 0E44  
                                     __ptext30 0EF5                                       __ptext22 0DFF  
                                     __ptext14 0F75                                       __ptext23 06E0  
                                     __ptext15 04CA                                       __ptext40 0DED  
                                     __ptext32 0E5C                                       __ptext24 0E32  
                                     __ptext16 0E95                                       __ptext41 0EC1  
                                     __ptext33 0F9F                                       __ptext25 0E29  
                                     __ptext17 0DF5                                       __ptext34 0DEC  
                                     __ptext26 0E20                                       __ptext18 0E6B  
                                     __ptext35 0F2D                                       __ptext27 0E17  
                                     __ptext19 0E3B                                       __ptext36 07DD  
                                     __ptext28 0E0E                                       __ptext37 07A4  
                                     __ptext29 0E4E                                       __ptext38 0DF1  
                                     __ptext39 0DEB                              ??_TMR4_Initialize 0022  
                                __size_of_ctoa 0071                                  __size_of_main 009E  
                                __size_of_dtoa 0169                        ?_EUSART_SetErrorHandler 0020  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
                                     _vfprintf 0FCA             __end_of_INTERRUPT_InterruptManager 003C  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00CD  
        __end_of_EUSART_SetFramingErrorHandler 0E20         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 0E17                               ___aomod@dividend 0028  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0076  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0076                 __end_of_EUSART_SetErrorHandler 0E17  
         __end_of_EUSART_SetRxInterruptHandler 0E32          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 0E29                                       printf@ap 00D3  
                           _EUSART_Receive_ISR 07A4  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 005D  
                              ___aomod@counter 0031                                  __pstringtext1 0814  
                                __pstringtext2 0766                                  __pstringtext3 07FE  
                                __pstringtext4 0828                                  __pstringtext5 0839  
                                __pstringtext6 0848                                  __pstringtext7 0854  
                                __pstringtext8 0858                                  __pstringtext9 0000  
                          ?_EUSART_Receive_ISR 0076                            _EPWM1_LoadDutyValue 0EF5  
                           EUSART_Write@txData 0020                   __size_of_EUSART_Transmit_ISR 0021  
                                 ___aodiv@sign 0032                 __end_of_PIN_MANAGER_Initialize 0E95  
                         ??_EUSART_Receive_ISR 0077                                   ___aomod@sign 0032  
                     __end_of_EPWM1_Initialize 0E5C                           ?_EPWM1_LoadDutyValue 0020  
